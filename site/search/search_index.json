{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"en/uftrace-dump/","text":"% UFTRACE-DUMP(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-dump - Print raw tracing data in the data files SYNOPSIS uftrace dump [ options ] DESCRIPTION This command shows raw tracing data recorded in the data file. The dump format can be configured by additional options such as --chrome, --flame-graph, or --graphviz. DUMP OPTIONS --chrome : Show JSON style output as used by the Google Chrome tracing facility. --flame-graph : Show FlameGraph style output viewable by modern web browsers (after processing by the FlameGraph tool). --graphviz : Show DOT style output used by the graphviz toolkit. --mermaid : Show graph as mermaid flowchart diagram. It can be rendered in the browser. --debug : Show hex dump of data as well --sample-time= TIME : Apply sampling time when generating output for --flame-graph. By default, it tries to find a period from 1 usec to 1 sec where it keeps the total number of samples under 1 million (in a single-threaded program). You can override the sampling time with this option explicitly. Note that functions which ran less than the sampling time will be removed from the output and functions ran longer than the time will be shown as larger. --no-args : Do not show function arguments and return value. COMMON OPTIONS -F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth= DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used. COMMON ANALYSIS OPTIONS -H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions called outside of user functions. This option is only meaningful when used with --chrome, --flame-graph or --graphviz options. --kernel-only : Dump kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. This option is only meaningful when used with --chrome, --flame-graph or --graphviz options. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1). EXAMPLE This command dumps data like below: $ uftrace record abc $ uftrace dump uftrace file header: magic = 4674726163652100 uftrace file header: version = 4 uftrace file header: header size = 40 uftrace file header: endian = 1 (little) uftrace file header: class = 2 (64 bit) uftrace file header: features = 0x63 (PLTHOOK | TASK_SESSION | SYM_REL_ADDR | MAX_STACK) uftrace file header: info = 0x3ff reading 23043.dat 105430.415350255 23043: [entry] __monstartup(4004d0) depth: 0 105430.415351178 23043: [exit ] __monstartup(4004d0) depth: 0 105430.415351932 23043: [entry] __cxa_atexit(4004f0) depth: 0 105430.415352687 23043: [exit ] __cxa_atexit(4004f0) depth: 0 105430.415353833 23043: [entry] main(400512) depth: 0 105430.415353992 23043: [entry] a(4006b2) depth: 1 105430.415354112 23043: [entry] b(4006a0) depth: 2 105430.415354230 23043: [entry] c(400686) depth: 3 105430.415354425 23043: [entry] getpid(4004b0) depth: 4 105430.415355035 23043: [exit ] getpid(4004b0) depth: 4 105430.415355549 23043: [exit ] c(400686) depth: 3 105430.415355761 23043: [exit ] b(4006a0) depth: 2 105430.415355943 23043: [exit ] a(4006b2) depth: 1 105430.415356109 23043: [exit ] main(400512) depth: 0 $ uftrace dump --chrome -F main {\"traceEvents\":[ {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"main\"}, {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415356,\"ph\":\"E\",\"pid\":23043,\"name\":\"main\"} ], \"metadata\": { \"command_line\":\"uftrace record abc \", \"recorded_time\":\"Tue May 24 19:44:54 2016\" } } $ uftrace dump --flame-graph --sample-time 1us main 1 main;a;b;c 1 $ uftrace dump --graphviz \\# command_line \"uftrace record tests/t-abc\" digraph \"/home/m/git/uftrace/tests/t-abc\" { \\# Attributes splines=ortho; concentrate=true; node [shape=\"rect\",fontsize=\"7\",style=\"filled\"]; edge [fontsize=\"7\"]; \\# Elements main[xlabel = \"Calls : 1\"] main->a[xlabel = \"Calls : 1\"] a->b[xlabel = \"Calls : 1\"] b->c[xlabel = \"Calls : 1\"] c->getpid[xlabel = \"Calls : 1\"] } SEE ALSO uftrace (1), uftrace-record (1), uftrace-replay (1)","title":"Uftrace dump"},{"location":"en/uftrace-dump/#name","text":"uftrace-dump - Print raw tracing data in the data files","title":"NAME"},{"location":"en/uftrace-dump/#synopsis","text":"uftrace dump [ options ]","title":"SYNOPSIS"},{"location":"en/uftrace-dump/#description","text":"This command shows raw tracing data recorded in the data file. The dump format can be configured by additional options such as --chrome, --flame-graph, or --graphviz.","title":"DESCRIPTION"},{"location":"en/uftrace-dump/#dump-options","text":"--chrome : Show JSON style output as used by the Google Chrome tracing facility. --flame-graph : Show FlameGraph style output viewable by modern web browsers (after processing by the FlameGraph tool). --graphviz : Show DOT style output used by the graphviz toolkit. --mermaid : Show graph as mermaid flowchart diagram. It can be rendered in the browser. --debug : Show hex dump of data as well --sample-time= TIME : Apply sampling time when generating output for --flame-graph. By default, it tries to find a period from 1 usec to 1 sec where it keeps the total number of samples under 1 million (in a single-threaded program). You can override the sampling time with this option explicitly. Note that functions which ran less than the sampling time will be removed from the output and functions ran longer than the time will be shown as larger. --no-args : Do not show function arguments and return value.","title":"DUMP OPTIONS"},{"location":"en/uftrace-dump/#common-options","text":"-F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth= DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used.","title":"COMMON OPTIONS"},{"location":"en/uftrace-dump/#common-analysis-options","text":"-H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions called outside of user functions. This option is only meaningful when used with --chrome, --flame-graph or --graphviz options. --kernel-only : Dump kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. This option is only meaningful when used with --chrome, --flame-graph or --graphviz options. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1).","title":"COMMON ANALYSIS OPTIONS"},{"location":"en/uftrace-dump/#example","text":"This command dumps data like below: $ uftrace record abc $ uftrace dump uftrace file header: magic = 4674726163652100 uftrace file header: version = 4 uftrace file header: header size = 40 uftrace file header: endian = 1 (little) uftrace file header: class = 2 (64 bit) uftrace file header: features = 0x63 (PLTHOOK | TASK_SESSION | SYM_REL_ADDR | MAX_STACK) uftrace file header: info = 0x3ff reading 23043.dat 105430.415350255 23043: [entry] __monstartup(4004d0) depth: 0 105430.415351178 23043: [exit ] __monstartup(4004d0) depth: 0 105430.415351932 23043: [entry] __cxa_atexit(4004f0) depth: 0 105430.415352687 23043: [exit ] __cxa_atexit(4004f0) depth: 0 105430.415353833 23043: [entry] main(400512) depth: 0 105430.415353992 23043: [entry] a(4006b2) depth: 1 105430.415354112 23043: [entry] b(4006a0) depth: 2 105430.415354230 23043: [entry] c(400686) depth: 3 105430.415354425 23043: [entry] getpid(4004b0) depth: 4 105430.415355035 23043: [exit ] getpid(4004b0) depth: 4 105430.415355549 23043: [exit ] c(400686) depth: 3 105430.415355761 23043: [exit ] b(4006a0) depth: 2 105430.415355943 23043: [exit ] a(4006b2) depth: 1 105430.415356109 23043: [exit ] main(400512) depth: 0 $ uftrace dump --chrome -F main {\"traceEvents\":[ {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"main\"}, {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415356,\"ph\":\"E\",\"pid\":23043,\"name\":\"main\"} ], \"metadata\": { \"command_line\":\"uftrace record abc \", \"recorded_time\":\"Tue May 24 19:44:54 2016\" } } $ uftrace dump --flame-graph --sample-time 1us main 1 main;a;b;c 1 $ uftrace dump --graphviz \\# command_line \"uftrace record tests/t-abc\" digraph \"/home/m/git/uftrace/tests/t-abc\" { \\# Attributes splines=ortho; concentrate=true; node [shape=\"rect\",fontsize=\"7\",style=\"filled\"]; edge [fontsize=\"7\"]; \\# Elements main[xlabel = \"Calls : 1\"] main->a[xlabel = \"Calls : 1\"] a->b[xlabel = \"Calls : 1\"] b->c[xlabel = \"Calls : 1\"] c->getpid[xlabel = \"Calls : 1\"] }","title":"EXAMPLE"},{"location":"en/uftrace-dump/#see-also","text":"uftrace (1), uftrace-record (1), uftrace-replay (1)","title":"SEE ALSO"},{"location":"en/uftrace-graph/","text":"% UFTRACE-GRAPH(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-graph - Show function call graph SYNOPSIS uftrace graph [ options ] [ FUNCTION ] DESCRIPTION This command shows a function call graph for the binary or the given function in a uftrace record datafile. If the function name is omitted, whole function call graph will be shown. If a user provides a function name, it will show backtrace and calling functions. Each function in the output is annotated with a hit count and the total time spent running that function. GRAPH OPTIONS -f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: total, self and addr. Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'total'. See FIELDS . --task : Print task graph instead of normal function graph. Each node in the output shows a process or thread(printed in green color). --srcline : Show source location of each function if available. --format= TYPE : Show format style output. Currently, normal and html styles are supported. COMMON OPTIONS -F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used. COMMON ANALYSIS OPTIONS -H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1). EXAMPLES This command show data like below: $ uftrace record loop $ uftrace replay # DURATION TID FUNCTION [24447] | main() { [24447] | foo() { 8.134 us [24447] | loop(); 7.296 us [24447] | loop(); 7.234 us [24447] | loop(); 24.324 us [24447] | } /* foo */ [24447] | foo() { 7.234 us [24447] | loop(); 7.231 us [24447] | loop(); 7.231 us [24447] | loop(); 22.302 us [24447] | } /* foo */ [24447] | bar() { 10.100 ms [24447] | usleep(); 10.138 ms [24447] | } /* bar */ 10.293 ms [24447] | } /* main */ Running the graph command shows function call graph like below: $ uftrace graph # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) ========== FUNCTION CALL GRAPH ========== 10.293 ms : (1) loop 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep The graph root is not a function, but the executing process itself. The left side shows total time running the function on the right side. The number in parentheses before the function name is the invocation count. As you can see, main was called once and ran for 10 msec. It called foo twice and then foo called loop 6 times in total. The printed time is the total execution time for all function invocations. It can also be seen that main called bar once and that bar then called usleep once. To minimize nesting, the output shows calls at the same level if only a single call path exists. Since the nodes usleep and main are not directly connected, usleep is not called from main directly. Running the graph command on the main function shows called functions and backtrace like below: $ uftrace graph main # Function Call Graph for 'main' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 1, time 10.293 ms [0] main (0x4004f0) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep Note that the 'main' is the top-level function so it has no backtrace above itself. Running the graph command on a leaf function looks like below. $ uftrace graph loop # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 6, time 44.360 us [0] main (0x4004b0) [1] foo (0x400622) [2] loop (0x400f5f6) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 44.360 us : (6) loop The backtrace shows that loop is called from foo and that foo is called from main . Since loop is a leaf function, it didn't call any other function. In this case, loop was called only from a single path so backtrace #0 is hit 6 times. While graph command shows function-level call graph, --task option makes the output in task-level graph which shows how processes and threads are created. The term here task includes process and thread. For example, the task graph of GCC compiler can be shown as follows: $ uftrace record --force /usr/bin/gcc hello.c $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 159.854 ms 4.440 ms [ 82723] : gcc : | 90.951 ms 90.951 ms [ 82734] : +----cc1 : | 17.150 ms 17.150 ms [ 82735] : +----as : | 45.183 ms 6.076 ms [ 82736] : +----collect2 : | 38.880 ms 38.880 ms [ 82737] : +----ld The above output shows gcc created cc1 , as , and collect2 processes then collect2 created ld process. TOTAL TIME is the lifetime of the task from its creation to termination, and SELF TIME is also lifetime, but it excludes internal idle time. TID is the thread id of the task. The following shows task graph of uftrace recording itself. It shows uftrace created t-abc process, and also created many threads whose names are all WriterThread . $ uftrace record -P. ./uftrace record -d uftrace.data.abc t-abc $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 404.929 ms 321.692 ms [ 4230] : uftrace : | 278.662 us 278.662 us [ 4241] : +----t-abc : | 33.754 ms 4.061 ms [ 4242] : +-WriterThread 27.415 ms 120.992 us [ 4244] : +-WriterThread 27.212 ms 8.119 ms [ 4245] : +-WriterThread 26.754 ms 6.616 ms [ 4248] : +-WriterThread 26.859 ms 8.154 ms [ 4247] : +-WriterThread 26.509 ms 1.645 ms [ 4243] : +-WriterThread 25.320 ms 57.350 us [ 4246] : +-WriterThread 24.757 ms 4.391 ms [ 4249] : +-WriterThread 26.040 ms 3.707 ms [ 4250] : +-WriterThread 24.004 ms 3.999 ms [ 4251] : +-WriterThread Please note that the indentation depth of thread is different from process. Running the graph command with --srcline option shows source location in call graph like below: $ uftrace record --srcline t-abc $ uftrace graph --srcline # Function Call Graph for 't-abc' (session: 60195bac953d8736) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION [SOURCE] 8.909 us : (1) t-abc 1.260 us : +-(1) __monstartup : | 0.179 us : +-(1) __cxa_atexit : | 7.470 us : +-(1) main [tests/s-abc.c:26] 5.522 us : (1) a [tests/s-abc.c:11] 4.912 us : (1) b [tests/s-abc.c:16] 4.176 us : (1) c [tests/s-abc.c:21] 0.794 us : (1) getpid FIELDS The uftrace allows for user to customize the graph output with some of fields. Here the field means info on the left side of the colon (:) character. By default it uses time only, but you can use other fields in any order like: $ uftrace record tests/t-abc $ uftrace graph -f total,self,addr # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME SELF TIME ADDRESS FUNCTION 10.145 ms 561f652cd610 : (1) t-sort 10.145 ms 39.890 us 561f652cd610 : (1) main 16.773 us 0.734 us 561f652cd7ce : +-(2) foo 16.039 us 16.039 us 561f652cd7a0 : | (6) loop : | 10.088 ms 14.740 us 561f652cd802 : +-(1) bar 10.073 ms 10.073 ms 561f652cd608 : (1) usleep Each field has following meaning: total: function execution time in total self : function execution time excluding its children's addr : address of the function The default value is 'total'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +addr\" is as same as \"-f total,addr\". And it also accepts a special field name of 'none' which disables the field display and shows function output only. $ uftrace graph -f none # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== (1) t-sort (1) main +-(2) foo | (6) loop | +-(1) bar (1) usleep This output can be useful when comparing two different call graph outputs using diff tool. It also supports field customization for task graph. The default field is set to total,self,tid , but the field option can also be used as follows: $ uftrace graph --task -f tid,self ========== TASK GRAPH ========== # TID SELF TIME TASK NAME [ 82723] 4.440 ms : gcc : | [ 82734] 90.951 ms : +----cc1 : | [ 82735] 17.150 ms : +----as : | [ 82736] 6.076 ms : +----collect2 : | [ 82737] 38.880 ms : +----ld Each field has following meaning: total: total task lifetime from its creation to termination self : task execution time excluding its idle time tid : task id (obtained by gettid(2)) It also accepts a special field none , which hides all the fields on the left. $ uftrace graph --task -f none ========== TASK GRAPH ========== gcc | +----cc1 | +----as | +----collect2 | +----ld SEE ALSO uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1)","title":"Uftrace graph"},{"location":"en/uftrace-graph/#name","text":"uftrace-graph - Show function call graph","title":"NAME"},{"location":"en/uftrace-graph/#synopsis","text":"uftrace graph [ options ] [ FUNCTION ]","title":"SYNOPSIS"},{"location":"en/uftrace-graph/#description","text":"This command shows a function call graph for the binary or the given function in a uftrace record datafile. If the function name is omitted, whole function call graph will be shown. If a user provides a function name, it will show backtrace and calling functions. Each function in the output is annotated with a hit count and the total time spent running that function.","title":"DESCRIPTION"},{"location":"en/uftrace-graph/#graph-options","text":"-f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: total, self and addr. Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'total'. See FIELDS . --task : Print task graph instead of normal function graph. Each node in the output shows a process or thread(printed in green color). --srcline : Show source location of each function if available. --format= TYPE : Show format style output. Currently, normal and html styles are supported.","title":"GRAPH OPTIONS"},{"location":"en/uftrace-graph/#common-options","text":"-F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used.","title":"COMMON OPTIONS"},{"location":"en/uftrace-graph/#common-analysis-options","text":"-H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1).","title":"COMMON ANALYSIS OPTIONS"},{"location":"en/uftrace-graph/#examples","text":"This command show data like below: $ uftrace record loop $ uftrace replay # DURATION TID FUNCTION [24447] | main() { [24447] | foo() { 8.134 us [24447] | loop(); 7.296 us [24447] | loop(); 7.234 us [24447] | loop(); 24.324 us [24447] | } /* foo */ [24447] | foo() { 7.234 us [24447] | loop(); 7.231 us [24447] | loop(); 7.231 us [24447] | loop(); 22.302 us [24447] | } /* foo */ [24447] | bar() { 10.100 ms [24447] | usleep(); 10.138 ms [24447] | } /* bar */ 10.293 ms [24447] | } /* main */ Running the graph command shows function call graph like below: $ uftrace graph # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) ========== FUNCTION CALL GRAPH ========== 10.293 ms : (1) loop 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep The graph root is not a function, but the executing process itself. The left side shows total time running the function on the right side. The number in parentheses before the function name is the invocation count. As you can see, main was called once and ran for 10 msec. It called foo twice and then foo called loop 6 times in total. The printed time is the total execution time for all function invocations. It can also be seen that main called bar once and that bar then called usleep once. To minimize nesting, the output shows calls at the same level if only a single call path exists. Since the nodes usleep and main are not directly connected, usleep is not called from main directly. Running the graph command on the main function shows called functions and backtrace like below: $ uftrace graph main # Function Call Graph for 'main' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 1, time 10.293 ms [0] main (0x4004f0) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep Note that the 'main' is the top-level function so it has no backtrace above itself. Running the graph command on a leaf function looks like below. $ uftrace graph loop # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 6, time 44.360 us [0] main (0x4004b0) [1] foo (0x400622) [2] loop (0x400f5f6) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 44.360 us : (6) loop The backtrace shows that loop is called from foo and that foo is called from main . Since loop is a leaf function, it didn't call any other function. In this case, loop was called only from a single path so backtrace #0 is hit 6 times. While graph command shows function-level call graph, --task option makes the output in task-level graph which shows how processes and threads are created. The term here task includes process and thread. For example, the task graph of GCC compiler can be shown as follows: $ uftrace record --force /usr/bin/gcc hello.c $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 159.854 ms 4.440 ms [ 82723] : gcc : | 90.951 ms 90.951 ms [ 82734] : +----cc1 : | 17.150 ms 17.150 ms [ 82735] : +----as : | 45.183 ms 6.076 ms [ 82736] : +----collect2 : | 38.880 ms 38.880 ms [ 82737] : +----ld The above output shows gcc created cc1 , as , and collect2 processes then collect2 created ld process. TOTAL TIME is the lifetime of the task from its creation to termination, and SELF TIME is also lifetime, but it excludes internal idle time. TID is the thread id of the task. The following shows task graph of uftrace recording itself. It shows uftrace created t-abc process, and also created many threads whose names are all WriterThread . $ uftrace record -P. ./uftrace record -d uftrace.data.abc t-abc $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 404.929 ms 321.692 ms [ 4230] : uftrace : | 278.662 us 278.662 us [ 4241] : +----t-abc : | 33.754 ms 4.061 ms [ 4242] : +-WriterThread 27.415 ms 120.992 us [ 4244] : +-WriterThread 27.212 ms 8.119 ms [ 4245] : +-WriterThread 26.754 ms 6.616 ms [ 4248] : +-WriterThread 26.859 ms 8.154 ms [ 4247] : +-WriterThread 26.509 ms 1.645 ms [ 4243] : +-WriterThread 25.320 ms 57.350 us [ 4246] : +-WriterThread 24.757 ms 4.391 ms [ 4249] : +-WriterThread 26.040 ms 3.707 ms [ 4250] : +-WriterThread 24.004 ms 3.999 ms [ 4251] : +-WriterThread Please note that the indentation depth of thread is different from process. Running the graph command with --srcline option shows source location in call graph like below: $ uftrace record --srcline t-abc $ uftrace graph --srcline # Function Call Graph for 't-abc' (session: 60195bac953d8736) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION [SOURCE] 8.909 us : (1) t-abc 1.260 us : +-(1) __monstartup : | 0.179 us : +-(1) __cxa_atexit : | 7.470 us : +-(1) main [tests/s-abc.c:26] 5.522 us : (1) a [tests/s-abc.c:11] 4.912 us : (1) b [tests/s-abc.c:16] 4.176 us : (1) c [tests/s-abc.c:21] 0.794 us : (1) getpid","title":"EXAMPLES"},{"location":"en/uftrace-graph/#fields","text":"The uftrace allows for user to customize the graph output with some of fields. Here the field means info on the left side of the colon (:) character. By default it uses time only, but you can use other fields in any order like: $ uftrace record tests/t-abc $ uftrace graph -f total,self,addr # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME SELF TIME ADDRESS FUNCTION 10.145 ms 561f652cd610 : (1) t-sort 10.145 ms 39.890 us 561f652cd610 : (1) main 16.773 us 0.734 us 561f652cd7ce : +-(2) foo 16.039 us 16.039 us 561f652cd7a0 : | (6) loop : | 10.088 ms 14.740 us 561f652cd802 : +-(1) bar 10.073 ms 10.073 ms 561f652cd608 : (1) usleep Each field has following meaning: total: function execution time in total self : function execution time excluding its children's addr : address of the function The default value is 'total'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +addr\" is as same as \"-f total,addr\". And it also accepts a special field name of 'none' which disables the field display and shows function output only. $ uftrace graph -f none # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== (1) t-sort (1) main +-(2) foo | (6) loop | +-(1) bar (1) usleep This output can be useful when comparing two different call graph outputs using diff tool. It also supports field customization for task graph. The default field is set to total,self,tid , but the field option can also be used as follows: $ uftrace graph --task -f tid,self ========== TASK GRAPH ========== # TID SELF TIME TASK NAME [ 82723] 4.440 ms : gcc : | [ 82734] 90.951 ms : +----cc1 : | [ 82735] 17.150 ms : +----as : | [ 82736] 6.076 ms : +----collect2 : | [ 82737] 38.880 ms : +----ld Each field has following meaning: total: total task lifetime from its creation to termination self : task execution time excluding its idle time tid : task id (obtained by gettid(2)) It also accepts a special field none , which hides all the fields on the left. $ uftrace graph --task -f none ========== TASK GRAPH ========== gcc | +----cc1 | +----as | +----collect2 | +----ld","title":"FIELDS"},{"location":"en/uftrace-graph/#see-also","text":"uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1)","title":"SEE ALSO"},{"location":"en/uftrace-info/","text":"% UFTRACE-INFO(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-info - Print tracing information from the current trace data file SYNOPSIS uftrace info [ options ] DESCRIPTION This command prints metadata recorded in the header of a given trace data file. Alternatively, it can: be used to generate a symbol table of the traced symbols print a task relationship tree for the recorded tasks in the trace OPTIONS --symbols [ EXECUTABLE ] : Generate a symbol table for the given traced EXECUTABLE from the recorded trace data. See the example below for the output format: It will print two symbol tables - normal symbols and dynamic symbols: The normal symbols are traced functions in the executable itself. The dynamic symbols are the traced library functions recorded in the trace. Because only the trace data is used to generate symbol information, it will contain different functions than the symbol table of the executable file itself. --task : Print a task relationship tree instead of the trace metadata. EXAMPLES This command shows information like below: $ uftrace record abc $ uftrace info # system information # ================== # program version : v0.9 ( dwarf python tui perf sched ) # recorded on : Wed Sep 19 17:30:39 2018 # cmdline : uftrace record abc # cpu info : Intel(R) Core(TM) i7-3930K CPU @ 3.20GHz # number of cpus : 12 / 12 (online / possible) # memory info : 19.8 / 23.5 GB (free / total) # system load : 0.02 / 0.07 / 0.11 (1 / 5 / 15 min) # kernel version : Linux 4.5.4-1-ARCH # hostname : sejong # distro : \"Arch Linux\" # # process information # =================== # number of tasks : 1 # task list : 8284(abc) # exe image : /home/namhyung/tmp/abc # build id : a3c50d25f7dd98dab68e94ef0f215edb06e98434 # pattern : regex # exit status : exited with code: 0 # elapsed time : 0.003219479 sec # cpu time : 0.003 / 0.000 sec (sys / user) # context switch : 1 / 1 (voluntary / involuntary) # max rss : 3104 KB # page fault : 0 / 169 (major / minor) # disk iops : 0 / 24 (read / write) To see the symbol table, one can use the --symbols option. $ uftrace info --symbols Normal symbols ============== [ 0] _start (0x400590) size: 42 [ 1] __gmon_start__ (0x4005c0) size: 59 [ 2] a (0x4006c6) size: 19 [ 3] b (0x4006d9) size: 19 [ 4] c (0x4006ec) size: 49 [ 5] main (0x40071d) size: 19 [ 6] __libc_csu_init (0x400730) size: 101 [ 7] __libc_csu_fini (0x4007a0) size: 2 [ 8] atexit (0x4007b0) size: 41 Dynamic symbols =============== [ 0] getpid (0x400530) size: 16 [ 1] _mcleanup (0x400540) size: 16 [ 2] __libc_start_main (0x400550) size: 16 [ 3] __monstartup (0x400560) size: 16 [ 4] mcount (0x400570) size: 16 [ 5] __cxa_atexit (0x400580) size: 16 The --task option shows task family hierarchy. $ uftrace info --task [166399] parent [166401] child SEE ALSO uftrace (1), uftrace-record (1), uftrace-tui (1)","title":"Uftrace info"},{"location":"en/uftrace-info/#name","text":"uftrace-info - Print tracing information from the current trace data file","title":"NAME"},{"location":"en/uftrace-info/#synopsis","text":"uftrace info [ options ]","title":"SYNOPSIS"},{"location":"en/uftrace-info/#description","text":"This command prints metadata recorded in the header of a given trace data file. Alternatively, it can: be used to generate a symbol table of the traced symbols print a task relationship tree for the recorded tasks in the trace","title":"DESCRIPTION"},{"location":"en/uftrace-info/#options","text":"--symbols [ EXECUTABLE ] : Generate a symbol table for the given traced EXECUTABLE from the recorded trace data. See the example below for the output format: It will print two symbol tables - normal symbols and dynamic symbols: The normal symbols are traced functions in the executable itself. The dynamic symbols are the traced library functions recorded in the trace. Because only the trace data is used to generate symbol information, it will contain different functions than the symbol table of the executable file itself. --task : Print a task relationship tree instead of the trace metadata.","title":"OPTIONS"},{"location":"en/uftrace-info/#examples","text":"This command shows information like below: $ uftrace record abc $ uftrace info # system information # ================== # program version : v0.9 ( dwarf python tui perf sched ) # recorded on : Wed Sep 19 17:30:39 2018 # cmdline : uftrace record abc # cpu info : Intel(R) Core(TM) i7-3930K CPU @ 3.20GHz # number of cpus : 12 / 12 (online / possible) # memory info : 19.8 / 23.5 GB (free / total) # system load : 0.02 / 0.07 / 0.11 (1 / 5 / 15 min) # kernel version : Linux 4.5.4-1-ARCH # hostname : sejong # distro : \"Arch Linux\" # # process information # =================== # number of tasks : 1 # task list : 8284(abc) # exe image : /home/namhyung/tmp/abc # build id : a3c50d25f7dd98dab68e94ef0f215edb06e98434 # pattern : regex # exit status : exited with code: 0 # elapsed time : 0.003219479 sec # cpu time : 0.003 / 0.000 sec (sys / user) # context switch : 1 / 1 (voluntary / involuntary) # max rss : 3104 KB # page fault : 0 / 169 (major / minor) # disk iops : 0 / 24 (read / write) To see the symbol table, one can use the --symbols option. $ uftrace info --symbols Normal symbols ============== [ 0] _start (0x400590) size: 42 [ 1] __gmon_start__ (0x4005c0) size: 59 [ 2] a (0x4006c6) size: 19 [ 3] b (0x4006d9) size: 19 [ 4] c (0x4006ec) size: 49 [ 5] main (0x40071d) size: 19 [ 6] __libc_csu_init (0x400730) size: 101 [ 7] __libc_csu_fini (0x4007a0) size: 2 [ 8] atexit (0x4007b0) size: 41 Dynamic symbols =============== [ 0] getpid (0x400530) size: 16 [ 1] _mcleanup (0x400540) size: 16 [ 2] __libc_start_main (0x400550) size: 16 [ 3] __monstartup (0x400560) size: 16 [ 4] mcount (0x400570) size: 16 [ 5] __cxa_atexit (0x400580) size: 16 The --task option shows task family hierarchy. $ uftrace info --task [166399] parent [166401] child","title":"EXAMPLES"},{"location":"en/uftrace-info/#see-also","text":"uftrace (1), uftrace-record (1), uftrace-tui (1)","title":"SEE ALSO"},{"location":"en/uftrace-live/","text":"% UFTRACE-LIVE(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-live - Trace functions in a command during live execution SYNOPSIS uftrace [live] [ options ] COMMAND [ command-options ] DESCRIPTION This command runs COMMAND and prints its functions with time and thread info. This is basically the same as running the uftrace record and uftrace replay commands in turn, but it does not save a data file. This command accepts most options that are accepted by the record or replay commands. COMMON OPTIONS -F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See FILTERS . -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See TRIGGERS . -D DEPTH , --depth= DEPTH : Set global trace limit in nesting level. See FILTERS . -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. See FILTERS . -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. See FILTERS . -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. Applies to replay command, not record. See FILTERS . --no-libcall : Do not record library function invocations. Library calls are normally traced by hooking calls to the resolver function of dynamic linker in the PLT. One can disable it with this option. --no-event : Disable event recording which is used by default. Note that explicit event tracing by --event option is not affected by this. Implies --no-sched . --no-sched : Disable schedule event recording which is used by default. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --disable : DEPRECATED. Use --trace=off instead. --trace= STATE : Set uftrace tracing STATE. Possible states are on and off . Default is on . This is only meaningful when used with a trace_on trigger or with the agent --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used. LIVE OPTIONS --list-event : Show available events in the process. --report : Show live-report before replay. --record : Do not discard the recorded data. -p PID , --pid= PID : Switch to client mode. Forward the supported tracing options to a running target with given PID. See AGENT . RECORD OPTIONS -A SPEC , --argument= SPEC : Record function arguments. This option can be used more than once. See ARGUMENTS . -R SPEC , --retval= SPEC : Record function return values. This option can be used more than once. See ARGUMENTS . -P FUNC , --patch= FUNC : Patch FUNC dynamically. This is only applicable binaries built by gcc with -pg -mfentry -mnop-mcount or clang with -fxray-instrument . This option can be used more than once. See DYNAMIC TRACING . -U FUNC , --unpatch= FUNC : Do not apply dynamic patching for FUNC. This option can be used more than once. See DYNAMIC TRACING . -E EVENT , --event= EVENT : Enable event tracing. The event should be available on the system. -S SCRIPT_PATH , --script= SCRIPT_PATH : Run a given script to do additional work at the entry and exit of function during target program execution. The type of script is detected by the postfix such as '.py' for python. See SCRIPT EXECUTION . -W, --watch= POINT : Add watch point to display POINT if the value is changed. See WATCH POINT . -a, --auto-args : Automatically record arguments and return values of known functions. These are usually functions in standard (C language or system) libraries but if debug info is available it includes functions in the user program. -l, --nest-libcall : Trace function calls between libraries. By default, uftrace only record library call from the main executable. Implies --force . -k, --kernel : Trace kernel functions as well as user functions. Only kernel entry/exit functions will be traced by default. Use the --kernel-depth option to override this. -K DEPTH , --kernel-depth= DEPTH : Set kernel max function depth separately. Implies --kernel . --clock= CLOCK : Set clock source for timestamp recording. CLOCK can be one of 'mono', 'mono_raw', or 'boot'. Default is 'mono'. --signal= TRG : Set trigger on selected signals rather than functions. But there are restrictions so only a few of trigger actions are support for signals. The available actions are: trace_on, trace_off, finish. This option can be used more than once. See TRIGGERS . --nop : Do not record and replay any functions. This is a no-op and only meaningful for performance comparisons. --force : Allow running uftrace even if some problems occur. When uftrace record finds no mcount symbol (which is generated by compiler) in the executable, it quits with an error message since uftrace can not trace the program. However, it is possible that the user is only interested in functions within a dynamically-linked library, in which case this option can be used to cause uftrace to run the program regardless. Also, the -A / --argument and -R / --retval options work only for binaries built with -pg , so uftrace will normally exit when it tries to run binaries built without that option. This option ignores the warning and goes on tracing without the argument and/or return value. --time : Print running time of children in time (1)-style. -e, --estimate-return : Record only ENTRY data for each function. This option is useful when the target program deals with stack in some way. Normally uftrace modifies task's execution stack frame to hook return from the function. However sometimes it makes troubles and it's hard to handle all the cases properly. This option tells uftrace not to hook return address in order to prevent those problems. The return time is estimated as a half of execution time of two consecutive functions. RECORD CONFIG OPTIONS --libmcount-path= PATH : Load libmcount libraries from this path. This is mostly for testing purposes. -b SIZE , --buffer= SIZE : Size of internal buffer in which trace data will be saved. Default size is 128k. --kernel-buffer= SIZE : Set kernel tracing buffer size. The default value (in the kernel) is 1408k. --no-pltbind : Do not bind dynamic symbol address. This option uses the LD_BIND_NOT environment variable to trace library function calls which might be missing due to concurrent (first) accesses. It is not meaningful to use this option with the --no-libcall option. --max-stack= DEPTH : Set the max function stack depth for tracing. Default is 1024. --num-thread= NUM : Use NUM threads to record trace data. Default is 1/4 of online CPUs (but when full kernel tracing is enabled, it will use the full number of CPUs). --libmcount-single : Use single thread version of libmcount for faster recording. This is ignored if the target program links with the pthread library. --rt-prio= PRIO : Boost priority of recording threads to real-time (FIFO) with priority of PRIO . This is particularly useful for high-volume data such as full kernel tracing. --keep-pid : Retain same pid for traced program. For some daemon processes, it is important to have same pid when forked. Running under uftrace normally changes pid as it calls fork() again internally. Note that it might corrupt terminal setting so it'd be better using it with --no-pager option. --no-randomize-addr : Disable ASLR (Address Space Layout Randomization). It makes the target process fix its address space layout. -g, --agent : Spawn an agent thread in the target. At runtime, the agent receives external commands and can change supported tracing options. See AGENT . REPLAY OPTIONS -f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: duration, tid, time, delta, elapsed and addr. Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'duration,tid'. See FIELDS . --flat : Print flat format rather than C-like format. This is usually for debugging and testing purpose. --column-view : Show each task in separate column. This makes easy to distinguish functions in different tasks. --column-offset= DEPTH : When --column-view option is used, this option specifies the amount of offset between each task. Default is 8. --task-newline : Interleave a new line when task is changed. This makes easy to distinguish functions in different tasks. --no-comment : Do not show comments of returned functions. --libname : Show library name along with function name. --no-args : Do not show function arguments and return value. COMMON ANALYSIS OPTIONS -H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See FILTERS . --kernel-full : Show all kernel functions called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --demangle= TYPE : Demangle C++ symbol names. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. However, it is highly recommended to use only elapsed time because there is no way to know the timestamp before actually running the program. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively. FILTERS The uftrace tool supports filtering out uninteresting functions. Filtering is highly recommended since it helps users focus on the interesting functions and reduces the data size. When uftrace is called, it receives two types of function filter; an opt-in filter with -F / --filter and an opt-out filter with -N / --notrace . These filters can be applied either at record time or replay time. For record time, they can be added and removed at runtime from the client, see AGENT . Removing filters is achieved by specifying the @clear suffix for the -F / --filter or -N / --notrace options. The first type of filter is opt-in. By default, it doesn't trace anything. But when one of the specified functions is executed, tracing is started. When the function returns, tracing is stopped again. For example, consider a simple program which calls a() , b() and c() in turn. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c Normally uftrace will trace all the functions from main() to c() . $ uftrace live ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, the command name live is explicitly used, but it can be omitted because uftrace uses live command by default. So the above command can be reused as uftrace ./abc in short. But when the -F b filter option is used, it will not trace main() or a() but only b() and c() . $ uftrace -F b ./abc # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The second type of filter is opt-out. By default, everything is traced, but when one of the specified functions is executed, tracing stops. When the excluded function returns, tracing is started again. In the above example, you can omit the function b() and all calls it makes with the -N option. $ uftrace -N b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ You can hide the function b() only without affecting the calls it makes in its subtree functions with -H option. $ uftrace -H b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The above -H option is especially useful when hiding std namespace functions in C++ programs by using -H ^std:: option setting. If users only care about specific functions and want to know how they are called, one can use the caller filter. It makes the function as leaf and records the parent functions to the function. $ uftrace -C b ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, functions not in the calling path were not shown. Also the function 'c' - which is a child of the function 'b' - is also hidden. Caller filters can be added and removed from the client at runtime, using the @clear suffix for the -C / --caller-filter option. In addition, you can limit the nesting level of functions with the -D option. $ uftrace -D 3 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, uftrace only prints functions up to a depth of 3, so leaf function c() was omitted. Note that the -D option works with -F . Sometimes, it's useful to see long-running functions only. This is good because there are usually many tiny functions that are not interesting. The -t / --time-filter option implements the time-based filter that only records functions which run longer than the given threshold. In the above example, the user might want to see functions running more than 5 micro-seconds like below: $ uftrace -t 5us ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In addition, you can set filter to record selected source locations with -L option. $ uftrace -L s-libmain.c --srcline t-lib # DURATION TID FUNCTION [SOURCE] [ 5043] | main() { /* /home/uftrace/tests/s-libmain.c:16 */ 6.998 us [ 5043] | foo(); /* /home/uftrace/tests/s-libmain.c:11 */ 9.393 us [ 5043] | } /* main */ You can set filter with the @hide suffix not to record selected source locations. $ uftrace -L s-libmain.c@hide --srcline t-lib # DURATION TID FUNCTION [SOURCE] [ 14688] | lib_a() { /* /home/uftrace/tests/s-lib.c:10 */ [ 14688] | lib_b() { /* /home/uftrace/tests/s-lib.c:15 */ 1.505 us [ 14688] | lib_c(); /* /home/uftrace/tests/s-lib.c:20 */ 2.816 us [ 14688] | } /* lib_b */ 3.181 us [ 14688] | } /* lib_a */ The -Z / --size-filter option is to filter functions that has small sizes. It reads ELF symbols size and compare it with the given value. The PLT functions may have no symbol size in the ELF format, in that case the PLT entry size will be used as the size of the function. $ uftrace -Z 100 t-arg # DURATION TID FUNCTION [162500] | main() { 12.486 us [162500] | foo(); 0.505 us [162500] | many(); [162500] | pass() { 0.283 us [162500] | check(); 1.449 us [162500] | } /* pass */ 18.478 us [162500] | } /* main */ You can also set triggers on filtered functions. See TRIGGERS section below for details. When kernel function tracing is enabled, you can also set the filters on kernel functions by marking the symbol with the @kernel modifier. The following example will show all user functions and the (kernel) page fault handler. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */ TRIGGERS The uftrace tool supports triggering actions on selected function calls (with or without filters) and/or signals. Currently supported triggers are listed below. The BNF for trigger specification is as follows: <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace\" | \"trace_on\" | \"trace_off\" | \"recover\" | \"color=\"<color> | \"time=\"<time_spec> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"hide\" | \"clear\" [ \"=\"<clear_spec> ] <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" <clear_spec> := <action> | <action> \"+\" <action> The depth trigger is to change filter depth during execution of the function. It can be used to apply different filter depths for different functions. And the backtrace trigger is used to print a stack backtrace at replay time. The color trigger is to change the color of the function in replay output. The supported colors are red , green , blue , yellow , magenta , cyan , bold , and gray . The following example shows how triggers work. The global filter maximum depth is 5, but when function b() is called, it is changed to 1, so functions below b() will not be shown. $ uftrace -D 5 -T 'b@depth=1' ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The backtrace trigger is only meaningful in the replay command. The trace_on and trace_off actions (the _ can be omitted as traceon and traceoff ) control whether uftrace records the specified functions or not. The recover trigger is for some corner cases in which the process accesses the callstack directly. During tracing of the v8 javascript engine, for example, it kept getting segfaults in the garbage collection stage. It was because v8 incorporates the return address into compiled code objects(?). The recover trigger restores the original return address at the function entry point and resets to the uftrace return hook address again at function exit. This was used to work around segfaults by setting the recover trigger on the related function (specifically ExitFrame::Iterate ) The time trigger is to change time filter setting during execution of the function. It can be used to apply different time filter for different functions. The read trigger is to read some information at runtime. The result will be recorded as (builtin) events at the beginning and the end of a given function. As of now, the following events are supported: \"proc/statm\": process memory stat from /proc filesystem \"page-fault\": number of page faults using getrusage(2) \"pmu-cycle\": cpu cycles and instructions using Linux perf-event syscall \"pmu-cache\": (cpu) cache-references and misses using Linux perf-event syscall \"pmu-branch\": branch instructions and misses using Linux perf-event syscall The results are printed as events (comments) like below. $ uftrace -T a@read=proc/statm ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ The finish trigger is to end recording. The process can still run, which can be useful to trace non-terminating processes like daemon. The filter and notrace triggers have same effect as -F / --filter and -N / --notrace options respectively. The hide trigger has the same effect as -H / --hide option that hides the given functions, but does not affect to the functions in their subtree unlike the notrace trigger. The clear trigger is to delete existing actions and it's for agent use case. It can have optional trigger action names connected by \"+\" (for example, -T myfunc@clear=trace+read ). If so it'll delete the specified actions only otherwise it'll delete all actions. Triggers only work for user-level functions for now. The trigger can be used for signals as well. This is done by signal trigger with --signal option. The syntax is similar to function trigger but only \"trace_on\", \"trace_off\" and \"finish\" trigger actions are supported. $ uftrace --signal 'SIGUSR1@finish' ./some-daemon ARGUMENTS The uftrace tool supports recording function arguments and/or return values using the -A/--argument and -R/--retval options respectively. The syntax is very similar to that of triggers: <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> The -A/--argument option takes a symbol name pattern and its optional specs. The spec is started by argN where N is an index of the arguments. The index starts from 1 and corresponds to the argument passing order of the calling convention on the system. Note that the indexes of arguments are separately counted for integer (or pointer) and floating-point type, and they can interfere depending on the calling convention. The argN is for integer arguments and fpargN is for floating-point arguments. Users can optionally specify a format and size for the arguments and/or return values. The \"d\" format or without format field, uftrace treats them as 'long int' type for integers and 'double' for floating-point numbers. The \"i\" format makes it signed integer type and \"u\" format is for unsigned type. Both are printed as decimal while \"x\" format makes it printed as hexadecimal, and \"o\" format makes it printed as octal. The \"s\" format is for null-terminated string type and \"c\" format is for character type. The \"f\" format is for floating-point type and is meaningful only for return value (generally). Note that fpargN doesn't take the format field since it's always floating-point. The \"S\" format is for std::string, but it only supports libstdc++ library as of yet. Finally, the \"p\" format is for function pointer. Once the target address is recorded, it will be displayed as function name. Please beware when using string type arguments since it can crash the program if the (pointer) value is invalid. Actually uftrace tries to keep track of valid ranges of process address space but it might miss some corner cases. It is also possible to specify a certain register name or stack offset for arguments (but not for return value). The following register names can be used for argument: x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) Examples are shown below: $ uftrace -A main@arg1/x -R main@retval/i32 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace -A puts@arg1/s -R puts@retval ./hello Hello world # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ Note that these arguments and return value are recorded only if the executable was built with the -pg option. Executables built with -finstrument-functions will ignore it except for library calls. Recording of arguments and return values only works with user-level functions for now. If the target program is built with debug info like DWARF, uftrace can identify number of arguments and their types automatically (when built with libdw). Also arguments and return value of some well-known library functions are provided even if the debug info is not available. In these cases user don't need to specify spec of the arguments and return value manually - just a function name (or pattern) is enough. In fact, manual argspec will suppress the automatic argspec. For example, the above example can be written like below: $ uftrace -A . -R main -F main ./hello Hello world # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ Note that argument pattern (\".\") matches to any character so it recorded all (supported) functions. It shows two arguments for \"main\" and a single string argument for \"puts\". If you simply want to see all arguments and return values of every functions (if supported), use -a/--auto-args option. FIELDS The uftrace allows for user to customize the replay output with a couple of fields. Here the field means info on the left side of the pipe (|) character. By default it uses duration and tid fields, but you can use other fields in any order like: $ uftrace -f time,delta,duration,tid,addr ./abc # TIMESTAMP TIMEDELTA DURATION TID ADDRESS FUNCTION 75059.205379813 1.374 us [27804] 4004d0 | __monstartup(); 75059.205384184 4.371 us 0.737 us [27804] 4004f0 | __cxa_atexit(); 75059.205386655 2.471 us [27804] 4006b1 | main() { 75059.205386838 0.183 us [27804] 400656 | a() { 75059.205386961 0.123 us [27804] 400669 | b() { 75059.205387078 0.117 us [27804] 40067c | c() { 75059.205387264 0.186 us 0.643 us [27804] 4004b0 | getpid(); 75059.205388501 1.237 us 1.423 us [27804] 40067c | } /* c */ 75059.205388724 0.223 us 1.763 us [27804] 400669 | } /* b */ 75059.205388878 0.154 us 2.040 us [27804] 400656 | } /* a */ 75059.205389030 0.152 us 2.375 us [27804] 4006b1 | } /* main */ Each field has following meaning: tid: task id (obtained by gettid(2)) duration: function execution time time: timestamp at the execution delta: difference between two timestamp in a task elapsed: elapsed time from the first timestamp addr: address of the function task: task name (comm) module: library or executable name of the function The default value is 'duration,tid'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +time\" is as same as \"-f duration,tid,time\". And it also accepts a special field name of 'none' which disables the field display and shows function output only. DYNAMIC TRACING FULL DYNAMIC TRACING The uftrace tool supports dynamic function tracing which can be enabled at runtime (load-time, to be precise) on x86_64 and AArch64. Before recording functions, normally you need to build the target program with -pg (or -finstrument-functions ), incurring some performance impact because all functions call mcount() . With dynamic tracing, you can trace specific functions only given by the -P / --patch option and can also disable specific functions given by the -U / --unpatch option. With capstone disassembly engine, you don't even need to (re)compile the target with the option above. Now uftrace can analyze the instructions and (if possible) it can copy them to a different place and rewrite it to call mcount() function so that it can be traced by uftrace. After that, the control is passed to the copied instructions and then returned back to the remaining instructions. The following example shows an error message when normally running uftrace. Because the binary doesn't call any instrumentation code (i.e. 'mcount'). $ gcc -o abc tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. But when the -P a patch option is used, uftrace can dynamically trace a() . $ uftrace --no-libcall -P a abc # DURATION TID FUNCTION 0.923 us [19379] | a(); In addition, you can enable all functions using '.' (for glob, '*') that matches to any character in a regex pattern with P option. $ uftrace --no-libcall -P . abc # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ Note that -U option has the opposite effect of -P option so users can use both for fine-control. The option that comes later will override the formers. For example if you want to trace all functions but 'a' in the above: $ uftrace --no-libcall -P . -U a abc # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ The order of the options is important. If you change it like -U a -P . then it will trace all the functions since -P . will take precedence and match everything. GCC FENTRY If the capstone is not available, you need to add some more compiler (gcc) options when building the target program. The gcc 5.1 or more recent versions provide -mfentry and -mnop-mcount options which add instrumentation code (i.e. calling mcount() function) at the very beginning of a function and convert the instruction to a NOP. Then it has almost zero performance overhead when running in a normal condition. The uftrace can selectively convert it back to call mcount() using -P option. $ gcc -pg -mfentry -mnop-mcount -o abc-fentry tests/s-abc.c $ uftrace -P . --no-libcall abc-fentry # DURATION TID FUNCTION [ 18973] | main() { [ 18973] | a() { [ 18973] | b() { 0.852 us [ 18973] | c(); 2.378 us [ 18973] | } /* b */ 2.909 us [ 18973] | } /* a */ 3.756 us [ 18973] | } /* main */ CLANG XRAY Clang/LLVM 4.0 provides a dynamic instrumentation technique called X-ray . It's similar to a combination of gcc -mfentry -mnop-mcount and -finstrument-functions . The uftrace also supports dynamic tracing on the executables built with the X-ray . For example, you can build the target program by clang with the below option and equally use -P option for dynamic tracing like below: $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace -P main abc-xray # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace -P . abc-xray # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */ PATCHABLE FUNCTION ENTRY Recent compilers in both gcc and clang support another useful option -fpatchable-function-entry=N[,M] that generates M NOPs before the function entry and N-M NOPs after the function entry. We can simply use the case when M is 0 so -fpatchable-function-entry=N is enough. The number of NOPs required for dynamic tracing depends on the architecture but x86_64 requires 5 NOPs and AArch64 requires 2 NOPs to dynamically patch a call instruction for uftrace recording. For example in x86_64, you can build the target program and trace as follows. $ gcc -fpatchable-function-entry=5 -o abc-fpatchable tests/s-abc.c $ uftrace -P . abc-fpatchable # DURATION TID FUNCTION [ 6818] | main() { [ 6818] | a() { [ 6818] | b() { [ 6818] | c() { 0.926 us [ 6818] | getpid(); 4.158 us [ 6818] | } /* c */ 4.590 us [ 6818] | } /* b */ 4.957 us [ 6818] | } /* a */ 5.593 us [ 6818] | } /* main */ This feature can also be used by explicitly adding compiler attribute to some specific functions with __attribute__ ((patchable_function_entry (N,M))) . For example, the 'tests/s-abc.c' program can be modified as follows. static int c(void) { return 100000; } __attribute__((patchable_function_entry(5))) static int b(void) { return c() + 1; } static int a(void) { return b() - 1; } __attribute__((patchable_function_entry(5))) int main(void) { int ret = 0; ret += a(); return ret ? 0 : 1; } The attribute is added to function 'main' and 'b' only and this program can normally be compiled without any additional compiler options, but the compiler detects the attributes and adds 5 NOPs at the entry of 'main' and 'b'. $ gcc -o abc tests/s-patchable-abc.c $ uftrace -P . abc # DURATION TID FUNCTION [ 20803] | main() { 0.342 us [ 20803] | b(); 1.608 us [ 20803] | } /* main */ With this way, uftrace can selectively trace only the functions user wants by explicitly adding the attribute. This approach can collect trace records in a much less intrusive way compared to tracing the entire functions enabled by compiler flags. -fpatchable-function-entry=N[,M] option and its attribute are supported since gcc-8.1 and clang-10. This dynamic tracing feature can be used in both x86_64 and AArch64 as of now. SCRIPT EXECUTION The uftrace tool supports script execution for each function entry and exit. The supported script types are Python 2.7, Python 3 and Lua 5.1 as of now. The user can write four functions. 'uftrace_entry' and 'uftrace_exit' are executed whenever each function is executed at the entry and exit. However 'uftrace_begin' and 'uftrace_end' are only executed once when the target program begins and ends. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") The above script can be executed in record time as follows: $ uftrace -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished # DURATION TID FUNCTION [10929] | main() { [10929] | a() { [10929] | b() { [10929] | c() { 4.293 us [10929] | getpid(); 19.017 us [10929] | } /* c */ 27.710 us [10929] | } /* b */ 37.007 us [10929] | } /* a */ 55.260 us [10929] | } /* main */ The 'ctx' variable is a dictionary type that contains the below information. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; Each field in 'script_context' can be read inside the script. Please see uftrace-script (1) for details about scripting. AGENT uftrace supports running an agent inside the traced target, which can modify the tracing config at runtime. The agent is disabled by default, and is enabled at start-up using the -g / --agent option. The user can interact with the agent during while the target executes, from uftrace client instance, using the -p / --pid option. The client currently supports the following features: * toggle tracing * call depth filter * time threshold filter * opt-in and opt-out filters * caller filters Consider the following program, which calls a() -> b() -> c() twice, and waits for external input in between. $ cat abc_abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); wait_for_sigusr1(); a(); return 0; } $ gcc -pg -o abc_abc abc_abc.c Tracing can be toggled anytime during execution. $ uftrace --agent --trace=off abc_abc & $ uftrace --pid $(pidof abc_abc) --trace=on $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION 10.508 us [ 30324] | } /* wait_for_sigusr1 */ [ 30324] | a() { [ 30324] | b() { 0.138 us [ 30324] | c(); 0.757 us [ 30324] | } /* b */ 1.217 us [ 30324] | } /* a */ 12.346 us [ 30324] | } /* main */ The call depth filter can be increased or decreased from the client. $ uftrace --agent --depth=2 abc_abc & $ uftrace --pid $(pidof abc_abc) --depth=4 $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION [ 32384] | main() { 0.324 us [ 32384] | a(); 5.081 s [ 32384] | wait_for_sigusr1(); [ 32384] | a() { [ 32384] | b() { 0.106 us [ 32384] | c(); 0.552 us [ 32384] | } /* b */ 0.862 us [ 32384] | } /* a */ 5.081 s [ 32384] | } /* main */ The time threshold can also be increased or decreased from the client. $ uftrace --agent --time-filter=0.8us abc_abc & $ uftrace --pid $(pidof abc_abc) --time-filter=0.5us $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION [ 30196] | main() { 0.805 us [ 30196] | a(); 6.859 s [ 30196] | wait_for_sigusr1(); [ 30196] | a() { 0.522 us [ 30196] | b(); 0.802 us [ 30196] | } /* a */ 6.859 s [ 30196] | } /* main */ The agent can enforce opt-in and opt-out filters, as well as caller filters. $ uftrace --agent --filter=c abc_abc & $ uftrace --pid $(pidof abc_abc) --filter=a $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION 0.398 us [ 3679] | c(); [ 3679] | a() { [ 3679] | b() { 0.163 us [ 3679] | c(); 2.099 us [ 3679] | } /* b */ 3.655 us [ 3679] | } /* a */ Filters can be removed using the @clear suffix. $ uftrace --agent --caller-filter=a abc_abc & $ uftrace --pid $(pidof abc_abc) --caller-filter=a@clear $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION [ 4956] | main() { 0.821 us [ 4956] | a(); 10.525 s [ 4956] | wait_for_sigusr1(); [ 4956] | a() { [ 4956] | b() { 0.116 us [ 4956] | c(); 0.573 us [ 4956] | } /* b */ 0.806 us [ 4956] | } /* a */ 10.525 s [ 4956] | } /* main */ WATCH POINT The uftrace watch point is to display certain value only if it's changed. It's conceptually the same as that of a debugger's but only works at function entry and exit so it might miss some updates. As of now, the following watch points are supported: \"cpu\" : cpu number current task is running on Like read triggers, the result is displayed as event (comment): $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */ SEE ALSO uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-script (1)","title":"Uftrace live"},{"location":"en/uftrace-live/#name","text":"uftrace-live - Trace functions in a command during live execution","title":"NAME"},{"location":"en/uftrace-live/#synopsis","text":"uftrace [live] [ options ] COMMAND [ command-options ]","title":"SYNOPSIS"},{"location":"en/uftrace-live/#description","text":"This command runs COMMAND and prints its functions with time and thread info. This is basically the same as running the uftrace record and uftrace replay commands in turn, but it does not save a data file. This command accepts most options that are accepted by the record or replay commands.","title":"DESCRIPTION"},{"location":"en/uftrace-live/#common-options","text":"-F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See FILTERS . -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See TRIGGERS . -D DEPTH , --depth= DEPTH : Set global trace limit in nesting level. See FILTERS . -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. See FILTERS . -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. See FILTERS . -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. Applies to replay command, not record. See FILTERS . --no-libcall : Do not record library function invocations. Library calls are normally traced by hooking calls to the resolver function of dynamic linker in the PLT. One can disable it with this option. --no-event : Disable event recording which is used by default. Note that explicit event tracing by --event option is not affected by this. Implies --no-sched . --no-sched : Disable schedule event recording which is used by default. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --disable : DEPRECATED. Use --trace=off instead. --trace= STATE : Set uftrace tracing STATE. Possible states are on and off . Default is on . This is only meaningful when used with a trace_on trigger or with the agent --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used.","title":"COMMON OPTIONS"},{"location":"en/uftrace-live/#live-options","text":"--list-event : Show available events in the process. --report : Show live-report before replay. --record : Do not discard the recorded data. -p PID , --pid= PID : Switch to client mode. Forward the supported tracing options to a running target with given PID. See AGENT .","title":"LIVE OPTIONS"},{"location":"en/uftrace-live/#record-options","text":"-A SPEC , --argument= SPEC : Record function arguments. This option can be used more than once. See ARGUMENTS . -R SPEC , --retval= SPEC : Record function return values. This option can be used more than once. See ARGUMENTS . -P FUNC , --patch= FUNC : Patch FUNC dynamically. This is only applicable binaries built by gcc with -pg -mfentry -mnop-mcount or clang with -fxray-instrument . This option can be used more than once. See DYNAMIC TRACING . -U FUNC , --unpatch= FUNC : Do not apply dynamic patching for FUNC. This option can be used more than once. See DYNAMIC TRACING . -E EVENT , --event= EVENT : Enable event tracing. The event should be available on the system. -S SCRIPT_PATH , --script= SCRIPT_PATH : Run a given script to do additional work at the entry and exit of function during target program execution. The type of script is detected by the postfix such as '.py' for python. See SCRIPT EXECUTION . -W, --watch= POINT : Add watch point to display POINT if the value is changed. See WATCH POINT . -a, --auto-args : Automatically record arguments and return values of known functions. These are usually functions in standard (C language or system) libraries but if debug info is available it includes functions in the user program. -l, --nest-libcall : Trace function calls between libraries. By default, uftrace only record library call from the main executable. Implies --force . -k, --kernel : Trace kernel functions as well as user functions. Only kernel entry/exit functions will be traced by default. Use the --kernel-depth option to override this. -K DEPTH , --kernel-depth= DEPTH : Set kernel max function depth separately. Implies --kernel . --clock= CLOCK : Set clock source for timestamp recording. CLOCK can be one of 'mono', 'mono_raw', or 'boot'. Default is 'mono'. --signal= TRG : Set trigger on selected signals rather than functions. But there are restrictions so only a few of trigger actions are support for signals. The available actions are: trace_on, trace_off, finish. This option can be used more than once. See TRIGGERS . --nop : Do not record and replay any functions. This is a no-op and only meaningful for performance comparisons. --force : Allow running uftrace even if some problems occur. When uftrace record finds no mcount symbol (which is generated by compiler) in the executable, it quits with an error message since uftrace can not trace the program. However, it is possible that the user is only interested in functions within a dynamically-linked library, in which case this option can be used to cause uftrace to run the program regardless. Also, the -A / --argument and -R / --retval options work only for binaries built with -pg , so uftrace will normally exit when it tries to run binaries built without that option. This option ignores the warning and goes on tracing without the argument and/or return value. --time : Print running time of children in time (1)-style. -e, --estimate-return : Record only ENTRY data for each function. This option is useful when the target program deals with stack in some way. Normally uftrace modifies task's execution stack frame to hook return from the function. However sometimes it makes troubles and it's hard to handle all the cases properly. This option tells uftrace not to hook return address in order to prevent those problems. The return time is estimated as a half of execution time of two consecutive functions.","title":"RECORD OPTIONS"},{"location":"en/uftrace-live/#record-config-options","text":"--libmcount-path= PATH : Load libmcount libraries from this path. This is mostly for testing purposes. -b SIZE , --buffer= SIZE : Size of internal buffer in which trace data will be saved. Default size is 128k. --kernel-buffer= SIZE : Set kernel tracing buffer size. The default value (in the kernel) is 1408k. --no-pltbind : Do not bind dynamic symbol address. This option uses the LD_BIND_NOT environment variable to trace library function calls which might be missing due to concurrent (first) accesses. It is not meaningful to use this option with the --no-libcall option. --max-stack= DEPTH : Set the max function stack depth for tracing. Default is 1024. --num-thread= NUM : Use NUM threads to record trace data. Default is 1/4 of online CPUs (but when full kernel tracing is enabled, it will use the full number of CPUs). --libmcount-single : Use single thread version of libmcount for faster recording. This is ignored if the target program links with the pthread library. --rt-prio= PRIO : Boost priority of recording threads to real-time (FIFO) with priority of PRIO . This is particularly useful for high-volume data such as full kernel tracing. --keep-pid : Retain same pid for traced program. For some daemon processes, it is important to have same pid when forked. Running under uftrace normally changes pid as it calls fork() again internally. Note that it might corrupt terminal setting so it'd be better using it with --no-pager option. --no-randomize-addr : Disable ASLR (Address Space Layout Randomization). It makes the target process fix its address space layout. -g, --agent : Spawn an agent thread in the target. At runtime, the agent receives external commands and can change supported tracing options. See AGENT .","title":"RECORD CONFIG OPTIONS"},{"location":"en/uftrace-live/#replay-options","text":"-f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: duration, tid, time, delta, elapsed and addr. Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'duration,tid'. See FIELDS . --flat : Print flat format rather than C-like format. This is usually for debugging and testing purpose. --column-view : Show each task in separate column. This makes easy to distinguish functions in different tasks. --column-offset= DEPTH : When --column-view option is used, this option specifies the amount of offset between each task. Default is 8. --task-newline : Interleave a new line when task is changed. This makes easy to distinguish functions in different tasks. --no-comment : Do not show comments of returned functions. --libname : Show library name along with function name. --no-args : Do not show function arguments and return value.","title":"REPLAY OPTIONS"},{"location":"en/uftrace-live/#common-analysis-options","text":"-H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See FILTERS . --kernel-full : Show all kernel functions called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --demangle= TYPE : Demangle C++ symbol names. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. However, it is highly recommended to use only elapsed time because there is no way to know the timestamp before actually running the program. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively.","title":"COMMON ANALYSIS OPTIONS"},{"location":"en/uftrace-live/#filters","text":"The uftrace tool supports filtering out uninteresting functions. Filtering is highly recommended since it helps users focus on the interesting functions and reduces the data size. When uftrace is called, it receives two types of function filter; an opt-in filter with -F / --filter and an opt-out filter with -N / --notrace . These filters can be applied either at record time or replay time. For record time, they can be added and removed at runtime from the client, see AGENT . Removing filters is achieved by specifying the @clear suffix for the -F / --filter or -N / --notrace options. The first type of filter is opt-in. By default, it doesn't trace anything. But when one of the specified functions is executed, tracing is started. When the function returns, tracing is stopped again. For example, consider a simple program which calls a() , b() and c() in turn. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c Normally uftrace will trace all the functions from main() to c() . $ uftrace live ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, the command name live is explicitly used, but it can be omitted because uftrace uses live command by default. So the above command can be reused as uftrace ./abc in short. But when the -F b filter option is used, it will not trace main() or a() but only b() and c() . $ uftrace -F b ./abc # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The second type of filter is opt-out. By default, everything is traced, but when one of the specified functions is executed, tracing stops. When the excluded function returns, tracing is started again. In the above example, you can omit the function b() and all calls it makes with the -N option. $ uftrace -N b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ You can hide the function b() only without affecting the calls it makes in its subtree functions with -H option. $ uftrace -H b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The above -H option is especially useful when hiding std namespace functions in C++ programs by using -H ^std:: option setting. If users only care about specific functions and want to know how they are called, one can use the caller filter. It makes the function as leaf and records the parent functions to the function. $ uftrace -C b ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, functions not in the calling path were not shown. Also the function 'c' - which is a child of the function 'b' - is also hidden. Caller filters can be added and removed from the client at runtime, using the @clear suffix for the -C / --caller-filter option. In addition, you can limit the nesting level of functions with the -D option. $ uftrace -D 3 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, uftrace only prints functions up to a depth of 3, so leaf function c() was omitted. Note that the -D option works with -F . Sometimes, it's useful to see long-running functions only. This is good because there are usually many tiny functions that are not interesting. The -t / --time-filter option implements the time-based filter that only records functions which run longer than the given threshold. In the above example, the user might want to see functions running more than 5 micro-seconds like below: $ uftrace -t 5us ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In addition, you can set filter to record selected source locations with -L option. $ uftrace -L s-libmain.c --srcline t-lib # DURATION TID FUNCTION [SOURCE] [ 5043] | main() { /* /home/uftrace/tests/s-libmain.c:16 */ 6.998 us [ 5043] | foo(); /* /home/uftrace/tests/s-libmain.c:11 */ 9.393 us [ 5043] | } /* main */ You can set filter with the @hide suffix not to record selected source locations. $ uftrace -L s-libmain.c@hide --srcline t-lib # DURATION TID FUNCTION [SOURCE] [ 14688] | lib_a() { /* /home/uftrace/tests/s-lib.c:10 */ [ 14688] | lib_b() { /* /home/uftrace/tests/s-lib.c:15 */ 1.505 us [ 14688] | lib_c(); /* /home/uftrace/tests/s-lib.c:20 */ 2.816 us [ 14688] | } /* lib_b */ 3.181 us [ 14688] | } /* lib_a */ The -Z / --size-filter option is to filter functions that has small sizes. It reads ELF symbols size and compare it with the given value. The PLT functions may have no symbol size in the ELF format, in that case the PLT entry size will be used as the size of the function. $ uftrace -Z 100 t-arg # DURATION TID FUNCTION [162500] | main() { 12.486 us [162500] | foo(); 0.505 us [162500] | many(); [162500] | pass() { 0.283 us [162500] | check(); 1.449 us [162500] | } /* pass */ 18.478 us [162500] | } /* main */ You can also set triggers on filtered functions. See TRIGGERS section below for details. When kernel function tracing is enabled, you can also set the filters on kernel functions by marking the symbol with the @kernel modifier. The following example will show all user functions and the (kernel) page fault handler. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */","title":"FILTERS"},{"location":"en/uftrace-live/#triggers","text":"The uftrace tool supports triggering actions on selected function calls (with or without filters) and/or signals. Currently supported triggers are listed below. The BNF for trigger specification is as follows: <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace\" | \"trace_on\" | \"trace_off\" | \"recover\" | \"color=\"<color> | \"time=\"<time_spec> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"hide\" | \"clear\" [ \"=\"<clear_spec> ] <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" <clear_spec> := <action> | <action> \"+\" <action> The depth trigger is to change filter depth during execution of the function. It can be used to apply different filter depths for different functions. And the backtrace trigger is used to print a stack backtrace at replay time. The color trigger is to change the color of the function in replay output. The supported colors are red , green , blue , yellow , magenta , cyan , bold , and gray . The following example shows how triggers work. The global filter maximum depth is 5, but when function b() is called, it is changed to 1, so functions below b() will not be shown. $ uftrace -D 5 -T 'b@depth=1' ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The backtrace trigger is only meaningful in the replay command. The trace_on and trace_off actions (the _ can be omitted as traceon and traceoff ) control whether uftrace records the specified functions or not. The recover trigger is for some corner cases in which the process accesses the callstack directly. During tracing of the v8 javascript engine, for example, it kept getting segfaults in the garbage collection stage. It was because v8 incorporates the return address into compiled code objects(?). The recover trigger restores the original return address at the function entry point and resets to the uftrace return hook address again at function exit. This was used to work around segfaults by setting the recover trigger on the related function (specifically ExitFrame::Iterate ) The time trigger is to change time filter setting during execution of the function. It can be used to apply different time filter for different functions. The read trigger is to read some information at runtime. The result will be recorded as (builtin) events at the beginning and the end of a given function. As of now, the following events are supported: \"proc/statm\": process memory stat from /proc filesystem \"page-fault\": number of page faults using getrusage(2) \"pmu-cycle\": cpu cycles and instructions using Linux perf-event syscall \"pmu-cache\": (cpu) cache-references and misses using Linux perf-event syscall \"pmu-branch\": branch instructions and misses using Linux perf-event syscall The results are printed as events (comments) like below. $ uftrace -T a@read=proc/statm ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ The finish trigger is to end recording. The process can still run, which can be useful to trace non-terminating processes like daemon. The filter and notrace triggers have same effect as -F / --filter and -N / --notrace options respectively. The hide trigger has the same effect as -H / --hide option that hides the given functions, but does not affect to the functions in their subtree unlike the notrace trigger. The clear trigger is to delete existing actions and it's for agent use case. It can have optional trigger action names connected by \"+\" (for example, -T myfunc@clear=trace+read ). If so it'll delete the specified actions only otherwise it'll delete all actions. Triggers only work for user-level functions for now. The trigger can be used for signals as well. This is done by signal trigger with --signal option. The syntax is similar to function trigger but only \"trace_on\", \"trace_off\" and \"finish\" trigger actions are supported. $ uftrace --signal 'SIGUSR1@finish' ./some-daemon","title":"TRIGGERS"},{"location":"en/uftrace-live/#arguments","text":"The uftrace tool supports recording function arguments and/or return values using the -A/--argument and -R/--retval options respectively. The syntax is very similar to that of triggers: <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> The -A/--argument option takes a symbol name pattern and its optional specs. The spec is started by argN where N is an index of the arguments. The index starts from 1 and corresponds to the argument passing order of the calling convention on the system. Note that the indexes of arguments are separately counted for integer (or pointer) and floating-point type, and they can interfere depending on the calling convention. The argN is for integer arguments and fpargN is for floating-point arguments. Users can optionally specify a format and size for the arguments and/or return values. The \"d\" format or without format field, uftrace treats them as 'long int' type for integers and 'double' for floating-point numbers. The \"i\" format makes it signed integer type and \"u\" format is for unsigned type. Both are printed as decimal while \"x\" format makes it printed as hexadecimal, and \"o\" format makes it printed as octal. The \"s\" format is for null-terminated string type and \"c\" format is for character type. The \"f\" format is for floating-point type and is meaningful only for return value (generally). Note that fpargN doesn't take the format field since it's always floating-point. The \"S\" format is for std::string, but it only supports libstdc++ library as of yet. Finally, the \"p\" format is for function pointer. Once the target address is recorded, it will be displayed as function name. Please beware when using string type arguments since it can crash the program if the (pointer) value is invalid. Actually uftrace tries to keep track of valid ranges of process address space but it might miss some corner cases. It is also possible to specify a certain register name or stack offset for arguments (but not for return value). The following register names can be used for argument: x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) Examples are shown below: $ uftrace -A main@arg1/x -R main@retval/i32 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace -A puts@arg1/s -R puts@retval ./hello Hello world # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ Note that these arguments and return value are recorded only if the executable was built with the -pg option. Executables built with -finstrument-functions will ignore it except for library calls. Recording of arguments and return values only works with user-level functions for now. If the target program is built with debug info like DWARF, uftrace can identify number of arguments and their types automatically (when built with libdw). Also arguments and return value of some well-known library functions are provided even if the debug info is not available. In these cases user don't need to specify spec of the arguments and return value manually - just a function name (or pattern) is enough. In fact, manual argspec will suppress the automatic argspec. For example, the above example can be written like below: $ uftrace -A . -R main -F main ./hello Hello world # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ Note that argument pattern (\".\") matches to any character so it recorded all (supported) functions. It shows two arguments for \"main\" and a single string argument for \"puts\". If you simply want to see all arguments and return values of every functions (if supported), use -a/--auto-args option.","title":"ARGUMENTS"},{"location":"en/uftrace-live/#fields","text":"The uftrace allows for user to customize the replay output with a couple of fields. Here the field means info on the left side of the pipe (|) character. By default it uses duration and tid fields, but you can use other fields in any order like: $ uftrace -f time,delta,duration,tid,addr ./abc # TIMESTAMP TIMEDELTA DURATION TID ADDRESS FUNCTION 75059.205379813 1.374 us [27804] 4004d0 | __monstartup(); 75059.205384184 4.371 us 0.737 us [27804] 4004f0 | __cxa_atexit(); 75059.205386655 2.471 us [27804] 4006b1 | main() { 75059.205386838 0.183 us [27804] 400656 | a() { 75059.205386961 0.123 us [27804] 400669 | b() { 75059.205387078 0.117 us [27804] 40067c | c() { 75059.205387264 0.186 us 0.643 us [27804] 4004b0 | getpid(); 75059.205388501 1.237 us 1.423 us [27804] 40067c | } /* c */ 75059.205388724 0.223 us 1.763 us [27804] 400669 | } /* b */ 75059.205388878 0.154 us 2.040 us [27804] 400656 | } /* a */ 75059.205389030 0.152 us 2.375 us [27804] 4006b1 | } /* main */ Each field has following meaning: tid: task id (obtained by gettid(2)) duration: function execution time time: timestamp at the execution delta: difference between two timestamp in a task elapsed: elapsed time from the first timestamp addr: address of the function task: task name (comm) module: library or executable name of the function The default value is 'duration,tid'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +time\" is as same as \"-f duration,tid,time\". And it also accepts a special field name of 'none' which disables the field display and shows function output only.","title":"FIELDS"},{"location":"en/uftrace-live/#dynamic-tracing","text":"","title":"DYNAMIC TRACING"},{"location":"en/uftrace-live/#full-dynamic-tracing","text":"The uftrace tool supports dynamic function tracing which can be enabled at runtime (load-time, to be precise) on x86_64 and AArch64. Before recording functions, normally you need to build the target program with -pg (or -finstrument-functions ), incurring some performance impact because all functions call mcount() . With dynamic tracing, you can trace specific functions only given by the -P / --patch option and can also disable specific functions given by the -U / --unpatch option. With capstone disassembly engine, you don't even need to (re)compile the target with the option above. Now uftrace can analyze the instructions and (if possible) it can copy them to a different place and rewrite it to call mcount() function so that it can be traced by uftrace. After that, the control is passed to the copied instructions and then returned back to the remaining instructions. The following example shows an error message when normally running uftrace. Because the binary doesn't call any instrumentation code (i.e. 'mcount'). $ gcc -o abc tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. But when the -P a patch option is used, uftrace can dynamically trace a() . $ uftrace --no-libcall -P a abc # DURATION TID FUNCTION 0.923 us [19379] | a(); In addition, you can enable all functions using '.' (for glob, '*') that matches to any character in a regex pattern with P option. $ uftrace --no-libcall -P . abc # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ Note that -U option has the opposite effect of -P option so users can use both for fine-control. The option that comes later will override the formers. For example if you want to trace all functions but 'a' in the above: $ uftrace --no-libcall -P . -U a abc # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ The order of the options is important. If you change it like -U a -P . then it will trace all the functions since -P . will take precedence and match everything.","title":"FULL DYNAMIC TRACING"},{"location":"en/uftrace-live/#gcc-fentry","text":"If the capstone is not available, you need to add some more compiler (gcc) options when building the target program. The gcc 5.1 or more recent versions provide -mfentry and -mnop-mcount options which add instrumentation code (i.e. calling mcount() function) at the very beginning of a function and convert the instruction to a NOP. Then it has almost zero performance overhead when running in a normal condition. The uftrace can selectively convert it back to call mcount() using -P option. $ gcc -pg -mfentry -mnop-mcount -o abc-fentry tests/s-abc.c $ uftrace -P . --no-libcall abc-fentry # DURATION TID FUNCTION [ 18973] | main() { [ 18973] | a() { [ 18973] | b() { 0.852 us [ 18973] | c(); 2.378 us [ 18973] | } /* b */ 2.909 us [ 18973] | } /* a */ 3.756 us [ 18973] | } /* main */","title":"GCC FENTRY"},{"location":"en/uftrace-live/#clang-xray","text":"Clang/LLVM 4.0 provides a dynamic instrumentation technique called X-ray . It's similar to a combination of gcc -mfentry -mnop-mcount and -finstrument-functions . The uftrace also supports dynamic tracing on the executables built with the X-ray . For example, you can build the target program by clang with the below option and equally use -P option for dynamic tracing like below: $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace -P main abc-xray # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace -P . abc-xray # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */","title":"CLANG XRAY"},{"location":"en/uftrace-live/#patchable-function-entry","text":"Recent compilers in both gcc and clang support another useful option -fpatchable-function-entry=N[,M] that generates M NOPs before the function entry and N-M NOPs after the function entry. We can simply use the case when M is 0 so -fpatchable-function-entry=N is enough. The number of NOPs required for dynamic tracing depends on the architecture but x86_64 requires 5 NOPs and AArch64 requires 2 NOPs to dynamically patch a call instruction for uftrace recording. For example in x86_64, you can build the target program and trace as follows. $ gcc -fpatchable-function-entry=5 -o abc-fpatchable tests/s-abc.c $ uftrace -P . abc-fpatchable # DURATION TID FUNCTION [ 6818] | main() { [ 6818] | a() { [ 6818] | b() { [ 6818] | c() { 0.926 us [ 6818] | getpid(); 4.158 us [ 6818] | } /* c */ 4.590 us [ 6818] | } /* b */ 4.957 us [ 6818] | } /* a */ 5.593 us [ 6818] | } /* main */ This feature can also be used by explicitly adding compiler attribute to some specific functions with __attribute__ ((patchable_function_entry (N,M))) . For example, the 'tests/s-abc.c' program can be modified as follows. static int c(void) { return 100000; } __attribute__((patchable_function_entry(5))) static int b(void) { return c() + 1; } static int a(void) { return b() - 1; } __attribute__((patchable_function_entry(5))) int main(void) { int ret = 0; ret += a(); return ret ? 0 : 1; } The attribute is added to function 'main' and 'b' only and this program can normally be compiled without any additional compiler options, but the compiler detects the attributes and adds 5 NOPs at the entry of 'main' and 'b'. $ gcc -o abc tests/s-patchable-abc.c $ uftrace -P . abc # DURATION TID FUNCTION [ 20803] | main() { 0.342 us [ 20803] | b(); 1.608 us [ 20803] | } /* main */ With this way, uftrace can selectively trace only the functions user wants by explicitly adding the attribute. This approach can collect trace records in a much less intrusive way compared to tracing the entire functions enabled by compiler flags. -fpatchable-function-entry=N[,M] option and its attribute are supported since gcc-8.1 and clang-10. This dynamic tracing feature can be used in both x86_64 and AArch64 as of now.","title":"PATCHABLE FUNCTION ENTRY"},{"location":"en/uftrace-live/#script-execution","text":"The uftrace tool supports script execution for each function entry and exit. The supported script types are Python 2.7, Python 3 and Lua 5.1 as of now. The user can write four functions. 'uftrace_entry' and 'uftrace_exit' are executed whenever each function is executed at the entry and exit. However 'uftrace_begin' and 'uftrace_end' are only executed once when the target program begins and ends. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") The above script can be executed in record time as follows: $ uftrace -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished # DURATION TID FUNCTION [10929] | main() { [10929] | a() { [10929] | b() { [10929] | c() { 4.293 us [10929] | getpid(); 19.017 us [10929] | } /* c */ 27.710 us [10929] | } /* b */ 37.007 us [10929] | } /* a */ 55.260 us [10929] | } /* main */ The 'ctx' variable is a dictionary type that contains the below information. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; Each field in 'script_context' can be read inside the script. Please see uftrace-script (1) for details about scripting.","title":"SCRIPT EXECUTION"},{"location":"en/uftrace-live/#agent","text":"uftrace supports running an agent inside the traced target, which can modify the tracing config at runtime. The agent is disabled by default, and is enabled at start-up using the -g / --agent option. The user can interact with the agent during while the target executes, from uftrace client instance, using the -p / --pid option. The client currently supports the following features: * toggle tracing * call depth filter * time threshold filter * opt-in and opt-out filters * caller filters Consider the following program, which calls a() -> b() -> c() twice, and waits for external input in between. $ cat abc_abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); wait_for_sigusr1(); a(); return 0; } $ gcc -pg -o abc_abc abc_abc.c Tracing can be toggled anytime during execution. $ uftrace --agent --trace=off abc_abc & $ uftrace --pid $(pidof abc_abc) --trace=on $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION 10.508 us [ 30324] | } /* wait_for_sigusr1 */ [ 30324] | a() { [ 30324] | b() { 0.138 us [ 30324] | c(); 0.757 us [ 30324] | } /* b */ 1.217 us [ 30324] | } /* a */ 12.346 us [ 30324] | } /* main */ The call depth filter can be increased or decreased from the client. $ uftrace --agent --depth=2 abc_abc & $ uftrace --pid $(pidof abc_abc) --depth=4 $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION [ 32384] | main() { 0.324 us [ 32384] | a(); 5.081 s [ 32384] | wait_for_sigusr1(); [ 32384] | a() { [ 32384] | b() { 0.106 us [ 32384] | c(); 0.552 us [ 32384] | } /* b */ 0.862 us [ 32384] | } /* a */ 5.081 s [ 32384] | } /* main */ The time threshold can also be increased or decreased from the client. $ uftrace --agent --time-filter=0.8us abc_abc & $ uftrace --pid $(pidof abc_abc) --time-filter=0.5us $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION [ 30196] | main() { 0.805 us [ 30196] | a(); 6.859 s [ 30196] | wait_for_sigusr1(); [ 30196] | a() { 0.522 us [ 30196] | b(); 0.802 us [ 30196] | } /* a */ 6.859 s [ 30196] | } /* main */ The agent can enforce opt-in and opt-out filters, as well as caller filters. $ uftrace --agent --filter=c abc_abc & $ uftrace --pid $(pidof abc_abc) --filter=a $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION 0.398 us [ 3679] | c(); [ 3679] | a() { [ 3679] | b() { 0.163 us [ 3679] | c(); 2.099 us [ 3679] | } /* b */ 3.655 us [ 3679] | } /* a */ Filters can be removed using the @clear suffix. $ uftrace --agent --caller-filter=a abc_abc & $ uftrace --pid $(pidof abc_abc) --caller-filter=a@clear $ kill -s SIGUSR1 $(pidof abc_abc) # DURATION TID FUNCTION [ 4956] | main() { 0.821 us [ 4956] | a(); 10.525 s [ 4956] | wait_for_sigusr1(); [ 4956] | a() { [ 4956] | b() { 0.116 us [ 4956] | c(); 0.573 us [ 4956] | } /* b */ 0.806 us [ 4956] | } /* a */ 10.525 s [ 4956] | } /* main */","title":"AGENT"},{"location":"en/uftrace-live/#watch-point","text":"The uftrace watch point is to display certain value only if it's changed. It's conceptually the same as that of a debugger's but only works at function entry and exit so it might miss some updates. As of now, the following watch points are supported: \"cpu\" : cpu number current task is running on Like read triggers, the result is displayed as event (comment): $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */","title":"WATCH POINT"},{"location":"en/uftrace-live/#see-also","text":"uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-script (1)","title":"SEE ALSO"},{"location":"en/uftrace-record/","text":"% UFTRACE-RECORD(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-record - Run a command and record its trace data SYNOPSIS uftrace record [ options ] COMMAND [ command-options ] DESCRIPTION This command runs COMMAND and gathers function trace data from it, and saves it into files under the uftrace data directory - without displaying anything. This data can then be inspected later on, using uftrace replay or uftrace report . RECORD OPTIONS -A SPEC , --argument= SPEC : Record function arguments. This option can be used more than once. Implies --srcline. See ARGUMENTS . -R SPEC , --retval= SPEC : Record function return values. This option can be used more than once. Implies --srcline. See ARGUMENTS . -P FUNC , --patch= FUNC : Patch FUNC dynamically. This option can be used more than once. See DYNAMIC TRACING . -U FUNC , --unpatch= FUNC : Do not apply dynamic patching for FUNC. This option can be used more than once. See DYNAMIC TRACING . -E EVENT , --event= EVENT : Enable event tracing. The event should be available on the system. -S SCRIPT_PATH , --script= SCRIPT_PATH : Run a given script to do additional work at the entry and exit of function during target program execution. The type of script is detected by the postfix such as '.py' for python. See SCRIPT EXECUTION . -W, --watch= POINT : Add watch point to display POINT if the value is changed. See WATCH POINT . -a, --auto-args : Automatically record arguments and return values of known functions. These are usually functions in standard (C language or system) libraries but if debug info is available it includes functions in the user program. Implies --srcline. -l, --nest-libcall : Trace function calls between libraries. By default, uftrace only record library call from the main executable. Implies --force . -k, --kernel : Trace kernel functions as well as user functions. By default, the tracing depth is 1 (Only kernel entry/exit functions will be traced). Use the -K / --kernel-depth option to override this. -K DEPTH , --kernel-depth= DEPTH : Set kernel max function depth separately. Implies --kernel . --clock= CLOCK : Set clock source for timestamp recording. CLOCK can be one of 'mono', 'mono_raw', or 'boot'. Default is 'mono'. --host= HOST : Send trace data to given host via the network, not writing to files. The uftrace recv command should be run on the destination host to receive the data. --port= PORT : When sending data to the network (with --host ), use the given port instead of the default (8090). --signal= TRG : Set trigger on selected signals rather than functions. But there are restrictions so only a few of trigger actions are support for signals. The available actions are: trace_on, trace_off, finish. This option can be used more than once. See TRIGGERS . --nop : Do not record any functions. This is a no-op and only meaningful for performance comparisons. --force : Allow running uftrace even if some problems occur. When uftrace record finds no mcount symbol (which is generated by compiler) in the executable, it quits with an error message since uftrace can not trace the program. However, it is possible that the user is only interested in functions within a dynamically-linked library, in which case this option can be used to cause uftrace to run the program regardless. Also, the -A / --argument and -R / --retval options work only for binaries built with -pg , so uftrace will normally exit when it tries to run binaries built without that option. This option ignores the warning and goes on tracing without the argument and/or return value. --time : Print running time of children in time (1)-style. -e, --estimate-return : Record only ENTRY data for each function. This option is useful when the target program deals with stack in some way. Normally uftrace modifies task's execution stack frame to hook return from the function. However sometimes it makes troubles and it's hard to handle all the cases properly. This option tells uftrace not to hook return address in order to prevent those problems. The return time is estimated as a half of execution time of two consecutive functions. COMMON OPTIONS -F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See FILTERS . -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See TRIGGERS . -D DEPTH , --depth= DEPTH : Set global trace limit in nesting level. See FILTERS . -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. See FILTERS . -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. See FILTERS . -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. Implies --srcline. See FILTERS . --no-libcall : Do not record library function invocations. Library calls are normally traced by hooking calls to the resolver function of dynamic linker in the PLT. One can disable it with this option. --no-event : Disable event recording which is used by default. Note that explicit event tracing by --event option is not affected by this. Implies --no-sched . --no-sched : Disable schedule event recording which is used by default. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --disable : DEPRECATED. Use --trace=off instead. --trace= STATE : Set uftrace tracing STATE. Possible states are on and off . Default is on . This is only meaningful when used with a trace_on trigger or with the agent. --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used. RECORD CONFIG OPTIONS --libmcount-path= PATH : Load libmcount libraries from this path. This is mostly for testing purposes. -b SIZE , --buffer= SIZE : Size of internal buffer in which trace data will be saved. Default size is 128k. --kernel-buffer= SIZE : Set kernel tracing buffer size. The default value (in the kernel) is 1408k. --no-pltbind : Do not bind dynamic symbol address. This option uses the LD_BIND_NOT environment variable to trace library function calls which might be missing due to concurrent (first) accesses. It is not meaningful to use this option with the --no-libcall option. --max-stack= DEPTH : Set the max function stack depth for tracing. Default is 1024. --num-thread= NUM : Use NUM threads to record trace data. Default is 1/4 of online CPUs (but when full kernel tracing is enabled, it will use the full number of CPUs). --libmcount-single : Use single thread version of libmcount for faster recording. This is ignored if the target program links with the pthread library. --rt-prio= PRIO : Boost priority of recording threads to real-time (FIFO) with priority of PRIO . This is particularly useful for high-volume data such as full kernel tracing. --keep-pid : Retain same pid for traced program. For some daemon processes, it is important to have same pid when forked. Running under uftrace normally changes pid as it calls fork() again internally. --no-randomize-addr : Disable ASLR (Address Space Layout Randomization). It makes the target process fix its address space layout. -g, --agent : Spawn an agent thread in the target. At runtime, the agent receives external commands and can change supported tracing options. See AGENT section in the uftrace-live (1). --srcline : Enable recording source line in the debug info. FILTERS The uftrace tool supports filtering out uninteresting functions. Filtering is highly recommended since it helps users focus on the interesting functions and reduces the data size. When uftrace is called it receives two types of function filter; an opt-in filter with -F / --filter and an opt-out filter with -N / --notrace . These filters can be applied either at record time or replay time. They can be added and removed at runtime from the client. See uftrace-live (1) for details about agent operations. The first type of filter is opt-in. By default, it doesn't trace anything. But when one of the specified functions is executed, tracing is started. When the function returns, tracing is stopped again. For example, consider a simple program which calls a() , b() and c() in turn. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c Normally uftrace will trace all the functions from main() to c() . $ uftrace record ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ But when the -F b filter option is used, it will not trace main() or a() but only b() and c() . $ uftrace record -F b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The second type of filter is opt-out. By default, everything is traced, but when one of the specified functions is executed, tracing stops. When the excluded function returns, tracing is started again. In the above example, you can omit the function b() and all calls it makes with the -N option. $ uftrace record -N b ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ If users only care about specific functions and want to know how they are called, one can use the caller filter. It makes the function as leaf and records the parent functions to the function. $ uftrace record -C b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, functions not in the calling path were not shown. Also the function 'c' - which is a child of the function 'b' - is also hidden. Caller filters can be added and removed from the client at runtime, using the @clear suffix for the -C / --caller-filter option. In addition, you can limit the nesting level of functions with the -D option. $ uftrace record -D 3 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, uftrace only records functions up to a depth of 3, so leaf function c() was omitted. Note that the -D option works with -F . Sometimes it's useful to see long-running functions only. This is good because there are usually many tiny functions that are not interesting. The -t / --time-filter option implements the time-based filter that only records functions which run longer than the given threshold. In the above example, the user might want to see functions running more than 5 micro-seconds like below: $ uftrace record -t 5us ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The -t / --time-filter option works for user-level functions only. It does not work for recording kernel functions, but they can be hidden in replay, report, dump and graph commands with -t / --time-filter option. In addition, you can set filter to record selected source locations with -L option. $ uftrace record -L s-libmain.c t-lib $ uftrace replay --srcline # DURATION TID FUNCTION [SOURCE] [ 5043] | main() { /* /home/uftrace/tests/s-libmain.c:16 */ 6.998 us [ 5043] | foo(); /* /home/uftrace/tests/s-libmain.c:11 */ 9.393 us [ 5043] | } /* main */ You can set filter with the @hide suffix not to record selected source locations. $ uftrace record -L s-libmain.c@hide t-lib $ uftrace replay --srcline # DURATION TID FUNCTION [SOURCE] [ 14688] | lib_a() { /* /home/uftrace/tests/s-lib.c:10 */ [ 14688] | lib_b() { /* /home/uftrace/tests/s-lib.c:15 */ 1.505 us [ 14688] | lib_c(); /* /home/uftrace/tests/s-lib.c:20 */ 2.816 us [ 14688] | } /* lib_b */ 3.181 us [ 14688] | } /* lib_a */ The -Z / --size-filter option is to filter functions that has small sizes. It reads ELF symbols size and compare it with the given value. The PLT functions may have no symbol size in the ELF format, in that case the PLT entry size will be used as the size of the function. $ uftrace record -Z 100 t-arg $ uftrace replay # DURATION TID FUNCTION [162500] | main() { 12.486 us [162500] | foo(); 0.505 us [162500] | many(); [162500] | pass() { 0.283 us [162500] | check(); 1.449 us [162500] | } /* pass */ 18.478 us [162500] | } /* main */ You can also set triggers on filtered functions. See TRIGGERS section below for details. When kernel function tracing is enabled, you can also set the filters on kernel functions by marking the symbol with the @kernel modifier. The following example will show all user functions and the (kernel) page fault handler. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */ TRIGGERS The uftrace tool supports triggering actions on selected function calls (with or without filters) and/or signals. Currently supported triggers are listed below. The BNF for trigger specification is as follows: <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"trace\" | \"trace_on\" | \"trace_off\" | \"time=\"<time_spec> | \"size=\"<num> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"recover\" \"filter\" | \"notrace\" | \"recover\" <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" The depth trigger is to change filter depth during execution of the function. It can be used to apply different filter depths for different functions. The following example shows how triggers work. The global filter maximum depth is 5, but when function b() is called, it is changed to 1, so functions below b() will not be shown. $ uftrace record -D 5 -T 'b@depth=1' ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The backtrace trigger is only meaningful in the replay command. The trace_on and trace_off actions (the _ can be omitted as traceon and traceoff ) control whether uftrace records the specified functions or not. The 'recover' trigger is for some corner cases in which the process accesses the callstack directly. For now it's not necessary to call it as uftrace does the job automatically. The 'time' trigger is to change time filter setting during execution of the function. It can be used to apply different time filter for different functions. The read trigger is to read some information at runtime. The result will be recorded as (builtin) events at the beginning and the end of a given function. As of now, following events are supported: \"proc/statm\": process memory stat from /proc filesystem \"page-fault\": number of page faults using getrusage(2) \"pmu-cycle\": cpu cycles and instructions using Linux perf-event syscall \"pmu-cache\": (cpu) cache-references and misses using Linux perf-event syscall \"pmu-branch\": branch instructions and misses using Linux perf-event syscall The results are printed as events (comments) like below. $ uftrace record -T a@read=proc/statm ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ The 'finish' trigger is to end recording. The process still can run and this can be useful to trace unterminated processes like daemon. The 'filter' and 'notrace' triggers have same effect as -F / --filter and -N / --notrace options respectively. Triggers only work for user-level functions for now. The trigger can be used for signals as well. This is done by signal trigger with --signal option. The syntax is similar to function trigger but only \"trace_on\", \"trace_off\" and \"finish\" trigger actions are supported. $ uftrace record --signal 'SIGUSR1@finish' ./some-daemon ARGUMENTS The uftrace tool supports recording function arguments and/or return values using the -A/--argument and -R/--retval options respectively. The syntax is very similar to that of triggers: <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> The -A/--argument option takes a symbol name pattern and its optional specs. The spec is started by argN where N is an index of the arguments. The index starts from 1 and corresponds to the argument passing order of the calling convention on the system. Note that the indexes of arguments are separately counted for integer (or pointer) and floating-point type, and they can interfere depending on the calling convention. The argN is for integer arguments and fpargN is for floating-point arguments. Users can optionally specify a format and size for the arguments and/or return values. The \"d\" format or without format field, uftrace treats them as 'long int' type for integers and 'double' for floating-point numbers. The \"i\" format makes it signed integer type and \"u\" format is for unsigned type. Both are printed as decimal while \"x\" format makes it printed as hexadecimal, and \"o\" format makes it printed as octal. The \"s\" format is for null-terminated string type and \"c\" format is for character type. The \"f\" format is for floating-point type and is meaningful only for return value (generally). Note that fpargN doesn't take the format field since it's always floating-point. The \"S\" format is for std::string, but it only supports libstdc++ library as of yet. Finally, the \"p\" format is for function pointer. Once the target address is recorded, it will be displayed as function name. Please beware when using string type arguments since it can crash the program if the (pointer) value is invalid. Actually uftrace tries to keep track of valid ranges of process address space but it might miss some corner cases. It is also possible to specify a certain register name or stack offset for arguments (but not for return value). The following register names can be used for argument: x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) Examples are below: $ uftrace record -A main@arg1/x -R main@retval/i32 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace record -A puts@arg1/s -R puts@retval ./hello Hello world $ uftrace replay # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ Note that these arguments and return value are recorded only if the executable was built with the -pg option. Executables built with -finstrument-functions will ignore it except for library calls. Recording of arguments and return values only works with user-level functions for now. If the target program is built with debug info like DWARF, uftrace can identify number of arguments and their types automatically (when built with libdw). Also arguments and return value of some well-known library functions are provided even if the debug info is not available. In these cases user don't need to specify spec of the arguments and return value manually - just a function name (or pattern) is enough. In fact, manual argspec will suppress the automatic argspec. For example, the above example can be written like below: $ uftrace record -A . -R main ./hello Hello world $ uftrace replay -F main # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ Note that argument pattern (\".\") matches to any character so it recorded all (supported) functions. It shows two arguments for \"main\" and a single string argument for \"puts\". If you simply want to see all arguments and return values of every functions (if supported), use -a/--auto-args option. DYNAMIC TRACING FULL DYNAMIC TRACING The uftrace tool supports dynamic function tracing which can be enabled at runtime (load-time, to be precise) on x86_64 and AArch64. Before recording functions, normally you need to build the target program with -pg (or -finstrument-functions ), then it has some performance impact because all functions call mcount() . With dynamic tracing, you can trace specific functions only given by the -P / --patch option and can also disable specific functions given by the -U / --unpatch option. With capstone disassembly engine you even don't need to (re)compile the target with the option above. Now uftrace can analyze the instructions and (if possible) it can copy them to a different place and rewrite it to call mcount() function so that it can be traced by uftrace. After that the control is passed to the copied instructions and then returned back to the remaining instructions. The following example shows an error message when normally running uftrace. Because the binary doesn't call any instrumentation code (i.e. 'mcount'). $ gcc -o abc tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. But when the -P a patch option is used, and then only it can dynamically trace a() . $ uftrace record --no-libcall -P a abc $ uftrace replay # DURATION TID FUNCTION 0.923 us [19379] | a(); In addition, you can enable all functions using '.' (for glob, '*') that matches to any character in a regex pattern with P option. $ uftrace record --no-libcall -P . abc $ uftrace replay # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ Note that -U option has the opposite effect of -P option so users can the both to fine-control. The option comes later will override the formers. For example if you want to trace all functions but 'a' in the above: $ uftrace record --no-libcall -P . -U a abc $ uftrace replay # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ The order of the options is important, if you change it like -U a -P . then it will trace all the functions since -P . will be effective for all. GCC FENTRY If the capstone is not available, you need to add some more compiler (gcc) options when building the target program. The gcc 5.1 or more recent versions provide -mfentry and -mnop-mcount options which add instrumentation code (i.e. calling mcount() function) at the very beginning of a function and convert the instruction to a NOP. Then it has almost zero performance overhead when running in a normal condition. The uftrace can selectively convert it back to call mcount() using -P option. $ gcc -pg -mfentry -mnop-mcount -o abc-fentry tests/s-abc.c $ uftrace record -P . --no-libcall abc-fentry $ uftrace replay # DURATION TID FUNCTION [ 18973] | main() { [ 18973] | a() { [ 18973] | b() { 0.852 us [ 18973] | c(); 2.378 us [ 18973] | } /* b */ 2.909 us [ 18973] | } /* a */ 3.756 us [ 18973] | } /* main */ CLANG XRAY Clang/LLVM 4.0 provides a dynamic instrumentation technique called X-ray . It's similar to a combination of gcc -mfentry -mnop-mcount and -finstrument-functions . The uftrace also supports dynamic tracing on the executables built with the X-ray . For example, you can build the target program by clang with the below option and equally use -P option for dynamic tracing like below: $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace record -P main abc-xray $ uftrace replay # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace record -P . abc-xray $ uftrace replay # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */ PATCHABLE FUNCTION ENTRY Recent compilers in both gcc and clang support another useful option -fpatchable-function-entry=N[,M] that generates M NOPs before the function entry and N-M NOPs after the function entry. We can simply use the case when M is 0 so -fpatchable-function-entry=N is enough. The number of NOPs required for dynamic tracing depends on the architecture but x86_64 requires 5 NOPs and AArch64 requires 2 NOPs to dynamically patch a call instruction for uftrace recording. For example in x86_64, you can build the target program and trace as follows. $ gcc -fpatchable-function-entry=5 -o abc-fpatchable tests/s-abc.c $ uftrace record -P . abc-fpatchable $ uftrace replay # DURATION TID FUNCTION [ 6818] | main() { [ 6818] | a() { [ 6818] | b() { [ 6818] | c() { 0.926 us [ 6818] | getpid(); 4.158 us [ 6818] | } /* c */ 4.590 us [ 6818] | } /* b */ 4.957 us [ 6818] | } /* a */ 5.593 us [ 6818] | } /* main */ This feature can also be used by explicitly adding compiler attribute to some specific functions with __attribute__ ((patchable_function_entry (N,M))) . For example, the 'tests/s-abc.c' program can be modified as follows. static int c(void) { return 100000; } __attribute__((patchable_function_entry(5))) static int b(void) { return c() + 1; } static int a(void) { return b() - 1; } __attribute__((patchable_function_entry(5))) int main(void) { int ret = 0; ret += a(); return ret ? 0 : 1; } The attribute is added to function 'main' and 'b' only and this program can normally be compiled without any additional compiler options, but the compiler detects the attributes and adds 5 NOPs at the entry of 'main' and 'b'. $ gcc -o abc tests/s-patchable-abc.c $ uftrace record -P . abc $ uftrace replay # DURATION TID FUNCTION [ 20803] | main() { 0.342 us [ 20803] | b(); 1.608 us [ 20803] | } /* main */ With this way, uftrace can selectively trace only the functions user wants by explicitly adding the attribute. This approach can collect trace records in a much less intrusive way compared to tracing the entire functions enabled by compiler flags. -fpatchable-function-entry=N[,M] option and its attribute are supported since gcc-8.1 and clang-10. This dynamic tracing feature can be used in both x86_64 and AArch64 as of now. SCRIPT EXECUTION The uftrace tool supports script execution for each function entry and exit. The supported script types are Python 2.7, Python 3 and Lua 5.1 as of now. The user can write four functions. 'uftrace_entry' and 'uftrace_exit' are executed whenever each function is executed at the entry and exit. However 'uftrace_begin' and 'uftrace_end' are only executed once when the target program begins and ends. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") The above script can be executed in record time as follows: $ uftrace record -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished The 'ctx' variable is a dictionary type that contains the below information. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; Each field in 'script_context' can be read inside the script. Please see uftrace-script (1) for details about scripting. WATCH POINT The uftrace watch point is to display certain value only if it's changed. It's conceptually same as other debuggers but only works at function entry and exit so it might miss some updates. As of now, following watch points are supported: \"cpu\" : cpu number current task is running on \"var\": read value of a global variable given after \":\". Like read triggers, the result is displayed as event (comment): $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */ This is how to use 'var' watchpoints: $ uftrace -W var:mydata a.out # DURATION TID FUNCTION [239842] | __monstartup() { [239842] | /* watch:var (mydata=7) */ 3.534 us [239842] | } /* __monstartup */ 0.191 us [239842] | __cxa_atexit(); [239842] | main() { [239842] | foo() { [239842] | /* watch:var (mydata=42) */ 0.381 us [239842] | bar(); 1.069 us [239842] | } /* foo */ 2.698 us [239842] | } /* main */ SEE ALSO uftrace (1), uftrace-replay (1), uftrace-report (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1)","title":"Uftrace record"},{"location":"en/uftrace-record/#name","text":"uftrace-record - Run a command and record its trace data","title":"NAME"},{"location":"en/uftrace-record/#synopsis","text":"uftrace record [ options ] COMMAND [ command-options ]","title":"SYNOPSIS"},{"location":"en/uftrace-record/#description","text":"This command runs COMMAND and gathers function trace data from it, and saves it into files under the uftrace data directory - without displaying anything. This data can then be inspected later on, using uftrace replay or uftrace report .","title":"DESCRIPTION"},{"location":"en/uftrace-record/#record-options","text":"-A SPEC , --argument= SPEC : Record function arguments. This option can be used more than once. Implies --srcline. See ARGUMENTS . -R SPEC , --retval= SPEC : Record function return values. This option can be used more than once. Implies --srcline. See ARGUMENTS . -P FUNC , --patch= FUNC : Patch FUNC dynamically. This option can be used more than once. See DYNAMIC TRACING . -U FUNC , --unpatch= FUNC : Do not apply dynamic patching for FUNC. This option can be used more than once. See DYNAMIC TRACING . -E EVENT , --event= EVENT : Enable event tracing. The event should be available on the system. -S SCRIPT_PATH , --script= SCRIPT_PATH : Run a given script to do additional work at the entry and exit of function during target program execution. The type of script is detected by the postfix such as '.py' for python. See SCRIPT EXECUTION . -W, --watch= POINT : Add watch point to display POINT if the value is changed. See WATCH POINT . -a, --auto-args : Automatically record arguments and return values of known functions. These are usually functions in standard (C language or system) libraries but if debug info is available it includes functions in the user program. Implies --srcline. -l, --nest-libcall : Trace function calls between libraries. By default, uftrace only record library call from the main executable. Implies --force . -k, --kernel : Trace kernel functions as well as user functions. By default, the tracing depth is 1 (Only kernel entry/exit functions will be traced). Use the -K / --kernel-depth option to override this. -K DEPTH , --kernel-depth= DEPTH : Set kernel max function depth separately. Implies --kernel . --clock= CLOCK : Set clock source for timestamp recording. CLOCK can be one of 'mono', 'mono_raw', or 'boot'. Default is 'mono'. --host= HOST : Send trace data to given host via the network, not writing to files. The uftrace recv command should be run on the destination host to receive the data. --port= PORT : When sending data to the network (with --host ), use the given port instead of the default (8090). --signal= TRG : Set trigger on selected signals rather than functions. But there are restrictions so only a few of trigger actions are support for signals. The available actions are: trace_on, trace_off, finish. This option can be used more than once. See TRIGGERS . --nop : Do not record any functions. This is a no-op and only meaningful for performance comparisons. --force : Allow running uftrace even if some problems occur. When uftrace record finds no mcount symbol (which is generated by compiler) in the executable, it quits with an error message since uftrace can not trace the program. However, it is possible that the user is only interested in functions within a dynamically-linked library, in which case this option can be used to cause uftrace to run the program regardless. Also, the -A / --argument and -R / --retval options work only for binaries built with -pg , so uftrace will normally exit when it tries to run binaries built without that option. This option ignores the warning and goes on tracing without the argument and/or return value. --time : Print running time of children in time (1)-style. -e, --estimate-return : Record only ENTRY data for each function. This option is useful when the target program deals with stack in some way. Normally uftrace modifies task's execution stack frame to hook return from the function. However sometimes it makes troubles and it's hard to handle all the cases properly. This option tells uftrace not to hook return address in order to prevent those problems. The return time is estimated as a half of execution time of two consecutive functions.","title":"RECORD OPTIONS"},{"location":"en/uftrace-record/#common-options","text":"-F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See FILTERS . -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See TRIGGERS . -D DEPTH , --depth= DEPTH : Set global trace limit in nesting level. See FILTERS . -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. See FILTERS . -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. See FILTERS . -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. Implies --srcline. See FILTERS . --no-libcall : Do not record library function invocations. Library calls are normally traced by hooking calls to the resolver function of dynamic linker in the PLT. One can disable it with this option. --no-event : Disable event recording which is used by default. Note that explicit event tracing by --event option is not affected by this. Implies --no-sched . --no-sched : Disable schedule event recording which is used by default. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --disable : DEPRECATED. Use --trace=off instead. --trace= STATE : Set uftrace tracing STATE. Possible states are on and off . Default is on . This is only meaningful when used with a trace_on trigger or with the agent. --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used.","title":"COMMON OPTIONS"},{"location":"en/uftrace-record/#record-config-options","text":"--libmcount-path= PATH : Load libmcount libraries from this path. This is mostly for testing purposes. -b SIZE , --buffer= SIZE : Size of internal buffer in which trace data will be saved. Default size is 128k. --kernel-buffer= SIZE : Set kernel tracing buffer size. The default value (in the kernel) is 1408k. --no-pltbind : Do not bind dynamic symbol address. This option uses the LD_BIND_NOT environment variable to trace library function calls which might be missing due to concurrent (first) accesses. It is not meaningful to use this option with the --no-libcall option. --max-stack= DEPTH : Set the max function stack depth for tracing. Default is 1024. --num-thread= NUM : Use NUM threads to record trace data. Default is 1/4 of online CPUs (but when full kernel tracing is enabled, it will use the full number of CPUs). --libmcount-single : Use single thread version of libmcount for faster recording. This is ignored if the target program links with the pthread library. --rt-prio= PRIO : Boost priority of recording threads to real-time (FIFO) with priority of PRIO . This is particularly useful for high-volume data such as full kernel tracing. --keep-pid : Retain same pid for traced program. For some daemon processes, it is important to have same pid when forked. Running under uftrace normally changes pid as it calls fork() again internally. --no-randomize-addr : Disable ASLR (Address Space Layout Randomization). It makes the target process fix its address space layout. -g, --agent : Spawn an agent thread in the target. At runtime, the agent receives external commands and can change supported tracing options. See AGENT section in the uftrace-live (1). --srcline : Enable recording source line in the debug info.","title":"RECORD CONFIG OPTIONS"},{"location":"en/uftrace-record/#filters","text":"The uftrace tool supports filtering out uninteresting functions. Filtering is highly recommended since it helps users focus on the interesting functions and reduces the data size. When uftrace is called it receives two types of function filter; an opt-in filter with -F / --filter and an opt-out filter with -N / --notrace . These filters can be applied either at record time or replay time. They can be added and removed at runtime from the client. See uftrace-live (1) for details about agent operations. The first type of filter is opt-in. By default, it doesn't trace anything. But when one of the specified functions is executed, tracing is started. When the function returns, tracing is stopped again. For example, consider a simple program which calls a() , b() and c() in turn. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c Normally uftrace will trace all the functions from main() to c() . $ uftrace record ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ But when the -F b filter option is used, it will not trace main() or a() but only b() and c() . $ uftrace record -F b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The second type of filter is opt-out. By default, everything is traced, but when one of the specified functions is executed, tracing stops. When the excluded function returns, tracing is started again. In the above example, you can omit the function b() and all calls it makes with the -N option. $ uftrace record -N b ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ If users only care about specific functions and want to know how they are called, one can use the caller filter. It makes the function as leaf and records the parent functions to the function. $ uftrace record -C b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, functions not in the calling path were not shown. Also the function 'c' - which is a child of the function 'b' - is also hidden. Caller filters can be added and removed from the client at runtime, using the @clear suffix for the -C / --caller-filter option. In addition, you can limit the nesting level of functions with the -D option. $ uftrace record -D 3 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, uftrace only records functions up to a depth of 3, so leaf function c() was omitted. Note that the -D option works with -F . Sometimes it's useful to see long-running functions only. This is good because there are usually many tiny functions that are not interesting. The -t / --time-filter option implements the time-based filter that only records functions which run longer than the given threshold. In the above example, the user might want to see functions running more than 5 micro-seconds like below: $ uftrace record -t 5us ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The -t / --time-filter option works for user-level functions only. It does not work for recording kernel functions, but they can be hidden in replay, report, dump and graph commands with -t / --time-filter option. In addition, you can set filter to record selected source locations with -L option. $ uftrace record -L s-libmain.c t-lib $ uftrace replay --srcline # DURATION TID FUNCTION [SOURCE] [ 5043] | main() { /* /home/uftrace/tests/s-libmain.c:16 */ 6.998 us [ 5043] | foo(); /* /home/uftrace/tests/s-libmain.c:11 */ 9.393 us [ 5043] | } /* main */ You can set filter with the @hide suffix not to record selected source locations. $ uftrace record -L s-libmain.c@hide t-lib $ uftrace replay --srcline # DURATION TID FUNCTION [SOURCE] [ 14688] | lib_a() { /* /home/uftrace/tests/s-lib.c:10 */ [ 14688] | lib_b() { /* /home/uftrace/tests/s-lib.c:15 */ 1.505 us [ 14688] | lib_c(); /* /home/uftrace/tests/s-lib.c:20 */ 2.816 us [ 14688] | } /* lib_b */ 3.181 us [ 14688] | } /* lib_a */ The -Z / --size-filter option is to filter functions that has small sizes. It reads ELF symbols size and compare it with the given value. The PLT functions may have no symbol size in the ELF format, in that case the PLT entry size will be used as the size of the function. $ uftrace record -Z 100 t-arg $ uftrace replay # DURATION TID FUNCTION [162500] | main() { 12.486 us [162500] | foo(); 0.505 us [162500] | many(); [162500] | pass() { 0.283 us [162500] | check(); 1.449 us [162500] | } /* pass */ 18.478 us [162500] | } /* main */ You can also set triggers on filtered functions. See TRIGGERS section below for details. When kernel function tracing is enabled, you can also set the filters on kernel functions by marking the symbol with the @kernel modifier. The following example will show all user functions and the (kernel) page fault handler. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */","title":"FILTERS"},{"location":"en/uftrace-record/#triggers","text":"The uftrace tool supports triggering actions on selected function calls (with or without filters) and/or signals. Currently supported triggers are listed below. The BNF for trigger specification is as follows: <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"trace\" | \"trace_on\" | \"trace_off\" | \"time=\"<time_spec> | \"size=\"<num> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"recover\" \"filter\" | \"notrace\" | \"recover\" <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" The depth trigger is to change filter depth during execution of the function. It can be used to apply different filter depths for different functions. The following example shows how triggers work. The global filter maximum depth is 5, but when function b() is called, it is changed to 1, so functions below b() will not be shown. $ uftrace record -D 5 -T 'b@depth=1' ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The backtrace trigger is only meaningful in the replay command. The trace_on and trace_off actions (the _ can be omitted as traceon and traceoff ) control whether uftrace records the specified functions or not. The 'recover' trigger is for some corner cases in which the process accesses the callstack directly. For now it's not necessary to call it as uftrace does the job automatically. The 'time' trigger is to change time filter setting during execution of the function. It can be used to apply different time filter for different functions. The read trigger is to read some information at runtime. The result will be recorded as (builtin) events at the beginning and the end of a given function. As of now, following events are supported: \"proc/statm\": process memory stat from /proc filesystem \"page-fault\": number of page faults using getrusage(2) \"pmu-cycle\": cpu cycles and instructions using Linux perf-event syscall \"pmu-cache\": (cpu) cache-references and misses using Linux perf-event syscall \"pmu-branch\": branch instructions and misses using Linux perf-event syscall The results are printed as events (comments) like below. $ uftrace record -T a@read=proc/statm ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ The 'finish' trigger is to end recording. The process still can run and this can be useful to trace unterminated processes like daemon. The 'filter' and 'notrace' triggers have same effect as -F / --filter and -N / --notrace options respectively. Triggers only work for user-level functions for now. The trigger can be used for signals as well. This is done by signal trigger with --signal option. The syntax is similar to function trigger but only \"trace_on\", \"trace_off\" and \"finish\" trigger actions are supported. $ uftrace record --signal 'SIGUSR1@finish' ./some-daemon","title":"TRIGGERS"},{"location":"en/uftrace-record/#arguments","text":"The uftrace tool supports recording function arguments and/or return values using the -A/--argument and -R/--retval options respectively. The syntax is very similar to that of triggers: <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> The -A/--argument option takes a symbol name pattern and its optional specs. The spec is started by argN where N is an index of the arguments. The index starts from 1 and corresponds to the argument passing order of the calling convention on the system. Note that the indexes of arguments are separately counted for integer (or pointer) and floating-point type, and they can interfere depending on the calling convention. The argN is for integer arguments and fpargN is for floating-point arguments. Users can optionally specify a format and size for the arguments and/or return values. The \"d\" format or without format field, uftrace treats them as 'long int' type for integers and 'double' for floating-point numbers. The \"i\" format makes it signed integer type and \"u\" format is for unsigned type. Both are printed as decimal while \"x\" format makes it printed as hexadecimal, and \"o\" format makes it printed as octal. The \"s\" format is for null-terminated string type and \"c\" format is for character type. The \"f\" format is for floating-point type and is meaningful only for return value (generally). Note that fpargN doesn't take the format field since it's always floating-point. The \"S\" format is for std::string, but it only supports libstdc++ library as of yet. Finally, the \"p\" format is for function pointer. Once the target address is recorded, it will be displayed as function name. Please beware when using string type arguments since it can crash the program if the (pointer) value is invalid. Actually uftrace tries to keep track of valid ranges of process address space but it might miss some corner cases. It is also possible to specify a certain register name or stack offset for arguments (but not for return value). The following register names can be used for argument: x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) Examples are below: $ uftrace record -A main@arg1/x -R main@retval/i32 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace record -A puts@arg1/s -R puts@retval ./hello Hello world $ uftrace replay # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ Note that these arguments and return value are recorded only if the executable was built with the -pg option. Executables built with -finstrument-functions will ignore it except for library calls. Recording of arguments and return values only works with user-level functions for now. If the target program is built with debug info like DWARF, uftrace can identify number of arguments and their types automatically (when built with libdw). Also arguments and return value of some well-known library functions are provided even if the debug info is not available. In these cases user don't need to specify spec of the arguments and return value manually - just a function name (or pattern) is enough. In fact, manual argspec will suppress the automatic argspec. For example, the above example can be written like below: $ uftrace record -A . -R main ./hello Hello world $ uftrace replay -F main # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ Note that argument pattern (\".\") matches to any character so it recorded all (supported) functions. It shows two arguments for \"main\" and a single string argument for \"puts\". If you simply want to see all arguments and return values of every functions (if supported), use -a/--auto-args option.","title":"ARGUMENTS"},{"location":"en/uftrace-record/#dynamic-tracing","text":"","title":"DYNAMIC TRACING"},{"location":"en/uftrace-record/#full-dynamic-tracing","text":"The uftrace tool supports dynamic function tracing which can be enabled at runtime (load-time, to be precise) on x86_64 and AArch64. Before recording functions, normally you need to build the target program with -pg (or -finstrument-functions ), then it has some performance impact because all functions call mcount() . With dynamic tracing, you can trace specific functions only given by the -P / --patch option and can also disable specific functions given by the -U / --unpatch option. With capstone disassembly engine you even don't need to (re)compile the target with the option above. Now uftrace can analyze the instructions and (if possible) it can copy them to a different place and rewrite it to call mcount() function so that it can be traced by uftrace. After that the control is passed to the copied instructions and then returned back to the remaining instructions. The following example shows an error message when normally running uftrace. Because the binary doesn't call any instrumentation code (i.e. 'mcount'). $ gcc -o abc tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. But when the -P a patch option is used, and then only it can dynamically trace a() . $ uftrace record --no-libcall -P a abc $ uftrace replay # DURATION TID FUNCTION 0.923 us [19379] | a(); In addition, you can enable all functions using '.' (for glob, '*') that matches to any character in a regex pattern with P option. $ uftrace record --no-libcall -P . abc $ uftrace replay # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ Note that -U option has the opposite effect of -P option so users can the both to fine-control. The option comes later will override the formers. For example if you want to trace all functions but 'a' in the above: $ uftrace record --no-libcall -P . -U a abc $ uftrace replay # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ The order of the options is important, if you change it like -U a -P . then it will trace all the functions since -P . will be effective for all.","title":"FULL DYNAMIC TRACING"},{"location":"en/uftrace-record/#gcc-fentry","text":"If the capstone is not available, you need to add some more compiler (gcc) options when building the target program. The gcc 5.1 or more recent versions provide -mfentry and -mnop-mcount options which add instrumentation code (i.e. calling mcount() function) at the very beginning of a function and convert the instruction to a NOP. Then it has almost zero performance overhead when running in a normal condition. The uftrace can selectively convert it back to call mcount() using -P option. $ gcc -pg -mfentry -mnop-mcount -o abc-fentry tests/s-abc.c $ uftrace record -P . --no-libcall abc-fentry $ uftrace replay # DURATION TID FUNCTION [ 18973] | main() { [ 18973] | a() { [ 18973] | b() { 0.852 us [ 18973] | c(); 2.378 us [ 18973] | } /* b */ 2.909 us [ 18973] | } /* a */ 3.756 us [ 18973] | } /* main */","title":"GCC FENTRY"},{"location":"en/uftrace-record/#clang-xray","text":"Clang/LLVM 4.0 provides a dynamic instrumentation technique called X-ray . It's similar to a combination of gcc -mfentry -mnop-mcount and -finstrument-functions . The uftrace also supports dynamic tracing on the executables built with the X-ray . For example, you can build the target program by clang with the below option and equally use -P option for dynamic tracing like below: $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace record -P main abc-xray $ uftrace replay # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace record -P . abc-xray $ uftrace replay # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */","title":"CLANG XRAY"},{"location":"en/uftrace-record/#patchable-function-entry","text":"Recent compilers in both gcc and clang support another useful option -fpatchable-function-entry=N[,M] that generates M NOPs before the function entry and N-M NOPs after the function entry. We can simply use the case when M is 0 so -fpatchable-function-entry=N is enough. The number of NOPs required for dynamic tracing depends on the architecture but x86_64 requires 5 NOPs and AArch64 requires 2 NOPs to dynamically patch a call instruction for uftrace recording. For example in x86_64, you can build the target program and trace as follows. $ gcc -fpatchable-function-entry=5 -o abc-fpatchable tests/s-abc.c $ uftrace record -P . abc-fpatchable $ uftrace replay # DURATION TID FUNCTION [ 6818] | main() { [ 6818] | a() { [ 6818] | b() { [ 6818] | c() { 0.926 us [ 6818] | getpid(); 4.158 us [ 6818] | } /* c */ 4.590 us [ 6818] | } /* b */ 4.957 us [ 6818] | } /* a */ 5.593 us [ 6818] | } /* main */ This feature can also be used by explicitly adding compiler attribute to some specific functions with __attribute__ ((patchable_function_entry (N,M))) . For example, the 'tests/s-abc.c' program can be modified as follows. static int c(void) { return 100000; } __attribute__((patchable_function_entry(5))) static int b(void) { return c() + 1; } static int a(void) { return b() - 1; } __attribute__((patchable_function_entry(5))) int main(void) { int ret = 0; ret += a(); return ret ? 0 : 1; } The attribute is added to function 'main' and 'b' only and this program can normally be compiled without any additional compiler options, but the compiler detects the attributes and adds 5 NOPs at the entry of 'main' and 'b'. $ gcc -o abc tests/s-patchable-abc.c $ uftrace record -P . abc $ uftrace replay # DURATION TID FUNCTION [ 20803] | main() { 0.342 us [ 20803] | b(); 1.608 us [ 20803] | } /* main */ With this way, uftrace can selectively trace only the functions user wants by explicitly adding the attribute. This approach can collect trace records in a much less intrusive way compared to tracing the entire functions enabled by compiler flags. -fpatchable-function-entry=N[,M] option and its attribute are supported since gcc-8.1 and clang-10. This dynamic tracing feature can be used in both x86_64 and AArch64 as of now.","title":"PATCHABLE FUNCTION ENTRY"},{"location":"en/uftrace-record/#script-execution","text":"The uftrace tool supports script execution for each function entry and exit. The supported script types are Python 2.7, Python 3 and Lua 5.1 as of now. The user can write four functions. 'uftrace_entry' and 'uftrace_exit' are executed whenever each function is executed at the entry and exit. However 'uftrace_begin' and 'uftrace_end' are only executed once when the target program begins and ends. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") The above script can be executed in record time as follows: $ uftrace record -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished The 'ctx' variable is a dictionary type that contains the below information. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; Each field in 'script_context' can be read inside the script. Please see uftrace-script (1) for details about scripting.","title":"SCRIPT EXECUTION"},{"location":"en/uftrace-record/#watch-point","text":"The uftrace watch point is to display certain value only if it's changed. It's conceptually same as other debuggers but only works at function entry and exit so it might miss some updates. As of now, following watch points are supported: \"cpu\" : cpu number current task is running on \"var\": read value of a global variable given after \":\". Like read triggers, the result is displayed as event (comment): $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */ This is how to use 'var' watchpoints: $ uftrace -W var:mydata a.out # DURATION TID FUNCTION [239842] | __monstartup() { [239842] | /* watch:var (mydata=7) */ 3.534 us [239842] | } /* __monstartup */ 0.191 us [239842] | __cxa_atexit(); [239842] | main() { [239842] | foo() { [239842] | /* watch:var (mydata=42) */ 0.381 us [239842] | bar(); 1.069 us [239842] | } /* foo */ 2.698 us [239842] | } /* main */","title":"WATCH POINT"},{"location":"en/uftrace-record/#see-also","text":"uftrace (1), uftrace-replay (1), uftrace-report (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1)","title":"SEE ALSO"},{"location":"en/uftrace-recv/","text":"% UFTRACE-RECV(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-recv - Receive tracing data from socket and save it to files SYNOPSIS uftrace recv [ options ] DESCRIPTION This command receives tracing data from the network and saves it to files. Data will be sent using uftrace-record with --host option. OPTIONS -d DATA , --data= DATA : Specify directory name to save received data. --port= PORT : Use given port instead of the default (8090). --run-cmd= COMMAND : Run given (shell) command as soon as receive data. For example, one can run uftrace replay for received data. EXAMPLE The uftrace recv command should be run before sending data by record command. # HOST $ uftrace recv -d recv_data --port 1234 Above command starts a server with port by given (default 8090 ) to receive data from remote client. # CLIENT $ uftrace record -d example_data --host localhost --port 1234 example Above command sends the trace data to a remote server that pointed by given --host option ( localhost in this case) after running the example program. And as you see, you can choose save directory by using -d option (sending data will save to example_data in this case). # HOST : Check received data $ uftrace replay -d recv_data/example_data # DURATION TID FUNCTION [17308] | main() { [17308] | a() { [17308] | b() { [17308] | c() { 1.058 us [17308] | getpid(); 4.356 us [17308] | } /* c */ 4.664 us [17308] | } /* b */ 4.845 us [17308] | } /* a */ 5.076 us [17308] | } /* main */ You can find saved trace data of example from recv_data 's subdirectory example_data . Obviously, you should check at HOST . SEE ALSO uftrace (1), uftrace-record (1)","title":"Uftrace recv"},{"location":"en/uftrace-recv/#name","text":"uftrace-recv - Receive tracing data from socket and save it to files","title":"NAME"},{"location":"en/uftrace-recv/#synopsis","text":"uftrace recv [ options ]","title":"SYNOPSIS"},{"location":"en/uftrace-recv/#description","text":"This command receives tracing data from the network and saves it to files. Data will be sent using uftrace-record with --host option.","title":"DESCRIPTION"},{"location":"en/uftrace-recv/#options","text":"-d DATA , --data= DATA : Specify directory name to save received data. --port= PORT : Use given port instead of the default (8090). --run-cmd= COMMAND : Run given (shell) command as soon as receive data. For example, one can run uftrace replay for received data.","title":"OPTIONS"},{"location":"en/uftrace-recv/#example","text":"The uftrace recv command should be run before sending data by record command. # HOST $ uftrace recv -d recv_data --port 1234 Above command starts a server with port by given (default 8090 ) to receive data from remote client. # CLIENT $ uftrace record -d example_data --host localhost --port 1234 example Above command sends the trace data to a remote server that pointed by given --host option ( localhost in this case) after running the example program. And as you see, you can choose save directory by using -d option (sending data will save to example_data in this case). # HOST : Check received data $ uftrace replay -d recv_data/example_data # DURATION TID FUNCTION [17308] | main() { [17308] | a() { [17308] | b() { [17308] | c() { 1.058 us [17308] | getpid(); 4.356 us [17308] | } /* c */ 4.664 us [17308] | } /* b */ 4.845 us [17308] | } /* a */ 5.076 us [17308] | } /* main */ You can find saved trace data of example from recv_data 's subdirectory example_data . Obviously, you should check at HOST .","title":"EXAMPLE"},{"location":"en/uftrace-recv/#see-also","text":"uftrace (1), uftrace-record (1)","title":"SEE ALSO"},{"location":"en/uftrace-replay/","text":"% UFTRACE-REPLAY(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-replay - Print recorded function trace SYNOPSIS uftrace replay [ options ] DESCRIPTION This command prints trace data recorded using the uftrace-record (1) command. The traced functions are printed like a C program in time order. REPLAY OPTIONS -f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: duration, tid, addr, time, delta, elapsed, task and module. Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'duration,tid'. See FIELDS . --flat : Print flat format rather than C-like format. This is usually for debugging and testing purpose. --column-view : Show each task in separate column. This makes easy to distinguish functions in different tasks. --column-offset= DEPTH : When --column-view option is used, this option specifies the amount of offset between each task. Default is 8. --task-newline : Interleave a new line when task is changed. This makes easy to distinguish functions in different tasks. --no-comment : Do not show comments of returned functions. --libname : Show libname name along with function name. --srcline : Show source location of each function if available. --format= TYPE : Show format style output. Currently, normal and html styles are supported. --no-args : Do not show function arguments and return value. COMMON OPTIONS -F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See FILTERS . -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See TRIGGERS . -D DEPTH , --depth DEPTH : Set trace limit in nesting level. See FILTERS . -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. See FILTERS . -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. See FILTERS . -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. See FILTERS . --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --disable : DEPRECATED. Use --trace=off instead. --trace= STATE : Set uftrace tracing STATE. Possible states are on and off . Default is on . This is only meaningful when used with a trace_on trigger or with the agent --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used. COMMON ANALYSIS OPTIONS -H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See FILTERS . --kernel-full : Show all kernel functions and events occurred outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively. See FILTERS . FILTERS The uftrace tool supports filtering out uninteresting functions. When uftrace is called it receives two types of function filter; an opt-in filter with -F / --filter and an opt-out filter with -N / --notrace . These filters can be applied either at record time or replay time. The first one is an opt-in filter. By default, it doesn't show anything. But when one of the specified functions is met, printing is started. When the function returns, printing is stopped again. For example, consider a simple program which calls a() , b() and c() in turn. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c Normally uftrace replay will show all the functions from main() to c() . $ uftrace ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ But when the -F b filter option is used, it will not show main() or a() but only b() and c() . Note that the filter was set on uftrace replay , not at record time. $ uftrace record ./abc $ uftrace replay -F b # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The second type of filter is opt-out. When used, everything is shown by default, but printing stops once one of the specified functions is met. When the given function returns, printing is started again. In the above example, you can omit the function b() and all calls it makes with the -N option. $ uftrace record ./abc $ uftrace replay -N b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ You can hide the function b() only without affecting the calls it makes in its subtree functions with -H option. $ uftrace record ./abc $ uftrace replay -H b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The above -H option is especially useful when hiding std namespace functions in C++ programs by using -H ^std:: option setting. If users only care about specific functions and want to know how they are called, one can use the caller filter. It makes the function as leaf and prints the parent functions to the function. $ uftrace record ./abc $ uftrace replay -C b # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, functions not in the calling path were not shown. Also the function 'c' - which is a child of the function 'b' - is also hidden. In addition, you can limit the print nesting level with -D option. $ uftrace record ./abc $ uftrace replay -D 3 # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, uftrace only prints functions up to a depth of 3, so leaf function c() was omitted. Note that the -D option also works with -F . Sometimes it's useful to see long-running functions only. This is good because there are usually many tiny functions that are not interesting. The -t / --time-filter option implements the time-based filter that only records functions which run longer than the given threshold. In the above example, the user might want to see functions running more than 5 microseconds like below: $ uftrace record ./abc $ uftrace replay -t 5us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ You can also see replay output with different time threshold for the same recorded data. $ uftrace replay -t 6us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ In addition, The -r option can show functions executed within the given time range. When using this option, you can see TIMESTAMP or ELAPSED fields as well as DURATION and TID. $ uftrace replay -r 502716.387320101~502716.387322389 # TIMESTAMP DURATION TID FUNCTION 502716.387320101 0.289 us [ 6126] | fgets(); 502716.387320584 [ 6126] | get_values_from() { 502716.387320709 0.245 us [ 6126] | strdup(); 502716.387321172 0.144 us [ 6126] | strsep(); 502716.387321542 0.223 us [ 6126] | atoi(); 502716.387321983 0.239 us [ 6126] | atoi(); 502716.387322389 1.805 us [ 6126] | } /* get_values_from */ $ uftrace replay -r 40us~ | head -10 # ELAPSED DURATION TID FUNCTION 40.141 us [ 6126] | get_values_from() { 40.269 us 0.249 us [ 6126] | strdup(); 40.756 us 0.149 us [ 6126] | strsep(); 41.119 us 0.235 us [ 6126] | atoi(); 41.578 us 0.211 us [ 6126] | atoi(); 41.957 us 1.816 us [ 6126] | } /* get_values_from */ 42.124 us 0.220 us [ 6126] | fgets(); 42.529 us [ 6126] | get_values_from() { 42.645 us 0.236 us [ 6126] | strdup(); In addition, you can set filter to trace selected source locations with -L option. For this option, the --srcline option is required when using record command. $ uftrace record --srcline t-lib $ uftrace replay --srcline -L s-libmain.c # DURATION TID FUNCTION [SOURCE] [ 5043] | main() { /* /home/uftrace/tests/s-libmain.c:16 */ 6.998 us [ 5043] | foo(); /* /home/uftrace/tests/s-libmain.c:11 */ 9.393 us [ 5043] | } /* main */ You can set filter with the @hide suffix not to trace selected source locations. $ uftrace replay -L libmain*@hide # DURATION TID FUNCTION [ 866] | lib_a() { [ 866] | lib_b() { 1.576 us [ 866] | lib_c(); 2.833 us [ 866] | } /* lib_b */ 3.132 us [ 866] | } /* lib_a */ The -Z / --size-filter option is to filter functions that has small sizes. It reads symbols size from the .sym files and compare it with the given value. Note that .sym files might not have the precise value of the function size as it doesn't save the size value. It calculate the function size from the difference of two adjacent function addresses. So if the compiler aligns the function start addresses by padding NOP instructions at the end, it could have slightly bigger size than the actual value. $ uftrace record t-arg $ uftrace replay -Z 100 # DURATION TID FUNCTION [162500] | main() { 12.486 us [162500] | foo(); 0.505 us [162500] | many(); [162500] | pass() { 0.283 us [162500] | check(); 1.449 us [162500] | } /* pass */ 18.478 us [162500] | } /* main */ You can also set triggers on filtered functions. See TRIGGERS section below for details. TRIGGERS The uftrace tool supports triggering actions on selected function calls with or without filters. Currently supported triggers are depth , backtrace , trace_on and trace_off . The BNF for trigger specifications is like below: <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace_on\" | \"trace_off\" | \"color=\"<color> | \"time=\"<time_spec> | \"size=\"<num> | \"filter\" | \"notrace\" | \"hide\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" The depth trigger is to change filter depth during execution of the function. It can be used to apply different filter depths for different functions. And the backtrace trigger is used to print a stack backtrace at replay time. The color trigger is to change the color of the function in replay output. The supported colors are red , green , blue , yellow , magenta , cyan , bold , and gray . The following example shows how triggers work. We set a filter on function b() with the backtrace action and change the maximum filter depth under b() to 2. $ uftrace record ./abc $ uftrace replay -T 'b@filter,backtrace,depth=2' # DURATION TID FUNCTION backtrace [ 1234] | /* [ 0] main */ backtrace [ 1234] | /* [ 1] a */ [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The trace_on and trace_off actions (the _ can be omitted as traceon and traceoff ) control whether uftrace shows functions or not. The trigger runs at replay time, not run time, so it can handle kernel functions as well. Contrast this with triggers used under uftrace record . The time trigger is to change time filter setting during execution of the function. It can be used to apply different time filter for different functions. The filter and notrace triggers have same effect as -F / --filter and -N / --notrace options respectively. The hide trigger has the same effect as -H / --hide option that hides the given functions, but do not affect to the functions in their subtree unlike the notrace trigger. FIELDS The uftrace allows for user to customize the replay output with a couple of fields. Here the field means info on the left side of the pipe (|) character. By default it uses duration and tid fields, but you can use other fields in any order like: $ uftrace replay -f time,delta,duration,addr # TIMESTAMP TIMEDELTA DURATION ADDRESS FUNCTION 74469.340757350 1.583 us 4004d0 | __monstartup(); 74469.340762221 4.871 us 0.766 us 4004f0 | __cxa_atexit(); 74469.340764847 2.626 us 4006b1 | main() { 74469.340765061 0.214 us 400656 | a() { 74469.340765195 0.134 us 400669 | b() { 74469.340765344 0.149 us 40067c | c() { 74469.340765524 0.180 us 0.742 us 4004b0 | getpid(); 74469.340766935 1.411 us 1.591 us 40067c | } /* c */ 74469.340767195 0.260 us 2.000 us 400669 | } /* b */ 74469.340767372 0.177 us 2.311 us 400656 | } /* a */ 74469.340767541 0.169 us 2.694 us 4006b1 | } /* main */ Each field has following meaning: tid: task id (obtained by gettid(2)) duration: function execution time time: timestamp at the execution delta: difference between two timestamp in a task elapsed: elapsed time from the first timestamp addr: address of the function task: task name (comm) module: library or executable name of the function The default value is 'duration,tid'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +time\" is as same as \"-f duration,tid,time\". And it also accepts a special field name of 'none' which disables the field display and shows function output only. SEE ALSO uftrace (1), uftrace-record (1), uftrace-report (1), uftrace-info (1)","title":"Uftrace replay"},{"location":"en/uftrace-replay/#name","text":"uftrace-replay - Print recorded function trace","title":"NAME"},{"location":"en/uftrace-replay/#synopsis","text":"uftrace replay [ options ]","title":"SYNOPSIS"},{"location":"en/uftrace-replay/#description","text":"This command prints trace data recorded using the uftrace-record (1) command. The traced functions are printed like a C program in time order.","title":"DESCRIPTION"},{"location":"en/uftrace-replay/#replay-options","text":"-f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: duration, tid, addr, time, delta, elapsed, task and module. Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'duration,tid'. See FIELDS . --flat : Print flat format rather than C-like format. This is usually for debugging and testing purpose. --column-view : Show each task in separate column. This makes easy to distinguish functions in different tasks. --column-offset= DEPTH : When --column-view option is used, this option specifies the amount of offset between each task. Default is 8. --task-newline : Interleave a new line when task is changed. This makes easy to distinguish functions in different tasks. --no-comment : Do not show comments of returned functions. --libname : Show libname name along with function name. --srcline : Show source location of each function if available. --format= TYPE : Show format style output. Currently, normal and html styles are supported. --no-args : Do not show function arguments and return value.","title":"REPLAY OPTIONS"},{"location":"en/uftrace-replay/#common-options","text":"-F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See FILTERS . -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See FILTERS . -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See TRIGGERS . -D DEPTH , --depth DEPTH : Set trace limit in nesting level. See FILTERS . -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. See FILTERS . -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. See FILTERS . -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. See FILTERS . --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --disable : DEPRECATED. Use --trace=off instead. --trace= STATE : Set uftrace tracing STATE. Possible states are on and off . Default is on . This is only meaningful when used with a trace_on trigger or with the agent --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used.","title":"COMMON OPTIONS"},{"location":"en/uftrace-replay/#common-analysis-options","text":"-H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See FILTERS . --kernel-full : Show all kernel functions and events occurred outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively. See FILTERS .","title":"COMMON ANALYSIS OPTIONS"},{"location":"en/uftrace-replay/#filters","text":"The uftrace tool supports filtering out uninteresting functions. When uftrace is called it receives two types of function filter; an opt-in filter with -F / --filter and an opt-out filter with -N / --notrace . These filters can be applied either at record time or replay time. The first one is an opt-in filter. By default, it doesn't show anything. But when one of the specified functions is met, printing is started. When the function returns, printing is stopped again. For example, consider a simple program which calls a() , b() and c() in turn. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c Normally uftrace replay will show all the functions from main() to c() . $ uftrace ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ But when the -F b filter option is used, it will not show main() or a() but only b() and c() . Note that the filter was set on uftrace replay , not at record time. $ uftrace record ./abc $ uftrace replay -F b # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The second type of filter is opt-out. When used, everything is shown by default, but printing stops once one of the specified functions is met. When the given function returns, printing is started again. In the above example, you can omit the function b() and all calls it makes with the -N option. $ uftrace record ./abc $ uftrace replay -N b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ You can hide the function b() only without affecting the calls it makes in its subtree functions with -H option. $ uftrace record ./abc $ uftrace replay -H b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ The above -H option is especially useful when hiding std namespace functions in C++ programs by using -H ^std:: option setting. If users only care about specific functions and want to know how they are called, one can use the caller filter. It makes the function as leaf and prints the parent functions to the function. $ uftrace record ./abc $ uftrace replay -C b # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, functions not in the calling path were not shown. Also the function 'c' - which is a child of the function 'b' - is also hidden. In addition, you can limit the print nesting level with -D option. $ uftrace record ./abc $ uftrace replay -D 3 # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ In the above example, uftrace only prints functions up to a depth of 3, so leaf function c() was omitted. Note that the -D option also works with -F . Sometimes it's useful to see long-running functions only. This is good because there are usually many tiny functions that are not interesting. The -t / --time-filter option implements the time-based filter that only records functions which run longer than the given threshold. In the above example, the user might want to see functions running more than 5 microseconds like below: $ uftrace record ./abc $ uftrace replay -t 5us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ You can also see replay output with different time threshold for the same recorded data. $ uftrace replay -t 6us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ In addition, The -r option can show functions executed within the given time range. When using this option, you can see TIMESTAMP or ELAPSED fields as well as DURATION and TID. $ uftrace replay -r 502716.387320101~502716.387322389 # TIMESTAMP DURATION TID FUNCTION 502716.387320101 0.289 us [ 6126] | fgets(); 502716.387320584 [ 6126] | get_values_from() { 502716.387320709 0.245 us [ 6126] | strdup(); 502716.387321172 0.144 us [ 6126] | strsep(); 502716.387321542 0.223 us [ 6126] | atoi(); 502716.387321983 0.239 us [ 6126] | atoi(); 502716.387322389 1.805 us [ 6126] | } /* get_values_from */ $ uftrace replay -r 40us~ | head -10 # ELAPSED DURATION TID FUNCTION 40.141 us [ 6126] | get_values_from() { 40.269 us 0.249 us [ 6126] | strdup(); 40.756 us 0.149 us [ 6126] | strsep(); 41.119 us 0.235 us [ 6126] | atoi(); 41.578 us 0.211 us [ 6126] | atoi(); 41.957 us 1.816 us [ 6126] | } /* get_values_from */ 42.124 us 0.220 us [ 6126] | fgets(); 42.529 us [ 6126] | get_values_from() { 42.645 us 0.236 us [ 6126] | strdup(); In addition, you can set filter to trace selected source locations with -L option. For this option, the --srcline option is required when using record command. $ uftrace record --srcline t-lib $ uftrace replay --srcline -L s-libmain.c # DURATION TID FUNCTION [SOURCE] [ 5043] | main() { /* /home/uftrace/tests/s-libmain.c:16 */ 6.998 us [ 5043] | foo(); /* /home/uftrace/tests/s-libmain.c:11 */ 9.393 us [ 5043] | } /* main */ You can set filter with the @hide suffix not to trace selected source locations. $ uftrace replay -L libmain*@hide # DURATION TID FUNCTION [ 866] | lib_a() { [ 866] | lib_b() { 1.576 us [ 866] | lib_c(); 2.833 us [ 866] | } /* lib_b */ 3.132 us [ 866] | } /* lib_a */ The -Z / --size-filter option is to filter functions that has small sizes. It reads symbols size from the .sym files and compare it with the given value. Note that .sym files might not have the precise value of the function size as it doesn't save the size value. It calculate the function size from the difference of two adjacent function addresses. So if the compiler aligns the function start addresses by padding NOP instructions at the end, it could have slightly bigger size than the actual value. $ uftrace record t-arg $ uftrace replay -Z 100 # DURATION TID FUNCTION [162500] | main() { 12.486 us [162500] | foo(); 0.505 us [162500] | many(); [162500] | pass() { 0.283 us [162500] | check(); 1.449 us [162500] | } /* pass */ 18.478 us [162500] | } /* main */ You can also set triggers on filtered functions. See TRIGGERS section below for details.","title":"FILTERS"},{"location":"en/uftrace-replay/#triggers","text":"The uftrace tool supports triggering actions on selected function calls with or without filters. Currently supported triggers are depth , backtrace , trace_on and trace_off . The BNF for trigger specifications is like below: <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace_on\" | \"trace_off\" | \"color=\"<color> | \"time=\"<time_spec> | \"size=\"<num> | \"filter\" | \"notrace\" | \"hide\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" The depth trigger is to change filter depth during execution of the function. It can be used to apply different filter depths for different functions. And the backtrace trigger is used to print a stack backtrace at replay time. The color trigger is to change the color of the function in replay output. The supported colors are red , green , blue , yellow , magenta , cyan , bold , and gray . The following example shows how triggers work. We set a filter on function b() with the backtrace action and change the maximum filter depth under b() to 2. $ uftrace record ./abc $ uftrace replay -T 'b@filter,backtrace,depth=2' # DURATION TID FUNCTION backtrace [ 1234] | /* [ 0] main */ backtrace [ 1234] | /* [ 1] a */ [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ The trace_on and trace_off actions (the _ can be omitted as traceon and traceoff ) control whether uftrace shows functions or not. The trigger runs at replay time, not run time, so it can handle kernel functions as well. Contrast this with triggers used under uftrace record . The time trigger is to change time filter setting during execution of the function. It can be used to apply different time filter for different functions. The filter and notrace triggers have same effect as -F / --filter and -N / --notrace options respectively. The hide trigger has the same effect as -H / --hide option that hides the given functions, but do not affect to the functions in their subtree unlike the notrace trigger.","title":"TRIGGERS"},{"location":"en/uftrace-replay/#fields","text":"The uftrace allows for user to customize the replay output with a couple of fields. Here the field means info on the left side of the pipe (|) character. By default it uses duration and tid fields, but you can use other fields in any order like: $ uftrace replay -f time,delta,duration,addr # TIMESTAMP TIMEDELTA DURATION ADDRESS FUNCTION 74469.340757350 1.583 us 4004d0 | __monstartup(); 74469.340762221 4.871 us 0.766 us 4004f0 | __cxa_atexit(); 74469.340764847 2.626 us 4006b1 | main() { 74469.340765061 0.214 us 400656 | a() { 74469.340765195 0.134 us 400669 | b() { 74469.340765344 0.149 us 40067c | c() { 74469.340765524 0.180 us 0.742 us 4004b0 | getpid(); 74469.340766935 1.411 us 1.591 us 40067c | } /* c */ 74469.340767195 0.260 us 2.000 us 400669 | } /* b */ 74469.340767372 0.177 us 2.311 us 400656 | } /* a */ 74469.340767541 0.169 us 2.694 us 4006b1 | } /* main */ Each field has following meaning: tid: task id (obtained by gettid(2)) duration: function execution time time: timestamp at the execution delta: difference between two timestamp in a task elapsed: elapsed time from the first timestamp addr: address of the function task: task name (comm) module: library or executable name of the function The default value is 'duration,tid'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +time\" is as same as \"-f duration,tid,time\". And it also accepts a special field name of 'none' which disables the field display and shows function output only.","title":"FIELDS"},{"location":"en/uftrace-replay/#see-also","text":"uftrace (1), uftrace-record (1), uftrace-report (1), uftrace-info (1)","title":"SEE ALSO"},{"location":"en/uftrace-report/","text":"% UFTRACE-REPORT(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-report - Print statistics and summary for trace data SYNOPSIS uftrace report [ options ] DESCRIPTION This command collects trace data from a given data file and prints statistics and summary information. It shows function statistics by default, but can show task statistics with the --task option and show differences between traces with the --diff option. REPORT OPTIONS -f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: total , total-avg , total-min , total-max , total-stdv , self , self-avg , self-min , self-max , self-stdv , size , call and all . Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields and 'all' can be used to show all fields. Default is 'total,self,call'. See FIELDS . stdv stands for the relative standard deviation (RSD), which is the standard deviation expressed as a percentage of the mean. The relative standard deviation is calculated using the formula: \\[ RSD = \\left( \\frac{\\sigma}{\\mu} \\right) \\times 100\\% \\] where: - \\( \\sigma \\) represents the standard deviation. - \\( \\mu \\) represents the mean of the function's time. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : Sort functions by given KEYS. Multiple KEYS can be given, separated by comma (,). Possible keys are total (time), total-avg , total-min , total-max , total-stdv , self (time), self-avg , self-min , self-max , self-stdv , size , call and func . But if either --avg-total or --avg-self is used, the possible keys can be avg , min and max that apply to total or self time respectively. --avg-total : Show average, min, max, relative standard deviation of each function's total time. --avg-self : Show average, min, max, relative standard deviation of each function's self time. --task : Report task summary information rather than function statistics. Customize field in the output with -f option. Possible values are: total , self , func and tid . Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'total,self,func,tid'. See TASK FIELDS . --diff= DATA : Report differences between the input trace data and the given DATA. --diff-policy= POLICY : Apply custom diff policy. Available values are: \"abs\", \"no-abs\", \"percent\", \"no-percent\", \"compact\" and \"full\". The \"abs\" is to sort diff result using absolute value so positive and negative entries can be shown together while \"no-abs\" will show positive entries first and then negative ones. The \"percent\" is to show diff in percentage while \"no-percent\" is to show the values. The \"full\" is to show all three columns of baseline, new data and difference while \"compact\" only shows the difference. The default is \"abs\", \"compact\" and \"no-percent\". --sort-column= IDX : When --diff is used with \"full\" policy, 3 columns will be shown for each total time, self time and call count. This option selects the index of the column to be used as a sort key. Index 0 is for original data given by the --data option, index 1 is for data given by the --diff option, and index 2 is for (percentage) differences between the two data. --srcline : Show source location of each function if available. --format= TYPE : Show format style output. Currently, normal and html styles are supported. COMMON OPTIONS -F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not account functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always accounted regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used. COMMON ANALYSIS OPTIONS -H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions, including those called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1). EXAMPLE This command shows information like the following: $ uftrace record fibonacci $ uftrace report Total time Self time Calls Function ========== ========== ========== ==================== 3.781 us 0.124 us 1 main 3.657 us 3.657 us 41 fib 0.345 us 0.345 us 1 __monstartup 0.269 us 0.269 us 1 __cxa_atexit $ uftrace report -s call,self Total time Self time Calls Function ========== ========== ========== ==================== 3.657 us 3.657 us 41 fib 0.345 us 0.345 us 1 __monstartup 0.269 us 0.269 us 1 __cxa_atexit 3.781 us 0.124 us 1 main $ uftrace report --avg-self Self avg Self min Self max Self stdv Function ========== ========== ========== ========== ==================== 0.414 us 0.414 us 0.414 us 0.00% __monstartup 0.356 us 0.356 us 0.356 us 0.00% __cxa_atexit 0.113 us 0.113 us 0.113 us 0.00% main 0.087 us 0.032 us 0.369 us 78.13% fib $ uftrace report --task Total time Self time TID Num funcs Task name ========== ========== ====== ========== ==================== 4.395 us 4.395 us 28662 44 fibonacci $ uftrace record --srcline abc $ uftrace report --srcline Total time Self time Calls Function [Source] ========== ========== ========== ==================== 17.508 us 2.199 us 1 main [./tests/s-abc.c:26] 15.309 us 2.384 us 1 a [./tests/s-abc.c:11] 12.925 us 2.633 us 1 b [./tests/s-abc.c:16] 10.292 us 5.159 us 1 c [./tests/s-abc.c:21] 5.133 us 5.133 us 1 getpid 3.437 us 3.437 us 1 __monstartup 1.959 us 1.959 us 1 __cxa_atexit To see a difference between two data: $ uftrace record abc $ uftrace report --diff uftrace.data.old # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.263 us -0.070 us +0 a -0.193 us -0.042 us +0 b -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit -0.061 us -0.061 us +0 getpid The above example shows difference sorted by absolute value of total time. The following changes it to use (non-absolute) value of self time. $ uftrace report --diff uftrace.data.old -s self --diff-policy no-abs # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.193 us -0.042 us +0 b -0.061 us -0.061 us +0 getpid -0.263 us -0.070 us +0 a -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit By using \"full\" policy, user can see raw data as well like below. Also it's possible to sort by different column (for raw data). The example below will sort output by total time of the base data. $ uftrace report --diff uftrace.data.old --sort-column 0 --diff-policy full,percent # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time (diff) Self time (diff) Nr. called (diff) Function ================================ ================================ ================================ ==================== 2.812 us 2.511 us -10.70% 0.403 us 0.365 us -9.43% 1 1 +0 main 2.409 us 2.146 us -10.92% 0.342 us 0.272 us -20.47% 1 1 +0 a 2.067 us 1.874 us -9.34% 0.410 us 0.368 us -10.24% 1 1 +0 b 1.657 us 1.506 us -9.11% 0.890 us 0.800 us -10.11% 1 1 +0 c 0.920 us 0.789 us -14.24% 0.920 us 0.789 us -14.24% 1 1 +0 __cxa_atexit 0.767 us 0.706 us -7.95% 0.767 us 0.706 us -7.95% 1 1 +0 getpid FIELDS The uftrace allows user to customize the report output with a couple of fields. By default it uses total, self and call fields, but you can use other fields in any order like: $ uftrace report -f total,total-max,self-min,call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 46.806 us 46.806 us 3.290 us 1 main 43.516 us 43.516 us 7.483 us 1 foo 32.010 us 20.847 us 9.684 us 2 lib_c Each field can be used as sort key: $ uftrace report -f total,total-max,self-min,call -s call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 32.010 us 20.847 us 9.684 us 2 lib_c 43.516 us 43.516 us 7.483 us 1 foo 46.806 us 46.806 us 3.290 us 1 main $ uftrace report -f total,total-max,self-min,total-min,call -s self-min,total-min Total time Total max Self min Total min Calls Function ========== ========== ========== ========== ========== ==================== 32.010 us 20.847 us 9.684 us 11.163 us 2 lib_c 43.516 us 43.516 us 7.483 us 43.516 us 1 foo 46.806 us 46.806 us 3.290 us 46.806 us 1 main 50.552 us 26.690 us 2.828 us 23.862 us 2 lib_b 97.234 us 36.033 us 1.073 us 27.763 us 3 lib_a Each field can be used with --diff option: $ uftrace report --diff uftrace.data.old -f total,total-min # # uftrace diff # [0] base: uftrace.data (from uftrace record test/t-lib) # [1] diff: uftrace.data.old (from uftrace record test/t-lib) # Total time Total min Function =========== =========== ==================== +34.560 us +9.884 us lib_a +18.086 us +8.517 us lib_b +16.887 us +16.887 us main +15.479 us +15.479 us foo +10.600 us +3.127 us lib_c $ uftrace report --diff uftrace.data.old -f total,total-min,self-avg --diff-policy full # # uftrace diff # [0] base: uftrace.data (from uftrace record --srcline test/t-lib) # [1] diff: uftrace.data.old (from uftrace record --srcline test/t-lib) # Total time (diff) Total min (diff) Self avg (diff) Function =================================== =================================== =================================== ==================== 14.616 us 13.796 us +0.820 us 4.146 us 3.823 us +0.323 us 0.443 us 0.459 us -0.016 us lib_a 6.529 us 5.957 us +0.572 us 6.529 us 5.957 us +0.572 us 0.436 us 0.356 us +0.080 us main 7.700 us 7.173 us +0.527 us 3.677 us 3.426 us +0.251 us 0.365 us 0.363 us +0.002 us lib_b 6.093 us 5.601 us +0.492 us 6.093 us 5.601 us +0.492 us 0.741 us 0.476 us +0.265 us foo 5.638 us 5.208 us +0.430 us 2.346 us 2.187 us +0.159 us 1.646 us 1.510 us +0.136 us lib_c Each field has following meaning: total: total time of each function. total-avg: average of total time of each function. total-min: min of total time of each function. total-max: max of total time of each function. self: self time of each function. self-avg: average of self time of each function. self-min: min of self time of each function. self-max: max of self time of each function. call: called count of each function. The default value is 'total,self,call'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +total-avg\" is as same as \"-f total,self,call,total-avg\". And it also accepts a special field name of 'none' which disables the field display and shows function output only. TASK FIELDS total: total time of each task. self: self time of each task. func: number of functions in the task. tid: task ID. The default value is 'total,self,func,tid'. See FIELDS for field usage. SEE ALSO uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1)","title":"Uftrace report"},{"location":"en/uftrace-report/#name","text":"uftrace-report - Print statistics and summary for trace data","title":"NAME"},{"location":"en/uftrace-report/#synopsis","text":"uftrace report [ options ]","title":"SYNOPSIS"},{"location":"en/uftrace-report/#description","text":"This command collects trace data from a given data file and prints statistics and summary information. It shows function statistics by default, but can show task statistics with the --task option and show differences between traces with the --diff option.","title":"DESCRIPTION"},{"location":"en/uftrace-report/#report-options","text":"-f FIELD , --output-fields= FIELD : Customize field in the output. Possible values are: total , total-avg , total-min , total-max , total-stdv , self , self-avg , self-min , self-max , self-stdv , size , call and all . Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields and 'all' can be used to show all fields. Default is 'total,self,call'. See FIELDS . stdv stands for the relative standard deviation (RSD), which is the standard deviation expressed as a percentage of the mean. The relative standard deviation is calculated using the formula: \\[ RSD = \\left( \\frac{\\sigma}{\\mu} \\right) \\times 100\\% \\] where: - \\( \\sigma \\) represents the standard deviation. - \\( \\mu \\) represents the mean of the function's time. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : Sort functions by given KEYS. Multiple KEYS can be given, separated by comma (,). Possible keys are total (time), total-avg , total-min , total-max , total-stdv , self (time), self-avg , self-min , self-max , self-stdv , size , call and func . But if either --avg-total or --avg-self is used, the possible keys can be avg , min and max that apply to total or self time respectively. --avg-total : Show average, min, max, relative standard deviation of each function's total time. --avg-self : Show average, min, max, relative standard deviation of each function's self time. --task : Report task summary information rather than function statistics. Customize field in the output with -f option. Possible values are: total , self , func and tid . Multiple fields can be set by using comma. Special field of 'none' can be used (solely) to hide all fields. Default is 'total,self,func,tid'. See TASK FIELDS . --diff= DATA : Report differences between the input trace data and the given DATA. --diff-policy= POLICY : Apply custom diff policy. Available values are: \"abs\", \"no-abs\", \"percent\", \"no-percent\", \"compact\" and \"full\". The \"abs\" is to sort diff result using absolute value so positive and negative entries can be shown together while \"no-abs\" will show positive entries first and then negative ones. The \"percent\" is to show diff in percentage while \"no-percent\" is to show the values. The \"full\" is to show all three columns of baseline, new data and difference while \"compact\" only shows the difference. The default is \"abs\", \"compact\" and \"no-percent\". --sort-column= IDX : When --diff is used with \"full\" policy, 3 columns will be shown for each total time, self time and call count. This option selects the index of the column to be used as a sort key. Index 0 is for original data given by the --data option, index 1 is for data given by the --diff option, and index 2 is for (percentage) differences between the two data. --srcline : Show source location of each function if available. --format= TYPE : Show format style output. Currently, normal and html styles are supported.","title":"REPORT OPTIONS"},{"location":"en/uftrace-report/#common-options","text":"-F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not account functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always accounted regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used.","title":"COMMON OPTIONS"},{"location":"en/uftrace-report/#common-analysis-options","text":"-H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions, including those called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1).","title":"COMMON ANALYSIS OPTIONS"},{"location":"en/uftrace-report/#example","text":"This command shows information like the following: $ uftrace record fibonacci $ uftrace report Total time Self time Calls Function ========== ========== ========== ==================== 3.781 us 0.124 us 1 main 3.657 us 3.657 us 41 fib 0.345 us 0.345 us 1 __monstartup 0.269 us 0.269 us 1 __cxa_atexit $ uftrace report -s call,self Total time Self time Calls Function ========== ========== ========== ==================== 3.657 us 3.657 us 41 fib 0.345 us 0.345 us 1 __monstartup 0.269 us 0.269 us 1 __cxa_atexit 3.781 us 0.124 us 1 main $ uftrace report --avg-self Self avg Self min Self max Self stdv Function ========== ========== ========== ========== ==================== 0.414 us 0.414 us 0.414 us 0.00% __monstartup 0.356 us 0.356 us 0.356 us 0.00% __cxa_atexit 0.113 us 0.113 us 0.113 us 0.00% main 0.087 us 0.032 us 0.369 us 78.13% fib $ uftrace report --task Total time Self time TID Num funcs Task name ========== ========== ====== ========== ==================== 4.395 us 4.395 us 28662 44 fibonacci $ uftrace record --srcline abc $ uftrace report --srcline Total time Self time Calls Function [Source] ========== ========== ========== ==================== 17.508 us 2.199 us 1 main [./tests/s-abc.c:26] 15.309 us 2.384 us 1 a [./tests/s-abc.c:11] 12.925 us 2.633 us 1 b [./tests/s-abc.c:16] 10.292 us 5.159 us 1 c [./tests/s-abc.c:21] 5.133 us 5.133 us 1 getpid 3.437 us 3.437 us 1 __monstartup 1.959 us 1.959 us 1 __cxa_atexit To see a difference between two data: $ uftrace record abc $ uftrace report --diff uftrace.data.old # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.263 us -0.070 us +0 a -0.193 us -0.042 us +0 b -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit -0.061 us -0.061 us +0 getpid The above example shows difference sorted by absolute value of total time. The following changes it to use (non-absolute) value of self time. $ uftrace report --diff uftrace.data.old -s self --diff-policy no-abs # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.193 us -0.042 us +0 b -0.061 us -0.061 us +0 getpid -0.263 us -0.070 us +0 a -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit By using \"full\" policy, user can see raw data as well like below. Also it's possible to sort by different column (for raw data). The example below will sort output by total time of the base data. $ uftrace report --diff uftrace.data.old --sort-column 0 --diff-policy full,percent # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time (diff) Self time (diff) Nr. called (diff) Function ================================ ================================ ================================ ==================== 2.812 us 2.511 us -10.70% 0.403 us 0.365 us -9.43% 1 1 +0 main 2.409 us 2.146 us -10.92% 0.342 us 0.272 us -20.47% 1 1 +0 a 2.067 us 1.874 us -9.34% 0.410 us 0.368 us -10.24% 1 1 +0 b 1.657 us 1.506 us -9.11% 0.890 us 0.800 us -10.11% 1 1 +0 c 0.920 us 0.789 us -14.24% 0.920 us 0.789 us -14.24% 1 1 +0 __cxa_atexit 0.767 us 0.706 us -7.95% 0.767 us 0.706 us -7.95% 1 1 +0 getpid","title":"EXAMPLE"},{"location":"en/uftrace-report/#fields","text":"The uftrace allows user to customize the report output with a couple of fields. By default it uses total, self and call fields, but you can use other fields in any order like: $ uftrace report -f total,total-max,self-min,call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 46.806 us 46.806 us 3.290 us 1 main 43.516 us 43.516 us 7.483 us 1 foo 32.010 us 20.847 us 9.684 us 2 lib_c Each field can be used as sort key: $ uftrace report -f total,total-max,self-min,call -s call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 32.010 us 20.847 us 9.684 us 2 lib_c 43.516 us 43.516 us 7.483 us 1 foo 46.806 us 46.806 us 3.290 us 1 main $ uftrace report -f total,total-max,self-min,total-min,call -s self-min,total-min Total time Total max Self min Total min Calls Function ========== ========== ========== ========== ========== ==================== 32.010 us 20.847 us 9.684 us 11.163 us 2 lib_c 43.516 us 43.516 us 7.483 us 43.516 us 1 foo 46.806 us 46.806 us 3.290 us 46.806 us 1 main 50.552 us 26.690 us 2.828 us 23.862 us 2 lib_b 97.234 us 36.033 us 1.073 us 27.763 us 3 lib_a Each field can be used with --diff option: $ uftrace report --diff uftrace.data.old -f total,total-min # # uftrace diff # [0] base: uftrace.data (from uftrace record test/t-lib) # [1] diff: uftrace.data.old (from uftrace record test/t-lib) # Total time Total min Function =========== =========== ==================== +34.560 us +9.884 us lib_a +18.086 us +8.517 us lib_b +16.887 us +16.887 us main +15.479 us +15.479 us foo +10.600 us +3.127 us lib_c $ uftrace report --diff uftrace.data.old -f total,total-min,self-avg --diff-policy full # # uftrace diff # [0] base: uftrace.data (from uftrace record --srcline test/t-lib) # [1] diff: uftrace.data.old (from uftrace record --srcline test/t-lib) # Total time (diff) Total min (diff) Self avg (diff) Function =================================== =================================== =================================== ==================== 14.616 us 13.796 us +0.820 us 4.146 us 3.823 us +0.323 us 0.443 us 0.459 us -0.016 us lib_a 6.529 us 5.957 us +0.572 us 6.529 us 5.957 us +0.572 us 0.436 us 0.356 us +0.080 us main 7.700 us 7.173 us +0.527 us 3.677 us 3.426 us +0.251 us 0.365 us 0.363 us +0.002 us lib_b 6.093 us 5.601 us +0.492 us 6.093 us 5.601 us +0.492 us 0.741 us 0.476 us +0.265 us foo 5.638 us 5.208 us +0.430 us 2.346 us 2.187 us +0.159 us 1.646 us 1.510 us +0.136 us lib_c Each field has following meaning: total: total time of each function. total-avg: average of total time of each function. total-min: min of total time of each function. total-max: max of total time of each function. self: self time of each function. self-avg: average of self time of each function. self-min: min of self time of each function. self-max: max of self time of each function. call: called count of each function. The default value is 'total,self,call'. If given field name starts with \"+\", then it'll be appended to the default fields. So \"-f +total-avg\" is as same as \"-f total,self,call,total-avg\". And it also accepts a special field name of 'none' which disables the field display and shows function output only.","title":"FIELDS"},{"location":"en/uftrace-report/#task-fields","text":"total: total time of each task. self: self time of each task. func: number of functions in the task. tid: task ID. The default value is 'total,self,func,tid'. See FIELDS for field usage.","title":"TASK FIELDS"},{"location":"en/uftrace-report/#see-also","text":"uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1)","title":"SEE ALSO"},{"location":"en/uftrace-script/","text":"% UFTRACE-SCRIPT(1) Uftrace User Manuals % Honggyu Kim honggyu.kp@gmail.com , Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace-script - Run a script for recorded function trace SYNOPSIS uftrace script (-S|--script)","title":"Uftrace script"},{"location":"en/uftrace-script/#name","text":"uftrace-script - Run a script for recorded function trace","title":"NAME"},{"location":"en/uftrace-script/#synopsis","text":"uftrace script (-S|--script)","title":"SYNOPSIS"},{"location":"en/uftrace-tui/","text":"% UFTRACE-TUI(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Jun, 2018 NAME uftrace-tui - (Interactive) Text-based User Interface SYNOPSIS uftrace tui [ options ] DESCRIPTION This command starts an interactive window on a terminal which can show same output of other commands like graph, report and info. Users can navigate the result easily with key presses. The command line options are used to limit the initial data loading. TUI OPTIONS -f FIELD , --output-fields= FIELD : Customize fields in the output. This option basically indicates graph fields. Possible values are total, self and addr. The default value is 'total'. But if this option is used with --report option, this option indicates report fields. Possible values are total, total-avg, total-min, total-max, total-stdv, self, self-avg, self-min, self-max, self-stdv, call and size. The default value is 'total,self,call'. Multiple fields can be set by using comma. If given field name starts with \"+\", then it'll be appended to the default fields. The special field 'none' can be used (solely) to hide all fields. See uftrace-graph (1) or uftrace-report (1) for an explanation of fields. The stdv in total-stdv and self-stdv stands for relative standard deviation (RSD), it would only contain value if the function is invoked multiple times. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : Sort functions by given KEYS. Multiple KEYS can be given, separated by comma (,). Possible keys are total (time), total-avg, total-min, total-max, self (time), self-avg, self-min, self-max, call, func and size. This option must be used with --report option. COMMON OPTIONS -F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. See FILTERS . --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used. COMMON ANALYSIS OPTIONS -H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1). OUTLINE If there's only one session (the usual case) it'll start with the graph mode to show a full (function) call graph of the session. Users can change to different mode by pressing some keys. The h key always is available for help. The current line (marked with '>' below) is displayed with inverted color and arrow keys are used to move the cursor to a different location. TOTAL TIME : FUNCTION > 7.548 us : (1) t-abc 1.811 us : \u251c\u2500(1) __monstartup : \u2502 1.266 us : \u251c\u2500(1) __cxa_atexit : \u2502 4.471 us : \u2514\u2500(1) main 3.743 us : (1) a 3.194 us : (1) b 2.454 us : (1) c 1.000 us : (1) getpid uftrace graph: session 2a22812ebbd06f40 (/tmp/uftrace/tests/t-abc) If there're more than one session, it'll start with session selection mode. The graph mode is separated for each session but report mode is merged for the whole sessions. Key uftrace command > G call Graph for session #1: t-forkexec call Graph for session #2: t-abc R Report functions I uftrace Info h Help message q quit session a27acff69aec5c9c: exe image: /tmp/uftrace/tests/t-forkexec KEYS Following keys can be used in the TUI window: Up , Down : Move cursor up/down PageUp , PageDown : Move page up/down Home , End : Move to the first/last entry Enter : Fold/unfold graph or Select session G : Show full graph of the current session g : Show backtrace and call graph of the current function R : Show uftrace report r : Show uftrace report of the current function s : Sort by the next column (in report mode) I : Show uftrace info S : Show session list O : Open editor for current function c / e : Collapse/Expand direct children graph node C / E : Collapse/Expand all descendant graph node n / p : Move to next/prev sibling (in graph mode) u : Move up to parent (in graph mode) l : Move to the longest executed child (in graph mode) j / k : Move cursor up/down (like vi) z : Set current line to the center of screen / : Start search < / P : Search previous match > / N : Search next match v : Show debug message f : Customize fields in graph or report mode h / ? : Show help window q : Quit SEE ALSO uftrace (1), uftrace-graph (1), uftrace-report (1), uftrace-info (1), uftrace-replay (1)","title":"Uftrace tui"},{"location":"en/uftrace-tui/#name","text":"uftrace-tui - (Interactive) Text-based User Interface","title":"NAME"},{"location":"en/uftrace-tui/#synopsis","text":"uftrace tui [ options ]","title":"SYNOPSIS"},{"location":"en/uftrace-tui/#description","text":"This command starts an interactive window on a terminal which can show same output of other commands like graph, report and info. Users can navigate the result easily with key presses. The command line options are used to limit the initial data loading.","title":"DESCRIPTION"},{"location":"en/uftrace-tui/#tui-options","text":"-f FIELD , --output-fields= FIELD : Customize fields in the output. This option basically indicates graph fields. Possible values are total, self and addr. The default value is 'total'. But if this option is used with --report option, this option indicates report fields. Possible values are total, total-avg, total-min, total-max, total-stdv, self, self-avg, self-min, self-max, self-stdv, call and size. The default value is 'total,self,call'. Multiple fields can be set by using comma. If given field name starts with \"+\", then it'll be appended to the default fields. The special field 'none' can be used (solely) to hide all fields. See uftrace-graph (1) or uftrace-report (1) for an explanation of fields. The stdv in total-stdv and self-stdv stands for relative standard deviation (RSD), it would only contain value if the function is invoked multiple times. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : Sort functions by given KEYS. Multiple KEYS can be given, separated by comma (,). Possible keys are total (time), total-avg, total-min, total-max, self (time), self-avg, self-min, self-max, call, func and size. This option must be used with --report option.","title":"TUI OPTIONS"},{"location":"en/uftrace-tui/#common-options","text":"-F FUNC , --filter= FUNC : Set filter to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -N FUNC , --notrace= FUNC : Set filter not to trace selected functions and their children functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -C FUNC , --caller-filter= FUNC : Set filter to trace callers of selected functions only. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. -T TRG , --trigger= TRG : Set trigger on selected functions. This option can be used more than once. See uftrace-replay (1) for an explanation of triggers. -D DEPTH , --depth DEPTH : Set trace limit in nesting level. -t TIME , --time-filter= TIME : Do not show functions which run under the time threshold. If some functions explicitly have the 'trace' trigger applied, those are always traced regardless of execution time. -Z SIZE , --size-filter= SIZE : Do not show functions smaller than SIZE bytes. -L LOCATION , --loc-filter= LOCATION : Set filter to trace selected source locations. This option can be used more than once. See FILTERS . --no-libcall : Do not show library calls. --no-event : Do not show any events. Implies --no-sched . --no-sched : Do not show schedule events. --no-sched-preempt : Do not show preempt schedule events but show regular(sleeping) schedule events. --match= TYPE : Use pattern match using TYPE. Possible types are regex and glob . Default is regex . --with-syms= DIR : Read symbol data from the .sym files in DIR directory instead of the binary. This can be useful to deal with stripped binaries. The file name of the main binary should be the same when saved and used.","title":"COMMON OPTIONS"},{"location":"en/uftrace-tui/#common-analysis-options","text":"-H FUNC , --hide= FUNC : Set filter not to trace selected functions. It doesn't affect their subtrees, but hides only the given functions. This option can be used more than once. See uftrace-replay (1) for an explanation of filters. --kernel-full : Show all kernel functions called outside of user functions. --kernel-only : Show kernel functions only without user functions. --event-full : Show all (user) events outside of user functions. --tid= TID [, TID ,...] : Only print functions called by the given tasks. To see the list of tasks in the data file, you can use uftrace report --task or uftrace info . This option can also be used more than once. --demangle= TYPE : Use demangled C++ symbol names for filters, triggers, arguments and/or return values. Possible values are \"full\", \"simple\" and \"no\". Default is \"simple\" which ignores function arguments and template parameters. -r RANGE , --time-range= RANGE : Only show functions executed within the time RANGE. The RANGE can be \\<start>~\\<stop> (separated by \"~\") and one of \\<start> and \\<stop> can be omitted. The \\<start> and \\<stop> are timestamp or elapsed time if they have \\<time_unit> postfix, for example '100us'. The timestamp or elapsed time can be shown with -f time or -f elapsed option respectively in uftrace replay (1).","title":"COMMON ANALYSIS OPTIONS"},{"location":"en/uftrace-tui/#outline","text":"If there's only one session (the usual case) it'll start with the graph mode to show a full (function) call graph of the session. Users can change to different mode by pressing some keys. The h key always is available for help. The current line (marked with '>' below) is displayed with inverted color and arrow keys are used to move the cursor to a different location. TOTAL TIME : FUNCTION > 7.548 us : (1) t-abc 1.811 us : \u251c\u2500(1) __monstartup : \u2502 1.266 us : \u251c\u2500(1) __cxa_atexit : \u2502 4.471 us : \u2514\u2500(1) main 3.743 us : (1) a 3.194 us : (1) b 2.454 us : (1) c 1.000 us : (1) getpid uftrace graph: session 2a22812ebbd06f40 (/tmp/uftrace/tests/t-abc) If there're more than one session, it'll start with session selection mode. The graph mode is separated for each session but report mode is merged for the whole sessions. Key uftrace command > G call Graph for session #1: t-forkexec call Graph for session #2: t-abc R Report functions I uftrace Info h Help message q quit session a27acff69aec5c9c: exe image: /tmp/uftrace/tests/t-forkexec","title":"OUTLINE"},{"location":"en/uftrace-tui/#keys","text":"Following keys can be used in the TUI window: Up , Down : Move cursor up/down PageUp , PageDown : Move page up/down Home , End : Move to the first/last entry Enter : Fold/unfold graph or Select session G : Show full graph of the current session g : Show backtrace and call graph of the current function R : Show uftrace report r : Show uftrace report of the current function s : Sort by the next column (in report mode) I : Show uftrace info S : Show session list O : Open editor for current function c / e : Collapse/Expand direct children graph node C / E : Collapse/Expand all descendant graph node n / p : Move to next/prev sibling (in graph mode) u : Move up to parent (in graph mode) l : Move to the longest executed child (in graph mode) j / k : Move cursor up/down (like vi) z : Set current line to the center of screen / : Start search < / P : Search previous match > / N : Search next match v : Show debug message f : Customize fields in graph or report mode h / ? : Show help window q : Quit","title":"KEYS"},{"location":"en/uftrace-tui/#see-also","text":"uftrace (1), uftrace-graph (1), uftrace-report (1), uftrace-info (1), uftrace-replay (1)","title":"SEE ALSO"},{"location":"en/uftrace/","text":"% UFTRACE(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 NAME uftrace - Function graph tracer for userspace SYNOPSIS uftrace [ record | replay | live | report | info | dump | recv | graph | script | tui ] [ options ] COMMAND [ command-options ] DESCRIPTION The uftrace tool is a function tracer that traces the execution of given COMMAND at the function level. COMMAND should be a C or C++ executable built with compiler instrumentation ( -pg or -finstrument-functions ). COMMAND needs to have an ELF symbol table (i.e. not be strip (1)-ed) in order for the names of traced functions to be available. The uftrace command consists of a number of sub-commands, in the manner of git (1) or perf (1). Below is a short description of each sub-command. For more detailed information, see the respective manual pages. The options in this page can be given to any sub-command also. For convenience, if no sub-command is given, uftrace acts as though the live sub-command was specified, which runs the record and replay sub-commands in turn. See uftrace-live (1) for options belonging to the live sub-command. For more detailed analysis, it is better to use uftrace-record (1) to save trace data, and then analyze it with other uftrace commands like uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-script (1) or uftrace-tui (1). SUB-COMMANDS record : Run a given command and save trace data in a data file or directory. replay : Print recorded function trace data with time durations. live : Do live tracing. Print function trace of the given command. report : Print various statistics and summary of the recorded trace data. info : Print side-band information like OS version, CPU info, command line and so on. dump : Print raw tracing data in the data files. recv : Save tracing data sent to network graph : Print function call graph script : Run a script for recorded function trace tui : Show text user interface for graph and report COMMON OPTIONS These are the common options supported by all uftrace subcommands: -h, --help : Print help message and list of options with description --usage : Print usage string -V, --version : Print program version -v, --verbose : Print verbose messages. This option increases a debug level and can be used at most 3 times. --debug : Print debug messages. This option is same as -v / --verbose and is provided only for backward compatibility. --debug-domain= DOMAIN [, DOMAIN , ...] : Limit the printing of debug messages to those belonging to one of the DOMAINs specified. Available domains are: uftrace, symbol, demangle, filter, fstack, session, kernel, mcount, dynamic, event, script and dwarf. The domains can have an their own debug level optionally (preceded by a colon). For example, -v --debug-domain=filter:2 will apply debug level of 2 to the \"filter\" domain and apply debug level of 1 to others. -d DATA , --data= DATA : Specify name of trace data (directory). Default is uftrace.data . --logfile= FILE : Save warning and debug messages into this file instead of stderr. --color= VAL : Enable or disable color on the output. Possible values are \"yes\"(= \"true\" | \"1\" | \"on\" ), \"no\"(= \"false\" | \"0\" | \"off\" ) and \"auto\". The \"auto\" value is default and turns on coloring if stdout is a terminal. --no-pager : Do not use a pager. --opt-file= FILE : Read command-line options from the FILE. SUBCOMMAND-SPECIFIC OPTIONS These options are listed here for completeness, but are only effective with specific subcommands. Please see the uftrace-< subcommand > manual pages for more information: The manual for uftrace-live (1) is special: The subcommand live does record and replay internally. Thus, it describes most regular option in detail. --avg-self : Show average/min/max of self function time --avg-total : Show average/min/max of total function time -a, --auto-args : Show arguments and return value of known functions -A, --argument= FUNC @arg[,arg,...] : Show function arguments -b, --buffer= SIZE : Size of tracing buffer (default: 128K) --chrome : Dump recorded data in chrome trace format --clock : Set clock source for timestamp (default: mono) --column-offset= DEPTH : Offset of each column (default: 8) --column-view : Print tasks in separate columns -C, --caller-filter= FUNC : Only trace callers of those FUNCs --demangle= TYPE : C++ symbol demangling: full, simple, no : (default: simple) --diff= DATA : Report differences --diff-policy= POLICY : Control diff report policy : (default: 'abs,compact,no-percent') --disable : Start with tracing disabled -D, --depth= DEPTH : Trace functions within DEPTH -e, --estimate-return : Use only entry record type for safety --event-full : Show all events outside of function -E, --Event= EVENT : Enable EVENT to save more information --flame-graph : Dump recorded data in FlameGraph format --flat : Use flat output format --force : Trace even if executable is not instrumented --format= FORMAT : Use FORMAT for output: normal, html (default: normal) -f, --output-fields= FIELD : Show FIELDs in the replay or graph output -F, --filter= FUNC : Only trace those FUNCs -g, --agent : Start an agent in mcount to listen to commands --graphviz : Dump recorded data in DOT format -H, --hide= FUNC : Hide FUNCs from trace --host= HOST : Send trace data to HOST instead of write to file -k, --kernel : Trace kernel functions also (if supported) --keep-pid : Keep same pid during execution of traced program --kernel-buffer= SIZE : Size of kernel tracing buffer (default: 1408K) --kernel-full : Show kernel functions outside of user --kernel-only : Dump kernel data only --kernel-skip-out : Skip kernel functions outside of user (deprecated) -K, --kernel-depth= DEPTH : Trace kernel functions within DEPTH --libmcount-single : Use single thread version of libmcount --list-event : List available events --logfile= FILE : Save warning and debug messages into this file instead of stderr. -l, --nest-libcall : Show nested library calls --libname : Show libname name with symbol name --libmcount-path= PATH : Load libmcount libraries from this PATH --match= TYPE : Support pattern match: regex, glob (default: : regex) --max-stack= DEPTH : Set max stack depth to DEPTH (default: 65535) --no-args : Do not show arguments and return value --no-comment : Don't show comments of returned functions --no-event : Disable (default) events --no-sched : Disable schedule events --no-sched-preempt : Hide pre-emptive schedule event : but show regular(sleeping) schedule event --no-libcall : Don't trace library function calls --no-merge : Don't merge leaf functions --no-pltbind : Do not bind dynamic symbols ( LD_BIND_NOT ) --no-randomize-addr : Disable ASLR (Address Space Layout Randomization) --nop : No operation (for performance test) --num-thread= NUM : Create NUM recorder threads -N, --notrace= FUNC : Don't trace those FUNCs -p, --pid= PID : Connect to the PID of an interactive mcount instance --port= PORT : Use PORT for network connection (default: 8090) -P, --patch= FUNC : Apply dynamic patching for FUNCs --record : Record a new trace before running given script --report : Show a live report before replay --rt-prio= PRIO : Record with real-time ( FIFO ) priority -r, --time-range= TIME ~ TIME : Show output within the TIME (timestamp or elapsed time) : range only --run-cmd= CMDLINE : Command line that want to execute after tracing : data received -R, --retval= FUNC [@retspec] : Show function return values for FUNC , optionally with given uftrace retspec --sample-time= TIME : Show flame graph with this sampling time --signal= SIGNAL @act[,act,...] : Trigger the given actions when the given SIGNAL is received --sort-column= INDEX : Sort diff report on column INDEX (default: 2) --srcline : Enable recording source line info --symbols : Print symbol table instead of the recorded tracing info -s, --sort= KEY [, KEY ,...] : Sort reported functions by KEYs (default: 2) -S, --script= SCRIPT : Run a given SCRIPT in function entry and exit -t, --time-filter= TIME : Hide small functions run less than the TIME --task : Print task relationship in a tree form instead of the tracing info. --task-newline : Interleave a newline when task is changed --tid= TID [, TID ,...] : Only replay those tasks --time : Print time information -T, --trigger= FUNC @act[,act,...] : Trigger action on those FUNCs -U, --unpatch= FUNC : Don't apply dynamic patching for FUNCs --with-syms= DIR : Use symbol files in the DIR -W, --watch= POINT : Watch and report POINT if it's changed -Z, --size-filter= SIZE : Apply dynamic patching for functions bigger than SIZE For more detail about these command-specific options, please see the more specific manual pages listed below. SEE ALSO uftrace-live (1), uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1)","title":"en"},{"location":"en/uftrace/#name","text":"uftrace - Function graph tracer for userspace","title":"NAME"},{"location":"en/uftrace/#synopsis","text":"uftrace [ record | replay | live | report | info | dump | recv | graph | script | tui ] [ options ] COMMAND [ command-options ]","title":"SYNOPSIS"},{"location":"en/uftrace/#description","text":"The uftrace tool is a function tracer that traces the execution of given COMMAND at the function level. COMMAND should be a C or C++ executable built with compiler instrumentation ( -pg or -finstrument-functions ). COMMAND needs to have an ELF symbol table (i.e. not be strip (1)-ed) in order for the names of traced functions to be available. The uftrace command consists of a number of sub-commands, in the manner of git (1) or perf (1). Below is a short description of each sub-command. For more detailed information, see the respective manual pages. The options in this page can be given to any sub-command also. For convenience, if no sub-command is given, uftrace acts as though the live sub-command was specified, which runs the record and replay sub-commands in turn. See uftrace-live (1) for options belonging to the live sub-command. For more detailed analysis, it is better to use uftrace-record (1) to save trace data, and then analyze it with other uftrace commands like uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-script (1) or uftrace-tui (1).","title":"DESCRIPTION"},{"location":"en/uftrace/#sub-commands","text":"record : Run a given command and save trace data in a data file or directory. replay : Print recorded function trace data with time durations. live : Do live tracing. Print function trace of the given command. report : Print various statistics and summary of the recorded trace data. info : Print side-band information like OS version, CPU info, command line and so on. dump : Print raw tracing data in the data files. recv : Save tracing data sent to network graph : Print function call graph script : Run a script for recorded function trace tui : Show text user interface for graph and report","title":"SUB-COMMANDS"},{"location":"en/uftrace/#common-options","text":"These are the common options supported by all uftrace subcommands: -h, --help : Print help message and list of options with description --usage : Print usage string -V, --version : Print program version -v, --verbose : Print verbose messages. This option increases a debug level and can be used at most 3 times. --debug : Print debug messages. This option is same as -v / --verbose and is provided only for backward compatibility. --debug-domain= DOMAIN [, DOMAIN , ...] : Limit the printing of debug messages to those belonging to one of the DOMAINs specified. Available domains are: uftrace, symbol, demangle, filter, fstack, session, kernel, mcount, dynamic, event, script and dwarf. The domains can have an their own debug level optionally (preceded by a colon). For example, -v --debug-domain=filter:2 will apply debug level of 2 to the \"filter\" domain and apply debug level of 1 to others. -d DATA , --data= DATA : Specify name of trace data (directory). Default is uftrace.data . --logfile= FILE : Save warning and debug messages into this file instead of stderr. --color= VAL : Enable or disable color on the output. Possible values are \"yes\"(= \"true\" | \"1\" | \"on\" ), \"no\"(= \"false\" | \"0\" | \"off\" ) and \"auto\". The \"auto\" value is default and turns on coloring if stdout is a terminal. --no-pager : Do not use a pager. --opt-file= FILE : Read command-line options from the FILE.","title":"COMMON OPTIONS"},{"location":"en/uftrace/#subcommand-specific-options","text":"These options are listed here for completeness, but are only effective with specific subcommands. Please see the uftrace-< subcommand > manual pages for more information: The manual for uftrace-live (1) is special: The subcommand live does record and replay internally. Thus, it describes most regular option in detail. --avg-self : Show average/min/max of self function time --avg-total : Show average/min/max of total function time -a, --auto-args : Show arguments and return value of known functions -A, --argument= FUNC @arg[,arg,...] : Show function arguments -b, --buffer= SIZE : Size of tracing buffer (default: 128K) --chrome : Dump recorded data in chrome trace format --clock : Set clock source for timestamp (default: mono) --column-offset= DEPTH : Offset of each column (default: 8) --column-view : Print tasks in separate columns -C, --caller-filter= FUNC : Only trace callers of those FUNCs --demangle= TYPE : C++ symbol demangling: full, simple, no : (default: simple) --diff= DATA : Report differences --diff-policy= POLICY : Control diff report policy : (default: 'abs,compact,no-percent') --disable : Start with tracing disabled -D, --depth= DEPTH : Trace functions within DEPTH -e, --estimate-return : Use only entry record type for safety --event-full : Show all events outside of function -E, --Event= EVENT : Enable EVENT to save more information --flame-graph : Dump recorded data in FlameGraph format --flat : Use flat output format --force : Trace even if executable is not instrumented --format= FORMAT : Use FORMAT for output: normal, html (default: normal) -f, --output-fields= FIELD : Show FIELDs in the replay or graph output -F, --filter= FUNC : Only trace those FUNCs -g, --agent : Start an agent in mcount to listen to commands --graphviz : Dump recorded data in DOT format -H, --hide= FUNC : Hide FUNCs from trace --host= HOST : Send trace data to HOST instead of write to file -k, --kernel : Trace kernel functions also (if supported) --keep-pid : Keep same pid during execution of traced program --kernel-buffer= SIZE : Size of kernel tracing buffer (default: 1408K) --kernel-full : Show kernel functions outside of user --kernel-only : Dump kernel data only --kernel-skip-out : Skip kernel functions outside of user (deprecated) -K, --kernel-depth= DEPTH : Trace kernel functions within DEPTH --libmcount-single : Use single thread version of libmcount --list-event : List available events --logfile= FILE : Save warning and debug messages into this file instead of stderr. -l, --nest-libcall : Show nested library calls --libname : Show libname name with symbol name --libmcount-path= PATH : Load libmcount libraries from this PATH --match= TYPE : Support pattern match: regex, glob (default: : regex) --max-stack= DEPTH : Set max stack depth to DEPTH (default: 65535) --no-args : Do not show arguments and return value --no-comment : Don't show comments of returned functions --no-event : Disable (default) events --no-sched : Disable schedule events --no-sched-preempt : Hide pre-emptive schedule event : but show regular(sleeping) schedule event --no-libcall : Don't trace library function calls --no-merge : Don't merge leaf functions --no-pltbind : Do not bind dynamic symbols ( LD_BIND_NOT ) --no-randomize-addr : Disable ASLR (Address Space Layout Randomization) --nop : No operation (for performance test) --num-thread= NUM : Create NUM recorder threads -N, --notrace= FUNC : Don't trace those FUNCs -p, --pid= PID : Connect to the PID of an interactive mcount instance --port= PORT : Use PORT for network connection (default: 8090) -P, --patch= FUNC : Apply dynamic patching for FUNCs --record : Record a new trace before running given script --report : Show a live report before replay --rt-prio= PRIO : Record with real-time ( FIFO ) priority -r, --time-range= TIME ~ TIME : Show output within the TIME (timestamp or elapsed time) : range only --run-cmd= CMDLINE : Command line that want to execute after tracing : data received -R, --retval= FUNC [@retspec] : Show function return values for FUNC , optionally with given uftrace retspec --sample-time= TIME : Show flame graph with this sampling time --signal= SIGNAL @act[,act,...] : Trigger the given actions when the given SIGNAL is received --sort-column= INDEX : Sort diff report on column INDEX (default: 2) --srcline : Enable recording source line info --symbols : Print symbol table instead of the recorded tracing info -s, --sort= KEY [, KEY ,...] : Sort reported functions by KEYs (default: 2) -S, --script= SCRIPT : Run a given SCRIPT in function entry and exit -t, --time-filter= TIME : Hide small functions run less than the TIME --task : Print task relationship in a tree form instead of the tracing info. --task-newline : Interleave a newline when task is changed --tid= TID [, TID ,...] : Only replay those tasks --time : Print time information -T, --trigger= FUNC @act[,act,...] : Trigger action on those FUNCs -U, --unpatch= FUNC : Don't apply dynamic patching for FUNCs --with-syms= DIR : Use symbol files in the DIR -W, --watch= POINT : Watch and report POINT if it's changed -Z, --size-filter= SIZE : Apply dynamic patching for functions bigger than SIZE For more detail about these command-specific options, please see the more specific manual pages listed below.","title":"SUBCOMMAND-SPECIFIC OPTIONS"},{"location":"en/uftrace/#see-also","text":"uftrace-live (1), uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1)","title":"SEE ALSO"},{"location":"ko/","text":"English uftrace uftrace \ub294 C, C++, Rust, Python \uc73c\ub85c \uc791\uc131\ub41c \ud504\ub85c\uadf8\ub7a8\uc758 \uc2e4\ud589 \ud750\ub984\uc744 \ucd94\uc801(trace)\ud558\uba70 \uae30\ub85d\ud558\uace0 \ubd84\uc11d\ud558\ub294 \ub3c4\uad6c\uc774\ub2e4. uftrace\ub294 \uac01 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc744 \ud6c4\ud0b9\ud558\uc5ec \ud0c0\uc784\uc2a4\ud0ec\ud504 \ubc0f \ud568\uc218 \uc778\uc790, \ubc18\ud658\uac12 \ub4f1\uc744 \uae30\ub85d\ud55c\ub2e4. uftrace\ub294 \uc720\uc800\uc640 \ucee4\ub110 \ud568\uc218 \ubfd0 \uc544\ub2c8\ub77c \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218 \ubc0f \uc2dc\uc2a4\ud15c \uc774\ubca4\ud2b8\ub97c \ucd94\uc801\ud558\uc5ec \ub2e8\uc77c\ud55c \uc2dc\uac04 \ud750\ub984 \uc0c1\uc5d0\uc11c \ud1b5\ud569\ub41c \uc2e4\ud589 \uacfc\uc815\uc73c\ub85c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub2e4. \ucd08\uae30\uc5d0, uftrace\ub294 \ucef4\ud30c\uc77c\ub7ec \uc9c0\uc6d0\uc744 \uc774\uc6a9\ud55c \ud568\uc218 \ucd94\uc801\ub9cc\uc744 \uc81c\uacf5\ud574 \uc8fc\uc5c8\ub2e4. \uadf8\ub7ec\ub098, \ud604\uc7ac\ub294 \uac01 \ud568\uc218 \ud504\ub864\ub85c\uadf8\uc758 \uba85\ub839\uc5b4\ub97c \ubd84\uc11d\ud558\uace0 \ub3d9\uc801\uc774\uace0 \uc120\ud0dd\uc801\uc73c\ub85c \uba85\ub839\uc5b4\ub4e4\uc744 \ud328\uce58\ud568\uc73c\ub85c\uc368, \uc7ac\ucef4\ud30c\uc77c \uc5c6\uc774 \ud568\uc218 \ud638\ucd9c\uc744 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. \uc0ac\uc6a9\uc790\ub294 Python/Juajit API\ub97c \uc774\uc6a9\ud574 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \uc885\ub8cc\uc5d0 \ub300\ud55c \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc791\uc131\ud558\uace0, \uc2e4\ud589\ud574 \ud2b9\uc815 \uc6a9\ub3c4\uc5d0 \ub9de\ub294 \ucee4\uc2a4\ud140 \ub3c4\uad6c\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4. uftrace\ub294 \ucd94\uc801 \ub370\uc774\ud130\uc758 \uc591\uc744 \uc904\uc774\uae30 \uc704\ud574 \ub2e4\uc591\ud55c \ud544\ud130 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\uba70, Chrome trace viewer\uc640 Flame graph, \ud639\uc740 graphviz\uc640 mermaid\uc640 \ud638\ud658\ub418\ub294 \ud638\ucd9c \uadf8\ub798\ud504 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc744 \ud1b5\ud55c \uc2dc\uac01\ud654\ub97c \uc81c\uacf5\ud574 \uc2e4\ud589 \ud750\ub984\uc744 \ud55c \ub208\uc73c\ub85c \ubcfc \uc218 \uc788\ub2e4. \uc774 \ub3c4\uad6c\ub294 Linux \ucee4\ub110\uc758 ftrace \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ud06c\uac8c \uc601\uac10\uc744 \ubc1b\uc558\uace0, uftrace \uc774\ub984\uc758 \ub73b\uc740 user\uc640 ftrace \ub2e8\uc5b4\ub97c \ud569\uccd0 \ub9cc\ub4e4\uc5c8\ub2e4. \uc774\ub7ec\ud55c \ud504\ub85c\uadf8\ub7a8\ub4e4\uc744 \uae30\ub85d\ud560 \uc218 \uc788\ub2e4: - \uc720\uc800 \uc2a4\ud398\uc774\uc2a4 C/C++/Rust \ud568\uc218\ub4e4 (\ub7f0\ud0c0\uc784\uc5d0\uc11c \ub3d9\uc801\uc73c\ub85c \ud328\uce58\uac00 \uac00\ub2a5\ud558\uac70\ub098, \ucf54\ub4dc\uac00 -pg , -finstrument-functions \ub85c \ucef4\ud30c\uc77c\ub418\uc5c8\uac70\ub098, \uc120\ud0dd\uc801 NOP \ud328\uce58\ub97c \uc704\ud574 -fpatchable-function-entry=N \ub85c \ucef4\ud30c\uc77c\ub41c \uacbd\uc6b0) - C/C++/Rust \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218 (PLT hooking \uc774\uc6a9) - Python \ud568\uc218 (Python\uc758 \ucd94\uc801/\ud504\ub85c\ud544 \uae30\ubc18 \uc774\uc6a9) - \ucee4\ub110 \ud568\uc218 (\ub9ac\ub205\uc2a4 \ucee4\ub110\uc758 ftrace \ud504\ub808\uc784\uc6cc\ud06c \uc774\uc6a9) - \ucee4\ub110 \ucd94\uc801 \uc774\ubca4\ud2b8 (\ub9ac\ub205\uc2a4 \ucee4\ub110\uc758 \uc774\ubca4\ud2b8 \ud2b8\ub808\uc774\uc2f1 \ud504\ub808\uc784\uc6cc\ud06c \uc774\uc6a9) - \uc791\uc5c5 \uc0dd\uc131, \uc885\ub8cc, \uc2a4\ucf00\uc904\ub9c1 \uc774\ubca4\ud2b8 (\ub9ac\ub205\uc2a4\uc758 perf_event \uc774\uc6a9) - \ubaa9\ud45c \ubc14\uc774\ub108\ub9ac \ud639\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc720\uc800 \uc2a4\ud398\uc774\uc2a4 \uc774\ubca4\ud2b8 (SystemTap SDI ABI \uc774\uc6a9) - \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 PMU \uce74\uc6b4\ud130 \uac12 (\ub9ac\ub205\uc2a4\uc758 perf_event \uc774\uc6a9) \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud574, uftrace\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \uc81c\uacf5\ud55c\ub2e4: - \uc911\ucca9 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \uc2dc\uac01\ud654\ud574 \uc900\ub2e4. - libc \ud568\uc218 \ud504\ub85c\ud1a0\ud0c0\uc785\uacfc DWARF \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud574 \ud568\uc218 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \uc2ec\ubcfc\ub85c \ud45c\uc2dc\ud574 \uc900\ub2e4. - \ucd94\uc801 \ub370\uc774\ud130 \uc591\uc744 \uc904\uc774\uae30 \uc704\ud574 \ud544\ud130 \uae30\ub2a5\uc744 \uc801\uc6a9\ud55c\ub2e4 (record \ubc0f replay \uc2dc \ubaa8\ub450 \uac00\ub2a5) - \ucd94\uc801 \ub370\uc774\ud130\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130\ub97c \ucd94\ucd9c\ud55c\ub2e4. (e.g. \ucd94\uc801\uc774 \uc218\ud589\ub41c \uc2dc\uc2a4\ud15c\uc758 \uc815\ubcf4) - \ucd94\uc801\ub41c \ud504\ub85c\uadf8\ub7a8 \ubc0f \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\uc758 \uc2ec\ubcfc \ud14c\uc774\ube14 \ubc0f \uba54\ubaa8\ub9ac \ub9f5\uc744 \uc0dd\uc131\ud55c\ub2e4. - \ucd94\uc801 \ub370\uc774\ud130\ub85c\ubd80\ud130 \ud504\ub85c\uadf8\ub7a8\uc758 \uc791\uc5c5 \uad00\uacc4 \ud2b8\ub9ac(\ubd80\ubaa8/\uc790\uc2dd \uad00\uacc4)\ub97c \uc0dd\uc131\ud55c\ub2e4. uftrace\ub294 \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589 \ubc0f \uc131\ub2a5 \ubd84\uc11d\uc744 \uc704\ud574 \ud568\uc218 \ud638\ucd9c \uae30\uac04\ubcc4 \ud544\ud130\ub9c1\uacfc \uac19\uc740 \ub9ce\uc740 \uba85\ub839 \ubc0f \ud544\ud130\ub97c \uc9c0\uc6d0\ud55c\ub2e4. \ud648\ud398\uc774\uc9c0: https://github.com/namhyung/uftrace \ud29c\ud1a0\ub9ac\uc5bc: https://github.com/namhyung/uftrace/wiki/Tutorial \ucc44\ud305\ubc29: https://gitter.im/uftrace/ko \uba54\uc77c\ub9c1 \ub9ac\uc2a4\ud2b8: uftrace@googlegroups.com \ubc1c\ud45c \uc601\uc0c1: https://youtu.be/LNav5qvyK7I \uae30\ub2a5 uftrace\ub294 \uac01 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud558\uace0 \uc18c\uc694\ub41c \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uc774\ub7f0 \uacfc\uc815\uc774 \uac00\ub2a5\ud558\uae30 \uc704\ud574\uc120, \ud504\ub85c\uadf8\ub7a8\uc774 -pg \ud639\uc740 -fpatchable-function-entry=5 (aarch64 \ud658\uacbd\uc5d0\uc120 =2 \ub3c4 \ucda9\ubd84\ud568)\ub85c \ucef4\ud30c\uc77c\ub418\uc5b4\uc57c \ud55c\ub2e4. \uc804\uccb4 \ub3d9\uc801 \ucd94\uc801 \uae30\ub2a5 ( -P. | --patch=. )\uc744 \uc774\uc6a9\ud55c\ub2e4\uba74 (\ub514\ubc84\uae45 \uc815\ubcf4\uac00 \uc788\uac70\ub098 \uc2ec\ubcfc \uc815\ubcf4\uac00 \ubcc4\ub3c4 \ud30c\uc77c\uc5d0 \uc874\uc7ac\ud558\ub294 \uacbd\uc6b0) uftrace\ub294 \ubaa8\ub4e0 \uc2e4\ud589 \ud30c\uc77c\uc744 \ucd94\uc801 \uac00\ub2a5\ud558\ub2e4. uftrace\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ucf5c\uc744 \ucd94\uc801\ud558\uae30 \uc704\ud574 \uc8fc\uc5b4\uc9c4 \uc2e4\ud589 \ud30c\uc77c\uc758 PLT\uc5d0 \ud6c5\uc744 \uac78\uace0, ( -l | --nest-libcall )\uc635\uc158\uc744 \uc774\uc6a9\ud558\uba74 \uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ud504\ub85c\uc2dc\uc800 \uc5f0\uacb0 \ud14c\uc774\ube14(PLT)\uc5d0\ub3c4 \ud6c5\uc744 \uac78\uac8c \ub41c\ub2e4. \uae4a\uc774\ub294 -D<num> \uc744 \uc774\uc6a9\ud574 \uc81c\ud55c\ud560 \uc218 \uc788\ub2e4. 1\uc77c \uacbd\uc6b0 \uccab \ub2e8\uacc4\ub9cc \ucd94\uc801\ud55c\ub2e4. ( -a | --auto-args ) \uc635\uc158\uc744 \uc774\uc6a9\ud558\uba74, uftrace\ub294 \uc790\ub3d9\uc73c\ub85c \uc54c\ub824\uc9c4 \ud568\uc218\uc5d0 \ub300\ud574 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \uae30\ub85d\ud55c\ub2e4. \ucd94\uac00\uc801\uc778 \ub514\ubc84\uadf8 \uc815\ubcf4\uac00 \uc5c6\ub2e4\uba74, \uc774\uac83\uc740 \ud45c\uc900 (C \uc5b8\uc5b4 \ud639\uc740 \uc2dc\uc2a4\ud15c) \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 API \ud568\uc218\ub97c \ud3ec\ud568\ud55c\ub2e4. \uc774\ub294 -P. \ud639\uc740 -l \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4, -la \uc635\uc158\uc740 \ub514\ubc84\uae45 \uc815\ubcf4\uac00 \uc5c6\ub294 \ud30c\uc77c\ub3c4 \ucd94\uc801\uc774 \uac00\ub2a5\ud558\uba70, \uc911\ucca9\ub41c \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ucd94\uac00\ub85c, -a \uc635\uc158\uc740 --srcline \uacfc \ub3d9\uc77c\ud558\uba70 \uc18c\uc2a4\uc758 \ub77c\uc778 \uc704\uce58 \uc815\ubcf4\ub97c \uae30\ub85d\ud55c\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub294 uftrace replay --srcline \ud639\uc740 uftrace tui \ub97c \ud1b5\ud574 \ubcfc \uc218 \uc788\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ubc14\ub85c \ud574\ub2f9 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \uc5d0\ub514\ud130\ub85c \uc5f4\uc5b4\ubcfc \uc218 \uc788\ub2e4. \ucc38\uace0 : https://uftrace.github.io/slide/#120 \ud504\ub85c\uadf8\ub7a8\uc758 \ub514\ubc84\uadf8 \uc815\ubcf4 ( gcc -g )\uac00 \uc874\uc7ac\ud55c\ub2e4\uba74, --auto-args \ub294 \ucef4\ud30c\uc77c\ub41c \uc0ac\uc6a9\uc790 \ud504\ub85c\uadf8\ub7a8 \ub0b4\ubd80\uc758 \ud568\uc218\uc5d0\uc11c\ub3c4 \uc791\ub3d9\ud55c\ub2e4. \uc778\uc790 \uc815\ubcf4\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0, ( -A udev_new@arg1/s )\uc640 \uac19\uc774 \uc778\uc790 \uc815\ubcf4\ub97c \uba85\ub839\uc904\uc774\ub098 \uc635\uc158 \ud30c\uc77c\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc788\ub2e4. \uc608: $ uftrace record -la -A udev_new@arg1/s lsusb >/dev/null $ uftrace replay -f+module \ud639\uc740 \uac04\ub2e8\ud788: $ uftrace -la -A udev_new@arg1/s -f+module lsusb # -f+module adds the module name # DURATION TID MODULE NAME FUNCTION 306.339 us [ 23561] lsusb | setlocale(LC_TYPE, \"\") = \"en_US.UTF-8\"; 1.163 us [ 23561] lsusb | getopt_long(1, 0x7fff7175f6a8, \"D:vtP:p:s:d:Vh\") = -1; [ 23561] lsusb | udev_new(\"POSIXLY_CORRECT\") { 0.406 us [ 23561] libudev.so.1.7.2 | malloc(16) = 0x55e07277a7b0; 2.620 us [ 23561] lsusb | } /* udev_new */ [ 23561] lsusb | udev_hwdb_new() { 0.427 us [ 23561] libudev.so.1.7.2 | calloc(1, 200) = 0x55e07277a7d0; 5.829 us [ 23561] libudev.so.1.7.2 | fopen64(\"/etc/systemd/hwdb/hwdb.bin\", \"re\") = 0; \ucd94\uac00\uc801\uc73c\ub85c, uftrace\ub294 \ud568\uc218 \ub2e8\uacc4\uc5d0\uc11c \uad6c\uccb4\uc801\uc778 \uc2e4\ud589 \ud750\ub984\uc744 \ud45c\ud604\ud560 \uc218 \uc788\uc73c\uba70, \uc5b4\ub5a4 \ud568\uc218\uac00 \uac00\uc7a5 \uae34 \uc218\ud589 \uc2dc\uac04\uc744 \uac00\uc9c0\ub294\uc9c0 \ud45c\ud604\ud560 \uc218 \uc788\ub2e4. \uadf8\ub9ac\uace0 \uc2e4\ud589 \ud658\uacbd\uc758 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc904 \uc218\ub3c4 \uc788\ub2e4. \ub2f9\uc2e0\uc740 \ud544\ud130\ub97c \uc774\uc6a9\ud574 \ud2b9\uc815 \ud568\uc218\ub97c \ud3ec\ud568\ud558\uac70\ub098 \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \ucd94\uac00\ub85c, \ud568\uc218 \uc778\uc790\ub098 \ubc18\ud658 \uac12\uc740 \uc800\uc7a5\ud55c \ud6c4 \ub2e4\uc74c\uc5d0 \ucd9c\ub825\ud560 \uc218 \uc788\ub2e4. uftrace\ub294 \uba40\ud2f0\ud504\ub85c\uc138\uc2a4\uc640 \uba40\ud2f0\uc2a4\ub808\ub4dc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc9c0\uc6d0\ud55c\ub2e4. root \uad8c\ud55c\uc774 \uc788\uace0 CONFIG_FUNCTION_GRAPH_TRACER=y \uc124\uc815\uc774 \ucf1c\uc9c4 \uc0c1\ud0dc\ub85c \ucee4\ub110\uc774 \ube4c\ub4dc\ub418\uc5b4 \uc788\ub2e4\uba74, \ucee4\ub110 \ud568\uc218 \ub610\ud55c \ucd94\uc801\uc774 \uac00\ub2a5\ud558\ub2e4. uftrace \ube4c\ub4dc \ubc0f \uc124\uce58 \ubc29\ubc95 \ub9ac\ub205\uc2a4 \ubc30\ud3ec\ud310\uc5d0\uc11c, misc/install-deps.sh \uc2a4\ud06c\ub9bd\ud2b8\ub294 uftrace\ub97c \ube4c\ub4dc\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc124\uce58\ud574 \uc900\ub2e4. \uc774\ub294 \uace0\uae09 \uae30\ub2a5\ub4e4\uc744 \uc704\ud55c \uac83\uc774\uba70 \ubc18\ub4dc\uc2dc \uc124\uce58\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc, \ud568\uaed8 \uc124\uce58\ud558\uae30\ub97c \uc801\uadf9 \uad8c\uc7a5\ud55c\ub2e4. $ sudo misc/install-deps.sh \uc694\uad6c\ub418\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc124\uce58\ud55c \ub4a4, \ub2e4\uc74c\uacfc \uac19\uc774 \ube4c\ub4dc \ubc0f \uc124\uce58\uac00 \uac00\ub2a5\ud558\ub2e4: $ ./configure $ make $ sudo make install \ub354 \uc790\uc138\ud55c \uc124\uce58\ubc29\ubc95\uc740, INSTALL.md \ud30c\uc77c\uc744 \ud655\uc778\ud558\uba74 \ub41c\ub2e4. uftrace \uc0ac\uc6a9 \ubc29\ubc95 uftrace \uba85\ub839\uc5b4\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uba85\ub839\uc5b4\ub97c \uc81c\uacf5\ud55c\ub2e4. record : \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\uba70 \ucd94\uc801 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. replay : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589\uc744 \ubcf4\uc5ec\uc900\ub2e4. report : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \uc218\ud589 \ud1b5\uacc4\ub97c \ubcf4\uc5ec\uc900\ub2e4. live : record \uc640 replay \ub97c \ucc28\ub840\ub85c \uc218\ud589\ud55c\ub2e4. (\uae30\ubcf8\uac12) info : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \uc2dc\uc2a4\ud15c \ubc0f \ud504\ub85c\uadf8\ub7a8 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc900\ub2e4. dump : low-level\uc758 \ucd94\uc801 \ub370\uc774\ud130\ub97c \ubcf4\uc5ec\uc900\ub2e4. recv : \ub124\ud2b8\uc6cc\ud06c\ub85c\ubd80\ud130 \ucd94\uc801\ud55c \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. graph : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. script : \uc800\uc7a5\ub41c \ucd94\uc801 \ub370\uc774\ud130\uc758 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud55c\ub2e4. tui : graph\uc640 report\ub97c \uc704\ud55c \ud14d\uc2a4\ud2b8 \uae30\ubc18 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uba85\ub839\uc5b4\uc640 \uc635\uc158 \uc744 \ubcf4\uae30 \uc704\ud574 -h \ud639\uc740 --help \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace uftrace -- function (graph) tracer for userspace usage: uftrace [COMMAND] [OPTION...] [<program>] COMMAND: record Run a program and saves the trace data replay Show program execution in the trace data report Show performance statistics in the trace data live Do record and replay in a row (default) info Show system and program info in the trace data dump Show low-level trace data recv Save the trace data from network graph Show function call graph in the trace data script Run a script for recorded trace data tui Show text user interface for graph and report Try `uftrace --help' or `man uftrace [COMMAND]' for more information. \ub9cc\uc77c \ud558\uc704 \uba85\ub839\uc5b4\ub97c \uc0dd\ub7b5\ud55c\ub2e4\uba74, \uae30\ubcf8\uc801\uc73c\ub85c record \uc640 replay \ub97c \ucc28\ub840\ub85c \uc801\uc6a9\ud55c \uac83\uacfc \ub3d9\uc77c\ud55c live \uba85\ub839\uc5b4\ub97c \uc218\ud589\ud55c\ub2e4. (\ud558\uc9c0\ub9cc \ucd94\uc801 \uc815\ubcf4\ub97c \ud30c\uc77c\ub85c \uc800\uc7a5\ud558\uc9c4 \uc54a\ub294\ub2e4) record \uba85\ub839\uc5b4\ub85c \uae30\ub85d\ud558\uae30 \uc704\ud574\uc120, \uc2e4\ud589 \ud30c\uc77c\uc774 -pg (\ud639\uc740 -finstrument-functions ) \uc635\uc158\uc744 \uc774\uc6a9\ud574 \ucef4\ud30c\uc77c\ub418\uc5b4 \ud504\ub85c\ud30c\uc77c\ub9c1 \ucf54\ub4dc (mcount \ud639\uc740 __cyg_profile_func_enter/exit\ub85c \ubd88\ub9ac\ub294)\uac00 \uc0dd\uc131\ub418\uc5b4\uc57c \ud55c\ub2e4. x86_64 \uc640 AArch64(ARM64) \uc544\ud0a4\ud14d\ucc98\uc5d0\uc11c (\uc7ac)\ucef4\ud30c\uc77c \uacfc\uc815\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \ub3d9\uc801 \ucd94\uc801 \uae30\ub2a5\uc774 \uc2e4\ud5d8\uc801\uc73c\ub85c \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. \ub610\ud55c \ucd5c\uadfc \ucef4\ud30c\uc77c\ub7ec\ub4e4 \uc911 (\uc5ec\uc804\ud788 \ud504\ub85c\uadf8\ub7a8\uc744 \uc7ac\ucef4\ud30c\uc77c\ud574\uc57c \ud558\uae34 \ud558\uc9c0\ub9cc) \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c uftrace\uc758 \ucd94\uc801 \uacfc\uc815\uc5d0\uc11c \uc0dd\uae30\ub294 \uc624\ubc84\ud5e4\ub4dc\ub97c \uc904\uc774\uae30 \uc704\ud55c \uc635\uc158\ub4e4\uc744 \uc81c\uacf5\ud558\uace0 \uc788\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 dynamic tracing \uc5d0\uc11c \ud655\uc778\ud574 \ubcfc \uc218 \uc788\ub2e4. $ uftrace tests/t-abc # DURATION TID FUNCTION 16.134 us [ 1892] | __monstartup(); 223.736 us [ 1892] | __cxa_atexit(); [ 1892] | main() { [ 1892] | a() { [ 1892] | b() { [ 1892] | c() { 2.579 us [ 1892] | getpid(); 3.739 us [ 1892] | } /* c */ 4.376 us [ 1892] | } /* b */ 4.962 us [ 1892] | } /* a */ 5.769 us [ 1892] | } /* main */ \ub354 \uc0c1\uc138\ud55c \ubd84\uc11d\uc744 \ud558\ub824\uba74, record\ub97c \ud1b5\ud574 \uc6b0\uc120 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uace0 replay, report, graph, dump, info\uc640 \uac19\uc740 \ubd84\uc11d \uba85\ub839\uc5b4\ub97c \uc5ec\ub7ec \ubc88 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. $ uftrace record tests/t-abc record \uba85\ub839\uc5b4\ub294 \ucd94\uc801 \ub370\uc774\ud130 \ud30c\uc77c\uc744 \ud3ec\ud568\ud558\ub294 uftrace.data \ub514\ub809\ud130\ub9ac\ub97c \ub9cc\ub4e0\ub2e4. \ub2e4\ub978 \ubd84\uc11d \uba85\ub839\uc5b4\ub4e4\uc740 \uadf8 \ub514\ub809\ud130\ub9ac\uac00 \ud604\uc7ac \uacbd\ub85c\uc5d0 \uc788\uc744 \uac83\uc73c\ub85c \uc608\uc0c1\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ub514\ub809\ud130\ub9ac\ub97c \uc4f0\uae30 \uc704\ud574\uc11c\ub294 -d \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4. replay \uba85\ub839\uc5b4\ub294 \uc704 \uc2e4\ud589 \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc900\ub2e4. \ubcf4\ub2e4\uc2dc\ud53c, t-abc\ub294 \uadf8\uc800 a, b, c \ud568\uc218\ub97c \ud638\ucd9c\ud558\ub294 \ub2e8\uc21c\ud55c \ud504\ub85c\uadf8\ub7a8\uc774\ub2e4. C \ud568\uc218\uc5d0\uc11c, \uc77c\ubc18\uc801\uc778 \uc2dc\uc2a4\ud15c\uc758 C \ub77c\uc774\ube0c\ub7ec\ub9ac (glibc)\uc5d0 \ub0b4\uc7a5\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218 getpid()\ub97c \ud638\ucd9c\ud55c\ub2e4. (__cxa_atexit()\ub3c4 \ub9c8\ucc2c\uac00\uc9c0 \uacbd\uc6b0\uc774\ub2e4.) \uc0ac\uc6a9\uc790\ub4e4\uc740 \ud568\uc218\ub4e4\uc758 \ub808\ucf54\ub4dc/\ucd9c\ub825\uc744 \uc81c\ud55c\ud558\uae30 \uc704\ud574 \ub2e4\uc591\ud55c \ud544\ud130\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae4a\uc774 \ud544\ud130 ( -D \uc635\uc158)\ub294 \uc8fc\uc5b4\uc9c4 \ud638\ucd9c \uae4a\uc774\ubcf4\ub2e4 \ub354 \uae4a\uac8c \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\uc744 \uc0dd\ub7b5\ud558\ub294 \ud544\ud130\uc774\ub2e4. \uc2dc\uac04 \ud544\ud130 ( -t \uc635\uc158)\ub294 \uc8fc\uc5b4\uc9c4 \uc2dc\uac04\ubcf4\ub2e4 \ub354 \uc791\uc740 \uc2dc\uac04\ub3d9\uc548 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\uc744 \uc0dd\ub7b5\ud558\ub294 \ud544\ud130\uc774\ub2e4. \ud568\uc218 \ud544\ud130 ( -F \uc640 -N \uc635\uc158)\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \ud558\uc704 \ud568\uc218\ub4e4\uc744 \ubcf4\uc5ec\uc8fc\uace0/\uc0dd\ub7b5\ud558\ub294 \ud544\ud130\uc774\ub2e4. -k \uc635\uc158\uc73c\ub85c \ucee4\ub110 \ud568\uc218\ub4e4 \ub610\ud55c \ucd94\uc801\uc774 \uac00\ub2a5\ud558\ub2e4 (\ub8e8\ud2b8 \uad8c\ud55c \ud544\uc694). \ubcf4\ud1b5 'hello world' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ucd9c\ub825 \uacb0\uacfc\ub294 \uc544\ub798\uc640 \uac19\ub2e4. (\uc2dc\uc2a4\ud15c \ucf5c\uc744 \uc9c1\uc811 \ud638\ucd9c\ud558\uae30 \uc704\ud574, \uc77c\ubc18\uc801\uc778 printf()\uac00 \uc544\ub2cc stderr\uc640 fprintf()\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \ud55c \uac83\uc5d0 \uc720\uc758\ud558\ub77c): $ sudo uftrace -k tests/t-hello Hello world # DURATION TID FUNCTION 1.365 us [21901] | __monstartup(); 0.951 us [21901] | __cxa_atexit(); [21901] | main() { [21901] | fprintf() { 3.569 us [21901] | __do_page_fault(); 10.127 us [21901] | sys_write(); 20.103 us [21901] | } /* fprintf */ 21.286 us [21901] | } /* main */ fprintf()\ud638\ucd9c \ub0b4\ubd80\uc5d0\uc11c page fault \ud578\ub4e4\ub7ec\uc640 write syscall \ud578\ub4e4\ub7ec\uac00 \ud638\ucd9c\ub418\uc5c8\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \uac01\uac01 -A \uc640 -R \uc635\uc158\uc73c\ub85c \uae30\ub85d\ud558\uace0 \ubcf4\uc5ec\uc904 \uc218 \uc788\ub2e4. \uc774\ud558 \uc608\uc81c\uc5d0\uc11c\ub294 'fib'(\ud53c\ubcf4\ub098\uce58 \uc22b\uc790) \ud568\uc218\uc758 \uccab \ubc88\uc9f8 \uc778\uc790\uc640 \ub9ac\ud134\uac12\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace record -A fib@arg1 -R fib@retval tests/t-fibonacci 5 $ uftrace replay # DURATION TID FUNCTION 2.853 us [22080] | __monstartup(); 2.194 us [22080] | __cxa_atexit(); [22080] | main() { 2.706 us [22080] | atoi(); [22080] | fib(5) { [22080] | fib(4) { [22080] | fib(3) { 7.473 us [22080] | fib(2) = 1; 0.419 us [22080] | fib(1) = 1; 11.452 us [22080] | } = 2; /* fib */ 0.460 us [22080] | fib(2) = 1; 13.823 us [22080] | } = 3; /* fib */ [22080] | fib(3) { 0.424 us [22080] | fib(2) = 1; 0.437 us [22080] | fib(1) = 1; 2.860 us [22080] | } = 2; /* fib */ 19.600 us [22080] | } = 5; /* fib */ 25.024 us [22080] | } /* main */ report \uba85\ub839\uc5b4\ub294 \uc5b4\ub5a4 \ud568\uc218\uac00 \uadf8 \uc790\uc2dd \ud568\uc218\ub97c \ud3ec\ud568\ud574\uc11c \uac00\uc7a5 \uc624\ub7ab\ub3d9\uc548 \uc2e4\ud589\ub418\uc5c8\ub294\uc9c0(\ucd1d\uc2dc\uac04)\ub97c \uc54c\ub824\uc900\ub2e4. $ uftrace report Total time Self time Calls Function ========== ========== ========== ==================================== 25.024 us 2.718 us 1 main 19.600 us 19.600 us 9 fib 2.853 us 2.853 us 1 __monstartup 2.706 us 2.706 us 1 atoi 2.194 us 2.194 us 1 __cxa_atexit graph \uba85\ub839\uc5b4\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc704\uc758 \uc608\uc81c\uc5d0\uc11c, main \ud568\uc218\uc758 \ud638\ucd9c \uadf8\ub798\ud504\ub294 \uc544\ub798\uc640 \uac19\ub2e4: $ uftrace graph main # Function Call Graph for 'main' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 1, time 25.024 us [0] main (0x40066b) ========== FUNCTION CALL GRAPH ========== 25.024 us : (1) main 2.706 us : +-(1) atoi : | 19.600 us : +-(1) fib 16.683 us : (2) fib 12.773 us : (4) fib 7.892 us : (2) fib dump \uba85\ub839\uc740 \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \uadf8\ub300\ub85c(raw) \ucd9c\ub825\ud558\uc5ec \ubcf4\uc5ec\uc900\ub2e4. uftrace dump --chrome \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uba74 \ud06c\ub86c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uacb0\uacfc\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc774\ud558\ub294 \uc791\uc740 C++ template metaprogram\uc744 \ucef4\ud30c\uc77c\ud558\ub294 clang (LLVM)\uc758 \uc2e4\ud589 \uacfc\uc815\uc744 \ubcf4\uc5ec\uc900\ub2e4. flame-graph \ud615\uc2dd\uc758 \uacb0\uacfc \ub610\ud55c \uc9c0\uc6d0\ud55c\ub2e4. \ud574\ub2f9 \ub370\uc774\ud130\ub294 uftrace dump --flame-graph \ub85c \uc2e4\ud589\ub418\uc5b4 flamegraph.pl \ub85c \ub118\uaca8\uc9c8 \uc218 \uc788\ub2e4. \uc774\ud558\ub294 \uac04\ub2e8\ud55c C \ud504\ub85c\uadf8\ub7a8\uc744 gcc\ub85c \ucef4\ud30c\uc77c\ud55c \uacb0\uacfc\uc5d0 \ub300\ud55c flame graph\uc774\ub2e4. info \uba85\ub839\uc5b4\ub294 \uae30\ub85d\uc774 \ub418\uc5c8\uc744 \ub54c\uc758 \uc2dc\uc2a4\ud15c\uacfc \ud504\ub85c\uadf8\ub7a8 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc900\ub2e4. $ uftrace info # system information # ================== # program version : uftrace v0.8.1 # recorded on : Tue May 24 11:21:59 2016 # cmdline : uftrace record tests/t-abc # cpu info : Intel(R) Core(TM) i7-3930K CPU @ 3.20GHz # number of cpus : 12 / 12 (online / possible) # memory info : 20.1 / 23.5 GB (free / total) # system load : 0.00 / 0.06 / 0.06 (1 / 5 / 15 min) # kernel version : Linux 4.5.4-1-ARCH # hostname : sejong # distro : \"Arch Linux\" # # process information # =================== # number of tasks : 1 # task list : 5098 # exe image : /home/namhyung/project/uftrace/tests/t-abc # build id : a3c50d25f7dd98dab68e94ef0f215edb06e98434 # exit status : exited with code: 0 # elapsed time : 0.003219479 sec # cpu time : 0.000 / 0.003 sec (sys / user) # context switch : 1 / 1 (voluntary / involuntary) # max rss : 3072 KB # page fault : 0 / 172 (major / minor) # disk iops : 0 / 24 (read / write) script \uba85\ub839\uc5b4\ub294 \uae30\ub85d\ub41c \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9\uc790 \uc815\uc758 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud55c\ub2e4. \ud604\uc7ac\uae4c\uc9c0 \uc9c0\uc6d0\ub418\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub294 Python 3, Python 2.7 \uacfc Lua 5.1 \uc774\ub2e4. tui \uba85\ub839\uc5b4\ub294 ncurses \ub97c \uc774\uc6a9\ud55c \ud14d\uc2a4\ud2b8 \uae30\ubc18 \ub300\ud654\ud615 \uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc704\ud55c \uba85\ub839\uc5b4\uc774\ub2e4. \ud604\uc7ac graph , report , info \uba85\ub839\uc5b4\uc758 \uae30\ubcf8\uc801\uc778 \uae30\ub2a5\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc81c\uc57d\uc0ac\ud56d \ub9ac\ub205\uc2a4\uc640 \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 C/C++/Rust/Python \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud574\uc11c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. \uc774\ubbf8 \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uc758 \ucd94\uc801\uc740 \uc544\uc9c1 \ubd88\uac00\ub2a5 \ud558\ub2e4. \uc804\uccb4 \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ud1b5\ud569 \ubd84\uc11d\uc740 \ubd88\uac00\ub2a5 \ud558\ub2e4. \ud604\uc7ac\ub294 x86_64, AArch64 \ub9cc \uc9c0\uc6d0\ud55c\ub2e4. x86 (32-bit), ARM (v6, v7) \ud658\uacbd\uc5d0\uc11c\ub3c4 \uc791\ub3d9\ud558\uc9c0\ub9cc, \ub3d9\uc801 \ucd94\uc801\uc774\ub098 \uc790\ub3d9 \uc778\uc790 \uac00\uc838\uc624\uae30\uc640 \uac19\uc740 \uc77c\ubd80 \uae30\ub2a5\uc740 \uc798 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\ub2e4. \ub77c\uc774\uc120\uc2a4 uftrace \ub294 GPL v2. \ub77c\uc774\uc120\uc2a4 \ud558\uc5d0 \ubc30\ud3ec\ub418\uba70 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 COPYING \ud30c\uc77c\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"Index"},{"location":"ko/#uftrace","text":"uftrace \ub294 C, C++, Rust, Python \uc73c\ub85c \uc791\uc131\ub41c \ud504\ub85c\uadf8\ub7a8\uc758 \uc2e4\ud589 \ud750\ub984\uc744 \ucd94\uc801(trace)\ud558\uba70 \uae30\ub85d\ud558\uace0 \ubd84\uc11d\ud558\ub294 \ub3c4\uad6c\uc774\ub2e4. uftrace\ub294 \uac01 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc744 \ud6c4\ud0b9\ud558\uc5ec \ud0c0\uc784\uc2a4\ud0ec\ud504 \ubc0f \ud568\uc218 \uc778\uc790, \ubc18\ud658\uac12 \ub4f1\uc744 \uae30\ub85d\ud55c\ub2e4. uftrace\ub294 \uc720\uc800\uc640 \ucee4\ub110 \ud568\uc218 \ubfd0 \uc544\ub2c8\ub77c \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218 \ubc0f \uc2dc\uc2a4\ud15c \uc774\ubca4\ud2b8\ub97c \ucd94\uc801\ud558\uc5ec \ub2e8\uc77c\ud55c \uc2dc\uac04 \ud750\ub984 \uc0c1\uc5d0\uc11c \ud1b5\ud569\ub41c \uc2e4\ud589 \uacfc\uc815\uc73c\ub85c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub2e4. \ucd08\uae30\uc5d0, uftrace\ub294 \ucef4\ud30c\uc77c\ub7ec \uc9c0\uc6d0\uc744 \uc774\uc6a9\ud55c \ud568\uc218 \ucd94\uc801\ub9cc\uc744 \uc81c\uacf5\ud574 \uc8fc\uc5c8\ub2e4. \uadf8\ub7ec\ub098, \ud604\uc7ac\ub294 \uac01 \ud568\uc218 \ud504\ub864\ub85c\uadf8\uc758 \uba85\ub839\uc5b4\ub97c \ubd84\uc11d\ud558\uace0 \ub3d9\uc801\uc774\uace0 \uc120\ud0dd\uc801\uc73c\ub85c \uba85\ub839\uc5b4\ub4e4\uc744 \ud328\uce58\ud568\uc73c\ub85c\uc368, \uc7ac\ucef4\ud30c\uc77c \uc5c6\uc774 \ud568\uc218 \ud638\ucd9c\uc744 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. \uc0ac\uc6a9\uc790\ub294 Python/Juajit API\ub97c \uc774\uc6a9\ud574 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \uc885\ub8cc\uc5d0 \ub300\ud55c \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc791\uc131\ud558\uace0, \uc2e4\ud589\ud574 \ud2b9\uc815 \uc6a9\ub3c4\uc5d0 \ub9de\ub294 \ucee4\uc2a4\ud140 \ub3c4\uad6c\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4. uftrace\ub294 \ucd94\uc801 \ub370\uc774\ud130\uc758 \uc591\uc744 \uc904\uc774\uae30 \uc704\ud574 \ub2e4\uc591\ud55c \ud544\ud130 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\uba70, Chrome trace viewer\uc640 Flame graph, \ud639\uc740 graphviz\uc640 mermaid\uc640 \ud638\ud658\ub418\ub294 \ud638\ucd9c \uadf8\ub798\ud504 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc744 \ud1b5\ud55c \uc2dc\uac01\ud654\ub97c \uc81c\uacf5\ud574 \uc2e4\ud589 \ud750\ub984\uc744 \ud55c \ub208\uc73c\ub85c \ubcfc \uc218 \uc788\ub2e4. \uc774 \ub3c4\uad6c\ub294 Linux \ucee4\ub110\uc758 ftrace \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ud06c\uac8c \uc601\uac10\uc744 \ubc1b\uc558\uace0, uftrace \uc774\ub984\uc758 \ub73b\uc740 user\uc640 ftrace \ub2e8\uc5b4\ub97c \ud569\uccd0 \ub9cc\ub4e4\uc5c8\ub2e4. \uc774\ub7ec\ud55c \ud504\ub85c\uadf8\ub7a8\ub4e4\uc744 \uae30\ub85d\ud560 \uc218 \uc788\ub2e4: - \uc720\uc800 \uc2a4\ud398\uc774\uc2a4 C/C++/Rust \ud568\uc218\ub4e4 (\ub7f0\ud0c0\uc784\uc5d0\uc11c \ub3d9\uc801\uc73c\ub85c \ud328\uce58\uac00 \uac00\ub2a5\ud558\uac70\ub098, \ucf54\ub4dc\uac00 -pg , -finstrument-functions \ub85c \ucef4\ud30c\uc77c\ub418\uc5c8\uac70\ub098, \uc120\ud0dd\uc801 NOP \ud328\uce58\ub97c \uc704\ud574 -fpatchable-function-entry=N \ub85c \ucef4\ud30c\uc77c\ub41c \uacbd\uc6b0) - C/C++/Rust \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218 (PLT hooking \uc774\uc6a9) - Python \ud568\uc218 (Python\uc758 \ucd94\uc801/\ud504\ub85c\ud544 \uae30\ubc18 \uc774\uc6a9) - \ucee4\ub110 \ud568\uc218 (\ub9ac\ub205\uc2a4 \ucee4\ub110\uc758 ftrace \ud504\ub808\uc784\uc6cc\ud06c \uc774\uc6a9) - \ucee4\ub110 \ucd94\uc801 \uc774\ubca4\ud2b8 (\ub9ac\ub205\uc2a4 \ucee4\ub110\uc758 \uc774\ubca4\ud2b8 \ud2b8\ub808\uc774\uc2f1 \ud504\ub808\uc784\uc6cc\ud06c \uc774\uc6a9) - \uc791\uc5c5 \uc0dd\uc131, \uc885\ub8cc, \uc2a4\ucf00\uc904\ub9c1 \uc774\ubca4\ud2b8 (\ub9ac\ub205\uc2a4\uc758 perf_event \uc774\uc6a9) - \ubaa9\ud45c \ubc14\uc774\ub108\ub9ac \ud639\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc720\uc800 \uc2a4\ud398\uc774\uc2a4 \uc774\ubca4\ud2b8 (SystemTap SDI ABI \uc774\uc6a9) - \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 PMU \uce74\uc6b4\ud130 \uac12 (\ub9ac\ub205\uc2a4\uc758 perf_event \uc774\uc6a9) \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud574, uftrace\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \uc81c\uacf5\ud55c\ub2e4: - \uc911\ucca9 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \uc2dc\uac01\ud654\ud574 \uc900\ub2e4. - libc \ud568\uc218 \ud504\ub85c\ud1a0\ud0c0\uc785\uacfc DWARF \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud574 \ud568\uc218 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \uc2ec\ubcfc\ub85c \ud45c\uc2dc\ud574 \uc900\ub2e4. - \ucd94\uc801 \ub370\uc774\ud130 \uc591\uc744 \uc904\uc774\uae30 \uc704\ud574 \ud544\ud130 \uae30\ub2a5\uc744 \uc801\uc6a9\ud55c\ub2e4 (record \ubc0f replay \uc2dc \ubaa8\ub450 \uac00\ub2a5) - \ucd94\uc801 \ub370\uc774\ud130\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130\ub97c \ucd94\ucd9c\ud55c\ub2e4. (e.g. \ucd94\uc801\uc774 \uc218\ud589\ub41c \uc2dc\uc2a4\ud15c\uc758 \uc815\ubcf4) - \ucd94\uc801\ub41c \ud504\ub85c\uadf8\ub7a8 \ubc0f \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\uc758 \uc2ec\ubcfc \ud14c\uc774\ube14 \ubc0f \uba54\ubaa8\ub9ac \ub9f5\uc744 \uc0dd\uc131\ud55c\ub2e4. - \ucd94\uc801 \ub370\uc774\ud130\ub85c\ubd80\ud130 \ud504\ub85c\uadf8\ub7a8\uc758 \uc791\uc5c5 \uad00\uacc4 \ud2b8\ub9ac(\ubd80\ubaa8/\uc790\uc2dd \uad00\uacc4)\ub97c \uc0dd\uc131\ud55c\ub2e4. uftrace\ub294 \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589 \ubc0f \uc131\ub2a5 \ubd84\uc11d\uc744 \uc704\ud574 \ud568\uc218 \ud638\ucd9c \uae30\uac04\ubcc4 \ud544\ud130\ub9c1\uacfc \uac19\uc740 \ub9ce\uc740 \uba85\ub839 \ubc0f \ud544\ud130\ub97c \uc9c0\uc6d0\ud55c\ub2e4. \ud648\ud398\uc774\uc9c0: https://github.com/namhyung/uftrace \ud29c\ud1a0\ub9ac\uc5bc: https://github.com/namhyung/uftrace/wiki/Tutorial \ucc44\ud305\ubc29: https://gitter.im/uftrace/ko \uba54\uc77c\ub9c1 \ub9ac\uc2a4\ud2b8: uftrace@googlegroups.com \ubc1c\ud45c \uc601\uc0c1: https://youtu.be/LNav5qvyK7I","title":"uftrace"},{"location":"ko/#_1","text":"uftrace\ub294 \uac01 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud558\uace0 \uc18c\uc694\ub41c \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c, \uc774\ub7f0 \uacfc\uc815\uc774 \uac00\ub2a5\ud558\uae30 \uc704\ud574\uc120, \ud504\ub85c\uadf8\ub7a8\uc774 -pg \ud639\uc740 -fpatchable-function-entry=5 (aarch64 \ud658\uacbd\uc5d0\uc120 =2 \ub3c4 \ucda9\ubd84\ud568)\ub85c \ucef4\ud30c\uc77c\ub418\uc5b4\uc57c \ud55c\ub2e4. \uc804\uccb4 \ub3d9\uc801 \ucd94\uc801 \uae30\ub2a5 ( -P. | --patch=. )\uc744 \uc774\uc6a9\ud55c\ub2e4\uba74 (\ub514\ubc84\uae45 \uc815\ubcf4\uac00 \uc788\uac70\ub098 \uc2ec\ubcfc \uc815\ubcf4\uac00 \ubcc4\ub3c4 \ud30c\uc77c\uc5d0 \uc874\uc7ac\ud558\ub294 \uacbd\uc6b0) uftrace\ub294 \ubaa8\ub4e0 \uc2e4\ud589 \ud30c\uc77c\uc744 \ucd94\uc801 \uac00\ub2a5\ud558\ub2e4. uftrace\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ucf5c\uc744 \ucd94\uc801\ud558\uae30 \uc704\ud574 \uc8fc\uc5b4\uc9c4 \uc2e4\ud589 \ud30c\uc77c\uc758 PLT\uc5d0 \ud6c5\uc744 \uac78\uace0, ( -l | --nest-libcall )\uc635\uc158\uc744 \uc774\uc6a9\ud558\uba74 \uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ud504\ub85c\uc2dc\uc800 \uc5f0\uacb0 \ud14c\uc774\ube14(PLT)\uc5d0\ub3c4 \ud6c5\uc744 \uac78\uac8c \ub41c\ub2e4. \uae4a\uc774\ub294 -D<num> \uc744 \uc774\uc6a9\ud574 \uc81c\ud55c\ud560 \uc218 \uc788\ub2e4. 1\uc77c \uacbd\uc6b0 \uccab \ub2e8\uacc4\ub9cc \ucd94\uc801\ud55c\ub2e4. ( -a | --auto-args ) \uc635\uc158\uc744 \uc774\uc6a9\ud558\uba74, uftrace\ub294 \uc790\ub3d9\uc73c\ub85c \uc54c\ub824\uc9c4 \ud568\uc218\uc5d0 \ub300\ud574 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \uae30\ub85d\ud55c\ub2e4. \ucd94\uac00\uc801\uc778 \ub514\ubc84\uadf8 \uc815\ubcf4\uac00 \uc5c6\ub2e4\uba74, \uc774\uac83\uc740 \ud45c\uc900 (C \uc5b8\uc5b4 \ud639\uc740 \uc2dc\uc2a4\ud15c) \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 API \ud568\uc218\ub97c \ud3ec\ud568\ud55c\ub2e4. \uc774\ub294 -P. \ud639\uc740 -l \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4, -la \uc635\uc158\uc740 \ub514\ubc84\uae45 \uc815\ubcf4\uac00 \uc5c6\ub294 \ud30c\uc77c\ub3c4 \ucd94\uc801\uc774 \uac00\ub2a5\ud558\uba70, \uc911\ucca9\ub41c \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ucd94\uac00\ub85c, -a \uc635\uc158\uc740 --srcline \uacfc \ub3d9\uc77c\ud558\uba70 \uc18c\uc2a4\uc758 \ub77c\uc778 \uc704\uce58 \uc815\ubcf4\ub97c \uae30\ub85d\ud55c\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub294 uftrace replay --srcline \ud639\uc740 uftrace tui \ub97c \ud1b5\ud574 \ubcfc \uc218 \uc788\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ubc14\ub85c \ud574\ub2f9 \uc18c\uc2a4 \ucf54\ub4dc\ub97c \uc5d0\ub514\ud130\ub85c \uc5f4\uc5b4\ubcfc \uc218 \uc788\ub2e4. \ucc38\uace0 : https://uftrace.github.io/slide/#120 \ud504\ub85c\uadf8\ub7a8\uc758 \ub514\ubc84\uadf8 \uc815\ubcf4 ( gcc -g )\uac00 \uc874\uc7ac\ud55c\ub2e4\uba74, --auto-args \ub294 \ucef4\ud30c\uc77c\ub41c \uc0ac\uc6a9\uc790 \ud504\ub85c\uadf8\ub7a8 \ub0b4\ubd80\uc758 \ud568\uc218\uc5d0\uc11c\ub3c4 \uc791\ub3d9\ud55c\ub2e4. \uc778\uc790 \uc815\ubcf4\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0, ( -A udev_new@arg1/s )\uc640 \uac19\uc774 \uc778\uc790 \uc815\ubcf4\ub97c \uba85\ub839\uc904\uc774\ub098 \uc635\uc158 \ud30c\uc77c\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc788\ub2e4. \uc608: $ uftrace record -la -A udev_new@arg1/s lsusb >/dev/null $ uftrace replay -f+module \ud639\uc740 \uac04\ub2e8\ud788: $ uftrace -la -A udev_new@arg1/s -f+module lsusb # -f+module adds the module name # DURATION TID MODULE NAME FUNCTION 306.339 us [ 23561] lsusb | setlocale(LC_TYPE, \"\") = \"en_US.UTF-8\"; 1.163 us [ 23561] lsusb | getopt_long(1, 0x7fff7175f6a8, \"D:vtP:p:s:d:Vh\") = -1; [ 23561] lsusb | udev_new(\"POSIXLY_CORRECT\") { 0.406 us [ 23561] libudev.so.1.7.2 | malloc(16) = 0x55e07277a7b0; 2.620 us [ 23561] lsusb | } /* udev_new */ [ 23561] lsusb | udev_hwdb_new() { 0.427 us [ 23561] libudev.so.1.7.2 | calloc(1, 200) = 0x55e07277a7d0; 5.829 us [ 23561] libudev.so.1.7.2 | fopen64(\"/etc/systemd/hwdb/hwdb.bin\", \"re\") = 0; \ucd94\uac00\uc801\uc73c\ub85c, uftrace\ub294 \ud568\uc218 \ub2e8\uacc4\uc5d0\uc11c \uad6c\uccb4\uc801\uc778 \uc2e4\ud589 \ud750\ub984\uc744 \ud45c\ud604\ud560 \uc218 \uc788\uc73c\uba70, \uc5b4\ub5a4 \ud568\uc218\uac00 \uac00\uc7a5 \uae34 \uc218\ud589 \uc2dc\uac04\uc744 \uac00\uc9c0\ub294\uc9c0 \ud45c\ud604\ud560 \uc218 \uc788\ub2e4. \uadf8\ub9ac\uace0 \uc2e4\ud589 \ud658\uacbd\uc758 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc904 \uc218\ub3c4 \uc788\ub2e4. \ub2f9\uc2e0\uc740 \ud544\ud130\ub97c \uc774\uc6a9\ud574 \ud2b9\uc815 \ud568\uc218\ub97c \ud3ec\ud568\ud558\uac70\ub098 \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \ucd94\uac00\ub85c, \ud568\uc218 \uc778\uc790\ub098 \ubc18\ud658 \uac12\uc740 \uc800\uc7a5\ud55c \ud6c4 \ub2e4\uc74c\uc5d0 \ucd9c\ub825\ud560 \uc218 \uc788\ub2e4. uftrace\ub294 \uba40\ud2f0\ud504\ub85c\uc138\uc2a4\uc640 \uba40\ud2f0\uc2a4\ub808\ub4dc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc9c0\uc6d0\ud55c\ub2e4. root \uad8c\ud55c\uc774 \uc788\uace0 CONFIG_FUNCTION_GRAPH_TRACER=y \uc124\uc815\uc774 \ucf1c\uc9c4 \uc0c1\ud0dc\ub85c \ucee4\ub110\uc774 \ube4c\ub4dc\ub418\uc5b4 \uc788\ub2e4\uba74, \ucee4\ub110 \ud568\uc218 \ub610\ud55c \ucd94\uc801\uc774 \uac00\ub2a5\ud558\ub2e4.","title":"\uae30\ub2a5"},{"location":"ko/#uftrace_1","text":"\ub9ac\ub205\uc2a4 \ubc30\ud3ec\ud310\uc5d0\uc11c, misc/install-deps.sh \uc2a4\ud06c\ub9bd\ud2b8\ub294 uftrace\ub97c \ube4c\ub4dc\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc124\uce58\ud574 \uc900\ub2e4. \uc774\ub294 \uace0\uae09 \uae30\ub2a5\ub4e4\uc744 \uc704\ud55c \uac83\uc774\uba70 \ubc18\ub4dc\uc2dc \uc124\uce58\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc, \ud568\uaed8 \uc124\uce58\ud558\uae30\ub97c \uc801\uadf9 \uad8c\uc7a5\ud55c\ub2e4. $ sudo misc/install-deps.sh \uc694\uad6c\ub418\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc124\uce58\ud55c \ub4a4, \ub2e4\uc74c\uacfc \uac19\uc774 \ube4c\ub4dc \ubc0f \uc124\uce58\uac00 \uac00\ub2a5\ud558\ub2e4: $ ./configure $ make $ sudo make install \ub354 \uc790\uc138\ud55c \uc124\uce58\ubc29\ubc95\uc740, INSTALL.md \ud30c\uc77c\uc744 \ud655\uc778\ud558\uba74 \ub41c\ub2e4.","title":"uftrace \ube4c\ub4dc \ubc0f \uc124\uce58 \ubc29\ubc95"},{"location":"ko/#uftrace_2","text":"uftrace \uba85\ub839\uc5b4\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uba85\ub839\uc5b4\ub97c \uc81c\uacf5\ud55c\ub2e4. record : \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\uba70 \ucd94\uc801 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. replay : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589\uc744 \ubcf4\uc5ec\uc900\ub2e4. report : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \uc218\ud589 \ud1b5\uacc4\ub97c \ubcf4\uc5ec\uc900\ub2e4. live : record \uc640 replay \ub97c \ucc28\ub840\ub85c \uc218\ud589\ud55c\ub2e4. (\uae30\ubcf8\uac12) info : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \uc2dc\uc2a4\ud15c \ubc0f \ud504\ub85c\uadf8\ub7a8 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc900\ub2e4. dump : low-level\uc758 \ucd94\uc801 \ub370\uc774\ud130\ub97c \ubcf4\uc5ec\uc900\ub2e4. recv : \ub124\ud2b8\uc6cc\ud06c\ub85c\ubd80\ud130 \ucd94\uc801\ud55c \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. graph : \ucd94\uc801 \ub370\uc774\ud130 \ub0b4\uc758 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. script : \uc800\uc7a5\ub41c \ucd94\uc801 \ub370\uc774\ud130\uc758 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud55c\ub2e4. tui : graph\uc640 report\ub97c \uc704\ud55c \ud14d\uc2a4\ud2b8 \uae30\ubc18 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uba85\ub839\uc5b4\uc640 \uc635\uc158 \uc744 \ubcf4\uae30 \uc704\ud574 -h \ud639\uc740 --help \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace uftrace -- function (graph) tracer for userspace usage: uftrace [COMMAND] [OPTION...] [<program>] COMMAND: record Run a program and saves the trace data replay Show program execution in the trace data report Show performance statistics in the trace data live Do record and replay in a row (default) info Show system and program info in the trace data dump Show low-level trace data recv Save the trace data from network graph Show function call graph in the trace data script Run a script for recorded trace data tui Show text user interface for graph and report Try `uftrace --help' or `man uftrace [COMMAND]' for more information. \ub9cc\uc77c \ud558\uc704 \uba85\ub839\uc5b4\ub97c \uc0dd\ub7b5\ud55c\ub2e4\uba74, \uae30\ubcf8\uc801\uc73c\ub85c record \uc640 replay \ub97c \ucc28\ub840\ub85c \uc801\uc6a9\ud55c \uac83\uacfc \ub3d9\uc77c\ud55c live \uba85\ub839\uc5b4\ub97c \uc218\ud589\ud55c\ub2e4. (\ud558\uc9c0\ub9cc \ucd94\uc801 \uc815\ubcf4\ub97c \ud30c\uc77c\ub85c \uc800\uc7a5\ud558\uc9c4 \uc54a\ub294\ub2e4) record \uba85\ub839\uc5b4\ub85c \uae30\ub85d\ud558\uae30 \uc704\ud574\uc120, \uc2e4\ud589 \ud30c\uc77c\uc774 -pg (\ud639\uc740 -finstrument-functions ) \uc635\uc158\uc744 \uc774\uc6a9\ud574 \ucef4\ud30c\uc77c\ub418\uc5b4 \ud504\ub85c\ud30c\uc77c\ub9c1 \ucf54\ub4dc (mcount \ud639\uc740 __cyg_profile_func_enter/exit\ub85c \ubd88\ub9ac\ub294)\uac00 \uc0dd\uc131\ub418\uc5b4\uc57c \ud55c\ub2e4. x86_64 \uc640 AArch64(ARM64) \uc544\ud0a4\ud14d\ucc98\uc5d0\uc11c (\uc7ac)\ucef4\ud30c\uc77c \uacfc\uc815\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \ub3d9\uc801 \ucd94\uc801 \uae30\ub2a5\uc774 \uc2e4\ud5d8\uc801\uc73c\ub85c \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. \ub610\ud55c \ucd5c\uadfc \ucef4\ud30c\uc77c\ub7ec\ub4e4 \uc911 (\uc5ec\uc804\ud788 \ud504\ub85c\uadf8\ub7a8\uc744 \uc7ac\ucef4\ud30c\uc77c\ud574\uc57c \ud558\uae34 \ud558\uc9c0\ub9cc) \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c uftrace\uc758 \ucd94\uc801 \uacfc\uc815\uc5d0\uc11c \uc0dd\uae30\ub294 \uc624\ubc84\ud5e4\ub4dc\ub97c \uc904\uc774\uae30 \uc704\ud55c \uc635\uc158\ub4e4\uc744 \uc81c\uacf5\ud558\uace0 \uc788\ub2e4. \ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 dynamic tracing \uc5d0\uc11c \ud655\uc778\ud574 \ubcfc \uc218 \uc788\ub2e4. $ uftrace tests/t-abc # DURATION TID FUNCTION 16.134 us [ 1892] | __monstartup(); 223.736 us [ 1892] | __cxa_atexit(); [ 1892] | main() { [ 1892] | a() { [ 1892] | b() { [ 1892] | c() { 2.579 us [ 1892] | getpid(); 3.739 us [ 1892] | } /* c */ 4.376 us [ 1892] | } /* b */ 4.962 us [ 1892] | } /* a */ 5.769 us [ 1892] | } /* main */ \ub354 \uc0c1\uc138\ud55c \ubd84\uc11d\uc744 \ud558\ub824\uba74, record\ub97c \ud1b5\ud574 \uc6b0\uc120 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uace0 replay, report, graph, dump, info\uc640 \uac19\uc740 \ubd84\uc11d \uba85\ub839\uc5b4\ub97c \uc5ec\ub7ec \ubc88 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. $ uftrace record tests/t-abc record \uba85\ub839\uc5b4\ub294 \ucd94\uc801 \ub370\uc774\ud130 \ud30c\uc77c\uc744 \ud3ec\ud568\ud558\ub294 uftrace.data \ub514\ub809\ud130\ub9ac\ub97c \ub9cc\ub4e0\ub2e4. \ub2e4\ub978 \ubd84\uc11d \uba85\ub839\uc5b4\ub4e4\uc740 \uadf8 \ub514\ub809\ud130\ub9ac\uac00 \ud604\uc7ac \uacbd\ub85c\uc5d0 \uc788\uc744 \uac83\uc73c\ub85c \uc608\uc0c1\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ub514\ub809\ud130\ub9ac\ub97c \uc4f0\uae30 \uc704\ud574\uc11c\ub294 -d \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4. replay \uba85\ub839\uc5b4\ub294 \uc704 \uc2e4\ud589 \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc900\ub2e4. \ubcf4\ub2e4\uc2dc\ud53c, t-abc\ub294 \uadf8\uc800 a, b, c \ud568\uc218\ub97c \ud638\ucd9c\ud558\ub294 \ub2e8\uc21c\ud55c \ud504\ub85c\uadf8\ub7a8\uc774\ub2e4. C \ud568\uc218\uc5d0\uc11c, \uc77c\ubc18\uc801\uc778 \uc2dc\uc2a4\ud15c\uc758 C \ub77c\uc774\ube0c\ub7ec\ub9ac (glibc)\uc5d0 \ub0b4\uc7a5\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218 getpid()\ub97c \ud638\ucd9c\ud55c\ub2e4. (__cxa_atexit()\ub3c4 \ub9c8\ucc2c\uac00\uc9c0 \uacbd\uc6b0\uc774\ub2e4.) \uc0ac\uc6a9\uc790\ub4e4\uc740 \ud568\uc218\ub4e4\uc758 \ub808\ucf54\ub4dc/\ucd9c\ub825\uc744 \uc81c\ud55c\ud558\uae30 \uc704\ud574 \ub2e4\uc591\ud55c \ud544\ud130\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae4a\uc774 \ud544\ud130 ( -D \uc635\uc158)\ub294 \uc8fc\uc5b4\uc9c4 \ud638\ucd9c \uae4a\uc774\ubcf4\ub2e4 \ub354 \uae4a\uac8c \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\uc744 \uc0dd\ub7b5\ud558\ub294 \ud544\ud130\uc774\ub2e4. \uc2dc\uac04 \ud544\ud130 ( -t \uc635\uc158)\ub294 \uc8fc\uc5b4\uc9c4 \uc2dc\uac04\ubcf4\ub2e4 \ub354 \uc791\uc740 \uc2dc\uac04\ub3d9\uc548 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\uc744 \uc0dd\ub7b5\ud558\ub294 \ud544\ud130\uc774\ub2e4. \ud568\uc218 \ud544\ud130 ( -F \uc640 -N \uc635\uc158)\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \ud558\uc704 \ud568\uc218\ub4e4\uc744 \ubcf4\uc5ec\uc8fc\uace0/\uc0dd\ub7b5\ud558\ub294 \ud544\ud130\uc774\ub2e4. -k \uc635\uc158\uc73c\ub85c \ucee4\ub110 \ud568\uc218\ub4e4 \ub610\ud55c \ucd94\uc801\uc774 \uac00\ub2a5\ud558\ub2e4 (\ub8e8\ud2b8 \uad8c\ud55c \ud544\uc694). \ubcf4\ud1b5 'hello world' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ucd9c\ub825 \uacb0\uacfc\ub294 \uc544\ub798\uc640 \uac19\ub2e4. (\uc2dc\uc2a4\ud15c \ucf5c\uc744 \uc9c1\uc811 \ud638\ucd9c\ud558\uae30 \uc704\ud574, \uc77c\ubc18\uc801\uc778 printf()\uac00 \uc544\ub2cc stderr\uc640 fprintf()\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \ud55c \uac83\uc5d0 \uc720\uc758\ud558\ub77c): $ sudo uftrace -k tests/t-hello Hello world # DURATION TID FUNCTION 1.365 us [21901] | __monstartup(); 0.951 us [21901] | __cxa_atexit(); [21901] | main() { [21901] | fprintf() { 3.569 us [21901] | __do_page_fault(); 10.127 us [21901] | sys_write(); 20.103 us [21901] | } /* fprintf */ 21.286 us [21901] | } /* main */ fprintf()\ud638\ucd9c \ub0b4\ubd80\uc5d0\uc11c page fault \ud578\ub4e4\ub7ec\uc640 write syscall \ud578\ub4e4\ub7ec\uac00 \ud638\ucd9c\ub418\uc5c8\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \uac01\uac01 -A \uc640 -R \uc635\uc158\uc73c\ub85c \uae30\ub85d\ud558\uace0 \ubcf4\uc5ec\uc904 \uc218 \uc788\ub2e4. \uc774\ud558 \uc608\uc81c\uc5d0\uc11c\ub294 'fib'(\ud53c\ubcf4\ub098\uce58 \uc22b\uc790) \ud568\uc218\uc758 \uccab \ubc88\uc9f8 \uc778\uc790\uc640 \ub9ac\ud134\uac12\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace record -A fib@arg1 -R fib@retval tests/t-fibonacci 5 $ uftrace replay # DURATION TID FUNCTION 2.853 us [22080] | __monstartup(); 2.194 us [22080] | __cxa_atexit(); [22080] | main() { 2.706 us [22080] | atoi(); [22080] | fib(5) { [22080] | fib(4) { [22080] | fib(3) { 7.473 us [22080] | fib(2) = 1; 0.419 us [22080] | fib(1) = 1; 11.452 us [22080] | } = 2; /* fib */ 0.460 us [22080] | fib(2) = 1; 13.823 us [22080] | } = 3; /* fib */ [22080] | fib(3) { 0.424 us [22080] | fib(2) = 1; 0.437 us [22080] | fib(1) = 1; 2.860 us [22080] | } = 2; /* fib */ 19.600 us [22080] | } = 5; /* fib */ 25.024 us [22080] | } /* main */ report \uba85\ub839\uc5b4\ub294 \uc5b4\ub5a4 \ud568\uc218\uac00 \uadf8 \uc790\uc2dd \ud568\uc218\ub97c \ud3ec\ud568\ud574\uc11c \uac00\uc7a5 \uc624\ub7ab\ub3d9\uc548 \uc2e4\ud589\ub418\uc5c8\ub294\uc9c0(\ucd1d\uc2dc\uac04)\ub97c \uc54c\ub824\uc900\ub2e4. $ uftrace report Total time Self time Calls Function ========== ========== ========== ==================================== 25.024 us 2.718 us 1 main 19.600 us 19.600 us 9 fib 2.853 us 2.853 us 1 __monstartup 2.706 us 2.706 us 1 atoi 2.194 us 2.194 us 1 __cxa_atexit graph \uba85\ub839\uc5b4\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc704\uc758 \uc608\uc81c\uc5d0\uc11c, main \ud568\uc218\uc758 \ud638\ucd9c \uadf8\ub798\ud504\ub294 \uc544\ub798\uc640 \uac19\ub2e4: $ uftrace graph main # Function Call Graph for 'main' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 1, time 25.024 us [0] main (0x40066b) ========== FUNCTION CALL GRAPH ========== 25.024 us : (1) main 2.706 us : +-(1) atoi : | 19.600 us : +-(1) fib 16.683 us : (2) fib 12.773 us : (4) fib 7.892 us : (2) fib dump \uba85\ub839\uc740 \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \uadf8\ub300\ub85c(raw) \ucd9c\ub825\ud558\uc5ec \ubcf4\uc5ec\uc900\ub2e4. uftrace dump --chrome \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uba74 \ud06c\ub86c \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uacb0\uacfc\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc774\ud558\ub294 \uc791\uc740 C++ template metaprogram\uc744 \ucef4\ud30c\uc77c\ud558\ub294 clang (LLVM)\uc758 \uc2e4\ud589 \uacfc\uc815\uc744 \ubcf4\uc5ec\uc900\ub2e4. flame-graph \ud615\uc2dd\uc758 \uacb0\uacfc \ub610\ud55c \uc9c0\uc6d0\ud55c\ub2e4. \ud574\ub2f9 \ub370\uc774\ud130\ub294 uftrace dump --flame-graph \ub85c \uc2e4\ud589\ub418\uc5b4 flamegraph.pl \ub85c \ub118\uaca8\uc9c8 \uc218 \uc788\ub2e4. \uc774\ud558\ub294 \uac04\ub2e8\ud55c C \ud504\ub85c\uadf8\ub7a8\uc744 gcc\ub85c \ucef4\ud30c\uc77c\ud55c \uacb0\uacfc\uc5d0 \ub300\ud55c flame graph\uc774\ub2e4. info \uba85\ub839\uc5b4\ub294 \uae30\ub85d\uc774 \ub418\uc5c8\uc744 \ub54c\uc758 \uc2dc\uc2a4\ud15c\uacfc \ud504\ub85c\uadf8\ub7a8 \uc815\ubcf4\ub97c \ubcf4\uc5ec\uc900\ub2e4. $ uftrace info # system information # ================== # program version : uftrace v0.8.1 # recorded on : Tue May 24 11:21:59 2016 # cmdline : uftrace record tests/t-abc # cpu info : Intel(R) Core(TM) i7-3930K CPU @ 3.20GHz # number of cpus : 12 / 12 (online / possible) # memory info : 20.1 / 23.5 GB (free / total) # system load : 0.00 / 0.06 / 0.06 (1 / 5 / 15 min) # kernel version : Linux 4.5.4-1-ARCH # hostname : sejong # distro : \"Arch Linux\" # # process information # =================== # number of tasks : 1 # task list : 5098 # exe image : /home/namhyung/project/uftrace/tests/t-abc # build id : a3c50d25f7dd98dab68e94ef0f215edb06e98434 # exit status : exited with code: 0 # elapsed time : 0.003219479 sec # cpu time : 0.000 / 0.003 sec (sys / user) # context switch : 1 / 1 (voluntary / involuntary) # max rss : 3072 KB # page fault : 0 / 172 (major / minor) # disk iops : 0 / 24 (read / write) script \uba85\ub839\uc5b4\ub294 \uae30\ub85d\ub41c \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9\uc790 \uc815\uc758 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud55c\ub2e4. \ud604\uc7ac\uae4c\uc9c0 \uc9c0\uc6d0\ub418\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub294 Python 3, Python 2.7 \uacfc Lua 5.1 \uc774\ub2e4. tui \uba85\ub839\uc5b4\ub294 ncurses \ub97c \uc774\uc6a9\ud55c \ud14d\uc2a4\ud2b8 \uae30\ubc18 \ub300\ud654\ud615 \uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc704\ud55c \uba85\ub839\uc5b4\uc774\ub2e4. \ud604\uc7ac graph , report , info \uba85\ub839\uc5b4\uc758 \uae30\ubcf8\uc801\uc778 \uae30\ub2a5\uc744 \uc81c\uacf5\ud55c\ub2e4.","title":"uftrace \uc0ac\uc6a9 \ubc29\ubc95"},{"location":"ko/#_2","text":"\ub9ac\ub205\uc2a4\uc640 \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 C/C++/Rust/Python \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud574\uc11c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. \uc774\ubbf8 \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uc758 \ucd94\uc801\uc740 \uc544\uc9c1 \ubd88\uac00\ub2a5 \ud558\ub2e4. \uc804\uccb4 \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ud1b5\ud569 \ubd84\uc11d\uc740 \ubd88\uac00\ub2a5 \ud558\ub2e4. \ud604\uc7ac\ub294 x86_64, AArch64 \ub9cc \uc9c0\uc6d0\ud55c\ub2e4. x86 (32-bit), ARM (v6, v7) \ud658\uacbd\uc5d0\uc11c\ub3c4 \uc791\ub3d9\ud558\uc9c0\ub9cc, \ub3d9\uc801 \ucd94\uc801\uc774\ub098 \uc790\ub3d9 \uc778\uc790 \uac00\uc838\uc624\uae30\uc640 \uac19\uc740 \uc77c\ubd80 \uae30\ub2a5\uc740 \uc798 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\ub2e4.","title":"\uc81c\uc57d\uc0ac\ud56d"},{"location":"ko/#_3","text":"uftrace \ub294 GPL v2. \ub77c\uc774\uc120\uc2a4 \ud558\uc5d0 \ubc30\ud3ec\ub418\uba70 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 COPYING \ud30c\uc77c\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"\ub77c\uc774\uc120\uc2a4"},{"location":"ko/CONTRIBUTING/","text":"uftrace\uc5d0 \uae30\uc5ec\ud558\uae30 uftrace\uc5d0 \uae30\uc5ec\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574\uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4. \uc544\ub798\uc758 \uc8fc\uc18c\uc5d0\uc11c uftrace \uc18c\uc2a4\ucf54\ub4dc\ub97c git\uc73c\ub85c \ud074\ub860\ud55c \ub4a4 \ud328\uce58\uc640 \ud568\uaed8 PR\uc744 \ubcf4\ub0b4\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4. \ud328\uce58\ub97c \uc9c4\ud589\ud558\uc2dc\uae30\uc5d0 \uc55e\uc11c, \ubcf8 \uae00\uc5d0 \uc18c\uac1c\ub41c \uaddc\uce59\ub4e4\uc744 \uba3c\uc800 \uc77d\uc5b4\uc8fc\uc2dc\uae30\ub97c \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. https://github.com/namhyung/uftrace \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c uftrace\ub294 C\ub85c \uc791\uc131\ub418\uc5c8\uace0 \uba87\uac00\uc9c0 \ucc28\uc774\uc810\ub4e4\uc744 \uc81c\uc678\ud558\uace0\uc11c\ub294 \uac70\uc758 \ub300\ubd80\ubd84 \ub9ac\ub205\uc2a4 \ucee4\ub110\uc758 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c \uc744 \ub530\ub974\uace0 \uc788\uc2b5\ub2c8\ub2e4. uftrace \uc800\uc7a5\uc18c\uc5d0\uc11c\ub294 pre-commit \uacfc clang-format \uc744 \ud1b5\ud574 \uc790\ub3d9\uc73c\ub85c \ucf54\ub4dc \ud615\uc2dd\uc744 \uc801\uc6a9\uc2dc\ucf1c \uc804\ubc18\uc801\uc778 \uc18c\uc2a4\ucf54\ub4dc\uc758 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc774 \ud56d\uc0c1 \uc77c\uad00\uc801\uc73c\ub85c \uc720\uc9c0\ub420 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \uac80\uc0ac\ud558\uae30 \uc704\ud574\uc11c\ub294 pre-commit \ud30c\uc774\uc36c \ud328\ud0a4\uc9c0 (\ud30c\uc774\uc36c \ubc84\uc804 3.7 \uc774\uc0c1\uc774 \ud544\uc694\ud569\ub2c8\ub2e4)\uac00 \ud544\uc694\ud558\uace0, \uc124\uce58\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ python3 -m pip install pre-commit \ud328\ud0a4\uc9c0 \uc124\uce58\uac00 \uc644\ub8cc\ub418\uc5c8\ub2e4\uba74, pre-commit hook\uc744 uftrace \uc18c\uc2a4\ucf54\ub4dc \ub514\ub809\ud1a0\ub9ac \uc548\uc5d0 \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ pre-commit install pre-commit installed at .git/hooks/pre-commit \ub514\ub809\ud1a0\ub9ac \uc548\uc5d0 pre-commit \uc124\uce58\uac00 \uc644\ub8cc\ub418\uc5c8\ub2e4\uba74, \uc0c8\ub85c\uc6b4 commit\uc744 \uc791\uc131\ud560 \ub54c\ub9c8\ub2e4 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc774 \uc790\ub3d9\uc73c\ub85c \uac80\uc0ac\ub420 \uac83\uc785\ub2c8\ub2e4. $ git commit -s ... clang-format.............................................................Failed - hook id: clang-format - files were modified by this hook \ub9cc\uc57d, \uc791\uc131\ub41c \ucf54\ub4dc\uac00 uftrace\uc758 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uacfc \ub9de\uc9c0 \uc54a\ub294\ub2e4\uba74 clang-format\uc774 \ucf54\ub529 \uc2a4\ud0c0\uc77c\uc744 \uac80\uc0ac\ud55c \uacb0\uacfc\uac00 Failed\ub85c \ub098\ud0c0\ub098\uace0, .clang-format \uc5d0 \ubbf8\ub9ac \uc124\uc815\ud574\ub454 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc5d0 \ub9de\ucd94\uc5b4 \ucf54\ub4dc\uac00 \uc790\ub3d9\uc73c\ub85c \uc218\uc815\ub420 \uac83\uc785\ub2c8\ub2e4. clang-format\uc73c\ub85c \ucf54\ub4dc\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uba74, git add -u \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud55c \ub4a4, commit\uc744 \ub2e4\uc2dc \uc791\uc131\ud574\uc11c \uc218\uc815\ub41c \ucf54\ub4dc\uac00 \ubc18\uc601\ub420 \uc218 \uc788\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc758 \uba85\ub839\uc5b4\ub85c pre-commit\uc744 \uc0ac\uc6a9\ud55c \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c \uac80\uc0ac\ub3c4 \uac00\ub2a5\ud569\ub2c8\ub2e4. $ git add -u $ pre-commit run pre-commit\uc740 git staging\ub41c \ucf54\ub4dc\ub4e4\uc5d0 \ud55c\ud574\uc11c \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc744 \uac80\uc0ac\ud558\uace0, \uac80\uc0ac \uacb0\uacfc\uac00 Failed\ub85c \ub098\ud0c0\ub098\uba74 \uc790\ub3d9\uc73c\ub85c \ucf54\ub4dc \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud574\uc90d\ub2c8\ub2e4. \ud328\uce58 \uc8fc\uc81c\ub97c \uba54\uc2dc\uc9c0 \uc81c\ubaa9\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\uae30 uftrace\uac00 \ud070 \uaddc\ubaa8\uc758 \ud504\ub85c\uc81d\ud2b8\uac00 \uc544\ub2d0\uc9c0\ub77c\ub3c4, \uc30d\uc810(:) \uc55e\uc5d0 \ud328\uce58\uc758 \uc8fc\uc81c\ub97c \ub098\ud0c0\ub0b4\ub294 \ub2e8\uc5b4\ub97c \uc801\ub294 \uac83\uc740 \ub2e4\ub978 \uac1c\ubc1c\uc790\ub4e4\uc774 \uc5ec\ub7ec \uc8fc\uc81c\uc758 \ud328\uce58\ub97c \uc27d\uac8c \uad6c\ubd84\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uc88b\uc740 \uaddc\uce59\uc774\ub77c\uace0 \uc0dd\uac01\ub429\ub2c8\ub2e4. $ git log --oneline --graph * fef4226 Merge branch 'misc-fix' |\\ | * 54a4ef0 test: Fix to be able to call runtest.py directly | * 6bbe4a0 graph: Skip kernel functions outside of user | * a76c7cb kernel: Use real address for filter match |/ ... \ud328\uce58\uc5d0 \uc11c\uba85\ud558\uae30 sign-off (\uc11c\uba85)\uc740 \ud328\uce58\uc5d0 \ub300\ud55c \uc124\uba85 \ub9c8\uc9c0\ub9c9 \ubd80\ubd84\uc5d0 \ud55c\uc904\ub85c \ud328\uce58\ub97c \uc790\uc2e0\uc774 \uc9c1\uc811 \uc791\uc131\ud588\uace0, \uc624\ud508\uc18c\uc2a4 \ud328\uce58\ub85c \ubc30\ud3ec\ud560 \uad8c\ub9ac\uac00 \uc788\ub2e4\ub294 \uc0ac\uc2e4\uc744 \uc54c\ub824\uc8fc\ub294 \uac83\uc785\ub2c8\ub2e4. \ud328\uce58\uc5d0 sign-off (\uc11c\uba85)\uc744 \ud558\ub294 \uaddc\uce59\uc740 \ub2e4\uc74c \ud56d\ubaa9 \ub4e4\uc5d0 \ub3d9\uc758\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4: Developer's Certificate of Origin 1.1 \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc758 \uae30\uc5ec\uc790\ub85c\uc368, \ub2e4\uc74c\uc744 \uc99d\uba85\ud569\ub2c8\ub2e4: (a) \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc804\uccb4 \ud639\uc740 \uc77c\ubd80 \uae30\uc5ec\ub294 \ubcf8\uc778\uc774 \uc9c1\uc811 \ud588\uc73c\uba70, \uae30\uc5ec\uc790 \ubcf8\uc778\uc740 \ud30c\uc77c\uc5d0 \uba85\uc2dc\ub418\uc5b4 \uc788\ub294 \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uc5d0 \ub530\ub77c \uae30\uc5ec\ud55c \ubd80\ubd84\uc744 \uc81c\ucd9c\ud560 \uad8c\ub9ac\uac00 \uc788\uc2b5\ub2c8\ub2e4. (b) \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uae30\uc5ec\ub294, \uae30\uc5ec\uc790 \ubcf8\uc778\uc774 \uc544\ub294 \ud55c, \uc801\uc808\ud55c \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uac00 \uc801\uc6a9\ub418\ub294 \uc774\uc804 \uc791\uc5c5\ub4e4\uc5d0 \uae30\ubc18\ud558\uace0 \uc788\uc73c\uba70 \ub2e4\ub978 \ub77c\uc774\uc13c\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc740 \uc774\uc0c1, \ud30c\uc77c\uc5d0 \uba85\uc2dc\ub41c \ubc14\uc5d0 \ub530\ub77c, \uae30\uc5ec\uc790 \ubcf8\uc778\uc740 \ub3d9\uc77c\ud55c \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uc5d0 \uae30\ubc18\ud558\uc5ec \uc774\uc804 \uc791\uc5c5\ub4e4\uc744 \uc804\uccb4 \ub610\ub294 \uc77c\ubd80 \uc218\uc815\ud558\uc5ec \uc81c\ucd9c\ud560 \uad8c\ub9ac\uac00 \uc788\uc2b5\ub2c8\ub2e4. (c) \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uae30\uc5ec\ub294 \uc0c1\uae30 (a), (b), (c) \uc911 \ud558\ub098\uc758 \ud56d\ubaa9\uc5d0 \ud574\ub2f9\ub418\ub294 \uc774\ub85c\ubd80\ud130 \uc9c1\uc811 \uc81c\uacf5\ubc1b\uc558\uc73c\uba70, \ubcf8\uc778\uc740 \uc81c\uacf5\ubc1b\uc740 \uc791\uc5c5\ubb3c\uc744 \uc218\uc815\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. (d) \ubcf8 \ud504\ub85c\uc81d\ud2b8 \ubc0f \uae30\uc5ec\uc790\uac00 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud55c \ubd80\ubd84\uc740 \uacf5\uac1c\ub418\ub294 \ubc14\uc774\uba70, \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud55c \ubd80\ubd84\uc744 \uc81c\ucd9c\ud560 \ub54c \ud568\uaed8 \uc81c\uacf5\ud588\ub358 \uac1c\uc778\uc815\ubcf4\uc640 \uc11c\uba85(sign-off)\uacfc \uac19\uc740 \uae30\ub85d\ub4e4\uc740 \ubb34\uae30\ud55c \uc720\uc9c0\ub418\uc5b4 \ubcf8 \ud504\ub85c\uc81d\ud2b8\ub098 \ud504\ub85c\uc81d\ud2b8\uc640 \uad00\ub828\ub41c \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uc640 \ud568\uaed8 \uc9c0\uc18d\uc801\uc73c\ub85c \uc7ac\ubc30\ud3ec \ub420 \uc218 \uc788\uc74c\uc744 \uc774\ud574\ud558\uace0 \ub3d9\uc758\ud569\ub2c8\ub2e4. \ubcf8\uc778\uc774 \uc704 \ud56d\ubaa9 (a), (b), (c) \uc911 \ud558\ub098\uc5d0 \ud574\ub2f9\ub418\uace0 (d)\uc5d0 \ub3d9\uc758\ud55c\ub2e4\uba74, \ud328\uce58 \uc124\uba85 \ub9c8\uc9c0\ub9c9 \ubd80\ubd84\uc5d0 \ubcf8\uc778\uc758 \uc2e4\uba85\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ud55c \uc904\uc744 \ucd94\uac00\ud574\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4. (\uac00\uba85\uc774\ub098 \uc775\uba85\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\ub294 \uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.) Signed-off-by: Random J Developer <random@developer.example.org>","title":"uftrace\uc5d0 \uae30\uc5ec\ud558\uae30"},{"location":"ko/CONTRIBUTING/#uftrace","text":"uftrace\uc5d0 \uae30\uc5ec\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574\uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4. \uc544\ub798\uc758 \uc8fc\uc18c\uc5d0\uc11c uftrace \uc18c\uc2a4\ucf54\ub4dc\ub97c git\uc73c\ub85c \ud074\ub860\ud55c \ub4a4 \ud328\uce58\uc640 \ud568\uaed8 PR\uc744 \ubcf4\ub0b4\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4. \ud328\uce58\ub97c \uc9c4\ud589\ud558\uc2dc\uae30\uc5d0 \uc55e\uc11c, \ubcf8 \uae00\uc5d0 \uc18c\uac1c\ub41c \uaddc\uce59\ub4e4\uc744 \uba3c\uc800 \uc77d\uc5b4\uc8fc\uc2dc\uae30\ub97c \uad8c\uc7a5\ub4dc\ub9bd\ub2c8\ub2e4. https://github.com/namhyung/uftrace","title":"uftrace\uc5d0 \uae30\uc5ec\ud558\uae30"},{"location":"ko/CONTRIBUTING/#_1","text":"uftrace\ub294 C\ub85c \uc791\uc131\ub418\uc5c8\uace0 \uba87\uac00\uc9c0 \ucc28\uc774\uc810\ub4e4\uc744 \uc81c\uc678\ud558\uace0\uc11c\ub294 \uac70\uc758 \ub300\ubd80\ubd84 \ub9ac\ub205\uc2a4 \ucee4\ub110\uc758 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c \uc744 \ub530\ub974\uace0 \uc788\uc2b5\ub2c8\ub2e4. uftrace \uc800\uc7a5\uc18c\uc5d0\uc11c\ub294 pre-commit \uacfc clang-format \uc744 \ud1b5\ud574 \uc790\ub3d9\uc73c\ub85c \ucf54\ub4dc \ud615\uc2dd\uc744 \uc801\uc6a9\uc2dc\ucf1c \uc804\ubc18\uc801\uc778 \uc18c\uc2a4\ucf54\ub4dc\uc758 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc774 \ud56d\uc0c1 \uc77c\uad00\uc801\uc73c\ub85c \uc720\uc9c0\ub420 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \uac80\uc0ac\ud558\uae30 \uc704\ud574\uc11c\ub294 pre-commit \ud30c\uc774\uc36c \ud328\ud0a4\uc9c0 (\ud30c\uc774\uc36c \ubc84\uc804 3.7 \uc774\uc0c1\uc774 \ud544\uc694\ud569\ub2c8\ub2e4)\uac00 \ud544\uc694\ud558\uace0, \uc124\uce58\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ python3 -m pip install pre-commit \ud328\ud0a4\uc9c0 \uc124\uce58\uac00 \uc644\ub8cc\ub418\uc5c8\ub2e4\uba74, pre-commit hook\uc744 uftrace \uc18c\uc2a4\ucf54\ub4dc \ub514\ub809\ud1a0\ub9ac \uc548\uc5d0 \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ pre-commit install pre-commit installed at .git/hooks/pre-commit \ub514\ub809\ud1a0\ub9ac \uc548\uc5d0 pre-commit \uc124\uce58\uac00 \uc644\ub8cc\ub418\uc5c8\ub2e4\uba74, \uc0c8\ub85c\uc6b4 commit\uc744 \uc791\uc131\ud560 \ub54c\ub9c8\ub2e4 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc774 \uc790\ub3d9\uc73c\ub85c \uac80\uc0ac\ub420 \uac83\uc785\ub2c8\ub2e4. $ git commit -s ... clang-format.............................................................Failed - hook id: clang-format - files were modified by this hook \ub9cc\uc57d, \uc791\uc131\ub41c \ucf54\ub4dc\uac00 uftrace\uc758 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uacfc \ub9de\uc9c0 \uc54a\ub294\ub2e4\uba74 clang-format\uc774 \ucf54\ub529 \uc2a4\ud0c0\uc77c\uc744 \uac80\uc0ac\ud55c \uacb0\uacfc\uac00 Failed\ub85c \ub098\ud0c0\ub098\uace0, .clang-format \uc5d0 \ubbf8\ub9ac \uc124\uc815\ud574\ub454 \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc5d0 \ub9de\ucd94\uc5b4 \ucf54\ub4dc\uac00 \uc790\ub3d9\uc73c\ub85c \uc218\uc815\ub420 \uac83\uc785\ub2c8\ub2e4. clang-format\uc73c\ub85c \ucf54\ub4dc\uac00 \uc218\uc815\ub418\uc5c8\ub2e4\uba74, git add -u \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud55c \ub4a4, commit\uc744 \ub2e4\uc2dc \uc791\uc131\ud574\uc11c \uc218\uc815\ub41c \ucf54\ub4dc\uac00 \ubc18\uc601\ub420 \uc218 \uc788\ub3c4\ub85d \ud574\uc57c\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc758 \uba85\ub839\uc5b4\ub85c pre-commit\uc744 \uc0ac\uc6a9\ud55c \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c \uac80\uc0ac\ub3c4 \uac00\ub2a5\ud569\ub2c8\ub2e4. $ git add -u $ pre-commit run pre-commit\uc740 git staging\ub41c \ucf54\ub4dc\ub4e4\uc5d0 \ud55c\ud574\uc11c \ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c\uc744 \uac80\uc0ac\ud558\uace0, \uac80\uc0ac \uacb0\uacfc\uac00 Failed\ub85c \ub098\ud0c0\ub098\uba74 \uc790\ub3d9\uc73c\ub85c \ucf54\ub4dc \uc2a4\ud0c0\uc77c\uc744 \uc218\uc815\ud574\uc90d\ub2c8\ub2e4.","title":"\ucf54\ub4dc \uc791\uc131 \uc2a4\ud0c0\uc77c"},{"location":"ko/CONTRIBUTING/#_2","text":"uftrace\uac00 \ud070 \uaddc\ubaa8\uc758 \ud504\ub85c\uc81d\ud2b8\uac00 \uc544\ub2d0\uc9c0\ub77c\ub3c4, \uc30d\uc810(:) \uc55e\uc5d0 \ud328\uce58\uc758 \uc8fc\uc81c\ub97c \ub098\ud0c0\ub0b4\ub294 \ub2e8\uc5b4\ub97c \uc801\ub294 \uac83\uc740 \ub2e4\ub978 \uac1c\ubc1c\uc790\ub4e4\uc774 \uc5ec\ub7ec \uc8fc\uc81c\uc758 \ud328\uce58\ub97c \uc27d\uac8c \uad6c\ubd84\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uc88b\uc740 \uaddc\uce59\uc774\ub77c\uace0 \uc0dd\uac01\ub429\ub2c8\ub2e4. $ git log --oneline --graph * fef4226 Merge branch 'misc-fix' |\\ | * 54a4ef0 test: Fix to be able to call runtest.py directly | * 6bbe4a0 graph: Skip kernel functions outside of user | * a76c7cb kernel: Use real address for filter match |/ ...","title":"\ud328\uce58 \uc8fc\uc81c\ub97c \uba54\uc2dc\uc9c0 \uc81c\ubaa9\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\uae30"},{"location":"ko/CONTRIBUTING/#_3","text":"sign-off (\uc11c\uba85)\uc740 \ud328\uce58\uc5d0 \ub300\ud55c \uc124\uba85 \ub9c8\uc9c0\ub9c9 \ubd80\ubd84\uc5d0 \ud55c\uc904\ub85c \ud328\uce58\ub97c \uc790\uc2e0\uc774 \uc9c1\uc811 \uc791\uc131\ud588\uace0, \uc624\ud508\uc18c\uc2a4 \ud328\uce58\ub85c \ubc30\ud3ec\ud560 \uad8c\ub9ac\uac00 \uc788\ub2e4\ub294 \uc0ac\uc2e4\uc744 \uc54c\ub824\uc8fc\ub294 \uac83\uc785\ub2c8\ub2e4. \ud328\uce58\uc5d0 sign-off (\uc11c\uba85)\uc744 \ud558\ub294 \uaddc\uce59\uc740 \ub2e4\uc74c \ud56d\ubaa9 \ub4e4\uc5d0 \ub3d9\uc758\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4: Developer's Certificate of Origin 1.1 \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc758 \uae30\uc5ec\uc790\ub85c\uc368, \ub2e4\uc74c\uc744 \uc99d\uba85\ud569\ub2c8\ub2e4: (a) \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc804\uccb4 \ud639\uc740 \uc77c\ubd80 \uae30\uc5ec\ub294 \ubcf8\uc778\uc774 \uc9c1\uc811 \ud588\uc73c\uba70, \uae30\uc5ec\uc790 \ubcf8\uc778\uc740 \ud30c\uc77c\uc5d0 \uba85\uc2dc\ub418\uc5b4 \uc788\ub294 \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uc5d0 \ub530\ub77c \uae30\uc5ec\ud55c \ubd80\ubd84\uc744 \uc81c\ucd9c\ud560 \uad8c\ub9ac\uac00 \uc788\uc2b5\ub2c8\ub2e4. (b) \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uae30\uc5ec\ub294, \uae30\uc5ec\uc790 \ubcf8\uc778\uc774 \uc544\ub294 \ud55c, \uc801\uc808\ud55c \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uac00 \uc801\uc6a9\ub418\ub294 \uc774\uc804 \uc791\uc5c5\ub4e4\uc5d0 \uae30\ubc18\ud558\uace0 \uc788\uc73c\uba70 \ub2e4\ub978 \ub77c\uc774\uc13c\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc740 \uc774\uc0c1, \ud30c\uc77c\uc5d0 \uba85\uc2dc\ub41c \ubc14\uc5d0 \ub530\ub77c, \uae30\uc5ec\uc790 \ubcf8\uc778\uc740 \ub3d9\uc77c\ud55c \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uc5d0 \uae30\ubc18\ud558\uc5ec \uc774\uc804 \uc791\uc5c5\ub4e4\uc744 \uc804\uccb4 \ub610\ub294 \uc77c\ubd80 \uc218\uc815\ud558\uc5ec \uc81c\ucd9c\ud560 \uad8c\ub9ac\uac00 \uc788\uc2b5\ub2c8\ub2e4. (c) \ubcf8 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uae30\uc5ec\ub294 \uc0c1\uae30 (a), (b), (c) \uc911 \ud558\ub098\uc758 \ud56d\ubaa9\uc5d0 \ud574\ub2f9\ub418\ub294 \uc774\ub85c\ubd80\ud130 \uc9c1\uc811 \uc81c\uacf5\ubc1b\uc558\uc73c\uba70, \ubcf8\uc778\uc740 \uc81c\uacf5\ubc1b\uc740 \uc791\uc5c5\ubb3c\uc744 \uc218\uc815\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. (d) \ubcf8 \ud504\ub85c\uc81d\ud2b8 \ubc0f \uae30\uc5ec\uc790\uac00 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud55c \ubd80\ubd84\uc740 \uacf5\uac1c\ub418\ub294 \ubc14\uc774\uba70, \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud55c \ubd80\ubd84\uc744 \uc81c\ucd9c\ud560 \ub54c \ud568\uaed8 \uc81c\uacf5\ud588\ub358 \uac1c\uc778\uc815\ubcf4\uc640 \uc11c\uba85(sign-off)\uacfc \uac19\uc740 \uae30\ub85d\ub4e4\uc740 \ubb34\uae30\ud55c \uc720\uc9c0\ub418\uc5b4 \ubcf8 \ud504\ub85c\uc81d\ud2b8\ub098 \ud504\ub85c\uc81d\ud2b8\uc640 \uad00\ub828\ub41c \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\uc13c\uc2a4\uc640 \ud568\uaed8 \uc9c0\uc18d\uc801\uc73c\ub85c \uc7ac\ubc30\ud3ec \ub420 \uc218 \uc788\uc74c\uc744 \uc774\ud574\ud558\uace0 \ub3d9\uc758\ud569\ub2c8\ub2e4. \ubcf8\uc778\uc774 \uc704 \ud56d\ubaa9 (a), (b), (c) \uc911 \ud558\ub098\uc5d0 \ud574\ub2f9\ub418\uace0 (d)\uc5d0 \ub3d9\uc758\ud55c\ub2e4\uba74, \ud328\uce58 \uc124\uba85 \ub9c8\uc9c0\ub9c9 \ubd80\ubd84\uc5d0 \ubcf8\uc778\uc758 \uc2e4\uba85\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \ud55c \uc904\uc744 \ucd94\uac00\ud574\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4. (\uac00\uba85\uc774\ub098 \uc775\uba85\uc73c\ub85c \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud558\ub294 \uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.) Signed-off-by: Random J Developer <random@developer.example.org>","title":"\ud328\uce58\uc5d0 \uc11c\uba85\ud558\uae30"},{"location":"ko/uftrace-dump/","text":"% UFTRACE-DUMP(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-dump - \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ub2e4\uc591\ud55c \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace dump [ options ] \uc124\uba85 \ub370\uc774\ud130 \ud30c\uc77c\uc5d0 \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ubcf4\uc5ec\uc8fc\ub294 \uba85\ub839\uc5b4\uc774\ub2e4. \ucd9c\ub825 \ud615\uc2dd\uc740 --chrome, --flame-graph \ub610\ub294 --graphviz \uc640 \uac19\uc740 \uc635\uc158\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. DUMP \uc635\uc158 --chrome : \uad6c\uae00 \ud06c\ub86c \ucd94\uc801 \uae30\ub2a5\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 JSON \ud615\uc2dd\uc758 \uacb0\uacfc\ubb3c\uc744 \ud45c\uc2dc\ud55c\ub2e4. --flame-graph : \ucd5c\uc2e0 \uc6f9 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 FlameGraph \ud615\uc2dd\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. (FlameGraph \ud234\ub85c \ucc98\ub9ac \ud544\uc694) --graphviz : Graphviz \ud234\ud0b7\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 DOT \ud615\uc2dd\uc758 \uacb0\uacfc\ubb3c\uc744 \ud45c\uc2dc\ud55c\ub2e4. --mermaid : \uadf8\ub798\ud504\ub97c \uc624\ud508\uc18c\uc2a4 mermaid\uc758 \ud50c\ub85c\uc6b0\ucc28\ud2b8 \ub2e4\uc774\uc5b4 \uadf8\ub7a8\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. \ucd9c\ub825\uac12\uc740 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ub80c\ub354\ub9c1\ub420 \uc218 \uc788\ub2e4. --debug : 16\uc9c4\uc218 \ub370\uc774\ud130\ub97c \ubcf4\uc5ec\uc900\ub2e4. --sample-time= \uc2dc\uac04 : --flame-graph \uc635\uc158\uc758 \uacb0\uacfc\ubb3c\uc744 \uc0dd\uc131\ud560 \ub54c \uc0d8\ud50c\ub9c1 \uc2dc\uac04\uc744 \uc801\uc6a9\ud55c\ub2e4. \uae30\ubcf8\uc73c\ub85c\ub294 \uac01 \ud568\uc218\uc758 \ud638\ucd9c \uc218\uac00 \uc801\uc6a9\ub41c\ub2e4. \uc774 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uba74 \uc8fc\uc5b4\uc9c4 \ub2e8\uc704\ub85c \uc2e4\ud589 \uc2dc\uac04\uc744 \uacc4\uc0b0\ud558\uc5ec \uc0d8\ud50c\ub9c1\ud55c\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \uc0d8\ud50c\ub9c1 \uc2dc\uac04\ubcf4\ub2e4 \uc801\uac8c \uc218\ud589\ub41c \ud568\uc218\ub294 \uacb0\uacfc\ubb3c \uc5d0\uc11c \uc81c\uc678\ub418\uc9c0\ub9cc, \ub354 \uae38\uac8c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ub41c\ub2e4. --no-args : \ud568\uc218 \uc778\uc790\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uace0 \uac12\uc744 \ubc18\ud658\ud55c\ub2e4. \uacf5\ud1b5 \uc635\uc158 -F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. \uacf5\ud1b5 \ubd84\uc11d \uc635\uc158 -H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 --chrome, --flame-graph \ub610\ub294 --graphviz \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c\ub9cc \uc758\ubbf8\uac00 \uc788\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 --chrome, --flame-graph \ub610\ub294 --graphviz \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c\ub9cc \uc758\ubbf8\uac00 \uc788\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc608\uc81c \uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uacb0\uacfc\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace record abc $ uftrace dump uftrace file header: magic = 4674726163652100 uftrace file header: version = 4 uftrace file header: header size = 40 uftrace file header: endian = 1 (little) uftrace file header: class = 2 (64 bit) uftrace file header: features = 0x63 (PLTHOOK | TASK_SESSION | SYM_REL_ADDR | MAX_STACK) uftrace file header: info = 0x3ff reading 23043.dat 105430.415350255 23043: [entry] __monstartup(4004d0) depth: 0 105430.415351178 23043: [exit ] __monstartup(4004d0) depth: 0 105430.415351932 23043: [entry] __cxa_atexit(4004f0) depth: 0 105430.415352687 23043: [exit ] __cxa_atexit(4004f0) depth: 0 105430.415353833 23043: [entry] main(400512) depth: 0 105430.415353992 23043: [entry] a(4006b2) depth: 1 105430.415354112 23043: [entry] b(4006a0) depth: 2 105430.415354230 23043: [entry] c(400686) depth: 3 105430.415354425 23043: [entry] getpid(4004b0) depth: 4 105430.415355035 23043: [exit ] getpid(4004b0) depth: 4 105430.415355549 23043: [exit ] c(400686) depth: 3 105430.415355761 23043: [exit ] b(4006a0) depth: 2 105430.415355943 23043: [exit ] a(4006b2) depth: 1 105430.415356109 23043: [exit ] main(400512) depth: 0 $ uftrace dump --chrome -F main {\"traceEvents\":[ {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"main\"}, {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415356,\"ph\":\"E\",\"pid\":23043,\"name\":\"main\"} ], \"metadata\": { \"command_line\":\"uftrace record abc \", \"recorded_time\":\"Tue May 24 19:44:54 2016\" } } $ uftrace dump --flame-graph --sample-time 1us main 1 main;a;b;c 1 $ uftrace dump --graphviz \\# command_line \"uftrace record tests/t-abc\" digraph \"/home/m/git/uftrace/tests/t-abc\" { \\# Attributes splines=ortho; concentrate=true; node [shape=\"rect\",fontsize=\"7\",style=\"filled\"]; edge [fontsize=\"7\"]; \\# Elements main[xlabel = \"Calls : 1\"] main->a[xlabel = \"Calls : 1\"] a->b[xlabel = \"Calls : 1\"] b->c[xlabel = \"Calls : 1\"] c->getpid[xlabel = \"Calls : 1\"] } \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-record (1), uftrace-replay (1) \ubc88\uc5ed\uc790 \ubbfc\uc9c0\uc218 kuongee@gmail.com","title":"Uftrace dump"},{"location":"ko/uftrace-dump/#_1","text":"uftrace-dump - \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ub2e4\uc591\ud55c \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-dump/#_2","text":"uftrace dump [ options ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-dump/#_3","text":"\ub370\uc774\ud130 \ud30c\uc77c\uc5d0 \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ubcf4\uc5ec\uc8fc\ub294 \uba85\ub839\uc5b4\uc774\ub2e4. \ucd9c\ub825 \ud615\uc2dd\uc740 --chrome, --flame-graph \ub610\ub294 --graphviz \uc640 \uac19\uc740 \uc635\uc158\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-dump/#dump","text":"--chrome : \uad6c\uae00 \ud06c\ub86c \ucd94\uc801 \uae30\ub2a5\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 JSON \ud615\uc2dd\uc758 \uacb0\uacfc\ubb3c\uc744 \ud45c\uc2dc\ud55c\ub2e4. --flame-graph : \ucd5c\uc2e0 \uc6f9 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 FlameGraph \ud615\uc2dd\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. (FlameGraph \ud234\ub85c \ucc98\ub9ac \ud544\uc694) --graphviz : Graphviz \ud234\ud0b7\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 DOT \ud615\uc2dd\uc758 \uacb0\uacfc\ubb3c\uc744 \ud45c\uc2dc\ud55c\ub2e4. --mermaid : \uadf8\ub798\ud504\ub97c \uc624\ud508\uc18c\uc2a4 mermaid\uc758 \ud50c\ub85c\uc6b0\ucc28\ud2b8 \ub2e4\uc774\uc5b4 \uadf8\ub7a8\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. \ucd9c\ub825\uac12\uc740 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ub80c\ub354\ub9c1\ub420 \uc218 \uc788\ub2e4. --debug : 16\uc9c4\uc218 \ub370\uc774\ud130\ub97c \ubcf4\uc5ec\uc900\ub2e4. --sample-time= \uc2dc\uac04 : --flame-graph \uc635\uc158\uc758 \uacb0\uacfc\ubb3c\uc744 \uc0dd\uc131\ud560 \ub54c \uc0d8\ud50c\ub9c1 \uc2dc\uac04\uc744 \uc801\uc6a9\ud55c\ub2e4. \uae30\ubcf8\uc73c\ub85c\ub294 \uac01 \ud568\uc218\uc758 \ud638\ucd9c \uc218\uac00 \uc801\uc6a9\ub41c\ub2e4. \uc774 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uba74 \uc8fc\uc5b4\uc9c4 \ub2e8\uc704\ub85c \uc2e4\ud589 \uc2dc\uac04\uc744 \uacc4\uc0b0\ud558\uc5ec \uc0d8\ud50c\ub9c1\ud55c\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \uc0d8\ud50c\ub9c1 \uc2dc\uac04\ubcf4\ub2e4 \uc801\uac8c \uc218\ud589\ub41c \ud568\uc218\ub294 \uacb0\uacfc\ubb3c \uc5d0\uc11c \uc81c\uc678\ub418\uc9c0\ub9cc, \ub354 \uae38\uac8c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ub41c\ub2e4. --no-args : \ud568\uc218 \uc778\uc790\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uace0 \uac12\uc744 \ubc18\ud658\ud55c\ub2e4.","title":"DUMP \uc635\uc158"},{"location":"ko/uftrace-dump/#_4","text":"-F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.","title":"\uacf5\ud1b5 \uc635\uc158"},{"location":"ko/uftrace-dump/#_5","text":"-H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 --chrome, --flame-graph \ub610\ub294 --graphviz \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c\ub9cc \uc758\ubbf8\uac00 \uc788\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 --chrome, --flame-graph \ub610\ub294 --graphviz \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c\ub9cc \uc758\ubbf8\uac00 \uc788\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"\uacf5\ud1b5 \ubd84\uc11d \uc635\uc158"},{"location":"ko/uftrace-dump/#_6","text":"\uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uacb0\uacfc\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace record abc $ uftrace dump uftrace file header: magic = 4674726163652100 uftrace file header: version = 4 uftrace file header: header size = 40 uftrace file header: endian = 1 (little) uftrace file header: class = 2 (64 bit) uftrace file header: features = 0x63 (PLTHOOK | TASK_SESSION | SYM_REL_ADDR | MAX_STACK) uftrace file header: info = 0x3ff reading 23043.dat 105430.415350255 23043: [entry] __monstartup(4004d0) depth: 0 105430.415351178 23043: [exit ] __monstartup(4004d0) depth: 0 105430.415351932 23043: [entry] __cxa_atexit(4004f0) depth: 0 105430.415352687 23043: [exit ] __cxa_atexit(4004f0) depth: 0 105430.415353833 23043: [entry] main(400512) depth: 0 105430.415353992 23043: [entry] a(4006b2) depth: 1 105430.415354112 23043: [entry] b(4006a0) depth: 2 105430.415354230 23043: [entry] c(400686) depth: 3 105430.415354425 23043: [entry] getpid(4004b0) depth: 4 105430.415355035 23043: [exit ] getpid(4004b0) depth: 4 105430.415355549 23043: [exit ] c(400686) depth: 3 105430.415355761 23043: [exit ] b(4006a0) depth: 2 105430.415355943 23043: [exit ] a(4006b2) depth: 1 105430.415356109 23043: [exit ] main(400512) depth: 0 $ uftrace dump --chrome -F main {\"traceEvents\":[ {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"main\"}, {\"ts\":105430415353,\"ph\":\"B\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415354,\"ph\":\"B\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"getpid\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"c\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"b\"}, {\"ts\":105430415355,\"ph\":\"E\",\"pid\":23043,\"name\":\"a\"}, {\"ts\":105430415356,\"ph\":\"E\",\"pid\":23043,\"name\":\"main\"} ], \"metadata\": { \"command_line\":\"uftrace record abc \", \"recorded_time\":\"Tue May 24 19:44:54 2016\" } } $ uftrace dump --flame-graph --sample-time 1us main 1 main;a;b;c 1 $ uftrace dump --graphviz \\# command_line \"uftrace record tests/t-abc\" digraph \"/home/m/git/uftrace/tests/t-abc\" { \\# Attributes splines=ortho; concentrate=true; node [shape=\"rect\",fontsize=\"7\",style=\"filled\"]; edge [fontsize=\"7\"]; \\# Elements main[xlabel = \"Calls : 1\"] main->a[xlabel = \"Calls : 1\"] a->b[xlabel = \"Calls : 1\"] b->c[xlabel = \"Calls : 1\"] c->getpid[xlabel = \"Calls : 1\"] }","title":"\uc608\uc81c"},{"location":"ko/uftrace-dump/#_7","text":"uftrace (1), uftrace-record (1), uftrace-replay (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-dump/#_8","text":"\ubbfc\uc9c0\uc218 kuongee@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-graph/","text":"% UFTRACE-GRAPH(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-graph - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace graph [ options ] [ FUNCTION ] \uc124\uba85 \uc774 \uba85\ub839\uc5b4\ub294 \ub300\uc0c1 \ubc14\uc774\ub108\ub9ac \ub610\ub294 uftrace \ud615\uc2dd\uc73c\ub85c \uae30\ub85d\ub41c \ub370\uc774\ud130\uc5d0 \uc788\ub294 \ud568\uc218\ub4e4\uc5d0 \ub300\ud55c \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. \ub9cc\uc57d \ud568\uc218 \uc774\ub984\uc744 \uc0dd\ub7b5\ud558\uba74 \uc804\uccb4 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\uac00 \ubcf4\uc5ec\uc9c0\uace0, \ud568\uc218 \uc774\ub984\uc774 \ud558\ub098 \uc8fc\uc5b4\uc9c0\uba74 \ub300\uc0c1 \ud568\uc218\uc5d0 \ub300\ud55c \ubc31\ud2b8\ub808\uc774\uc2a4(backtrace) \ub4e4\uacfc \uadf8 \ud568\uc218\uac00 \ud638\ucd9c\ud558\ub294 \ud568\uc218\ub4e4\uc5d0 \ub300\ud55c \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uacb0\uacfc\uc5d0\uc11c \ubcf4\uc774\ub294 \uac01 \ud568\uc218\ub4e4\uc758 \uc815\ubcf4\uc5d0\ub294 \ud638\ucd9c \ud69f\uc218\uc640 \uadf8 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294\ub370 \uc18c\uc694\ub41c \uc804\uccb4 \uc2dc\uac04\uc774 \ud568\uaed8 \ubcf4\uc5ec\uc9c4\ub2e4. GRAPH \uc635\uc158 -f FIELD , --output-fields= FIELD : \ucd9c\ub825 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790 \uc9c0\uc815\uc73c\ub85c \uc124\uc815\ud55c\ub2e4. \uc124\uc815 \uac00\ub2a5\ud55c \uac12\uc740 total, self, addr \uc774\uba70 \uc27c\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ud544\ub4dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. 'none' \uacfc \uac19\uc740 \ud2b9\uc218 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc228\uae38 \uc218 \uc788\uc73c\uba70 \uae30\ubcf8 \uc124\uc815\uc740 'total' \uc774\ub2e4. \ud544\ub4dc\uc5d0 \ub300\ud55c \uc0c1\uc138\ud55c \ub0b4\uc6a9\uc740 FIELDS \ub97c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. --task : \uc77c\ubc18\uc801\uc778 \ud568\uc218 \uadf8\ub798\ud504 \ub300\uc2e0 \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. \ucd9c\ub825\ub41c \uac01 \ub178\ub4dc\ub4e4\uc740 \ud504\ub85c\uc138\uc2a4 \ud639\uc740 (\ucd08\ub85d\uc0c9\uc73c\ub85c \ud45c\uae30\ub41c)\uc2a4\ub808\ub4dc\ub97c \ubcf4\uc5ec\uc900\ub2e4. --srcline : \uac00\ub2a5\ud55c \uac01 \ud568\uc218\ub4e4\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4. --format= TYPE : \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud604\uc7ac\ub294 'normal' \uacfc 'html' \ud615\uc2dd\uc774 \uc9c0\uc6d0\ub41c\ub2e4. \uacf5\ud1b5 \uc635\uc158 -F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. \uacf5\ud1b5 \ubd84\uc11d \uc635\uc158 -H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc608\uc81c \uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uacb0\uacfc\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace record loop $ uftrace replay # DURATION TID FUNCTION [24447] | main() { [24447] | foo() { 8.134 us [24447] | loop(); 7.296 us [24447] | loop(); 7.234 us [24447] | loop(); 24.324 us [24447] | } /* foo */ [24447] | foo() { 7.234 us [24447] | loop(); 7.231 us [24447] | loop(); 7.231 us [24447] | loop(); 22.302 us [24447] | } /* foo */ [24447] | bar() { 10.100 ms [24447] | usleep(); 10.138 ms [24447] | } /* bar */ 10.293 ms [24447] | } /* main */ graph \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace graph # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) ========== FUNCTION CALL GRAPH ========== 10.293 ms : (1) loop 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep \uac00\uc7a5 \ucd5c\uc0c1\ub2e8\uc5d0 \uc788\ub294 \ub178\ub4dc\ub294 \uc2e4\uc81c \ud568\uc218\uac00 \uc544\ub2c8\ub77c \uc2e4\ud589 \uc774\ubbf8\uc9c0\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b8\ub2e4. \uc67c\ucabd\uc5d0 \uc788\ub294 \uc2dc\uac04\uc740 \uc624\ub978\ucabd\uc5d0 \uc788\ub294 \ud568\uc218\uc758 \ucd1d \uc2e4\ud589 \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b8\ub2e4. \ud568\uc218 \uc774\ub984 \uc55e\uc758 \uad04\ud638 \uc548\uc758 \uc22b\uc790\ub294 \ud638\ucd9c \ud69f\uc218\ub97c \uc758\ubbf8\ud55c\ub2e4. \uc704\uc5d0\uc11c main \ud568\uc218\ub294 \ub2e8 \ud55c\ubc88 \ud638\ucd9c\ub418\uc5b4 \uc57d 10 \ubc00\ub9ac\ucd08(msec) \ub3d9\uc548 \uc2e4\ud589\ub418\uc5c8\uace0, foo \ud568\uc218\ub294 \ub450\ubc88 \ud638\ucd9c\ub41c \ub2e4\uc74c \uadf8 \uc548\uc5d0\uc11c loop \ud568\uc218\ub97c \ucd1d 6 \ubc88 \ud638\ucd9c \ud558\uc600\ub2e4. \ub610\ud55c, main \ud568\uc218\ub294 bar \ud568\uc218\ub97c \ud55c\ubc88 \ud638\ucd9c\ud558\uace0, bar \ud568\uc218\ub294 \ub2e4\uc2dc usleep \ud568\uc218\ub97c \ud638\ucd9c\ud55c \uac83\uc744 \uc54c \uc218 \uc788\ub2e4. \uc774\ub7ec\ud55c \ubd84\uc11d \uacb0\uacfc\ub97c \ud1b5\ud574 usleep \ud568\uc218\ub294 main \ud568\uc218\uc5d0\uc11c \uc9c1\uc811 \ud638\ucd9c \ub41c\uac83\uc774 \uc544\ub2d8\uc744 \uc54c \uc218 \uc788\ub2e4. graph \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uace0 main \ud568\uc218\uba85\uc744 \uc9c0\uc815\ud558\uba74 \uc544\ub798\uc640 \uac19\uc774 \ud574\ub2f9 \ud568\uc218\uc758 \ud638\ucd9c \uadf8\ub798\ud504\uc640 \ud568\uaed8 \ubc31\ud2b8\ub808\uc774\uc2a4 \uc815\ubcf4\ub97c \uac19\uc774 \ubcf4\uc5ec\uc900\ub2e4. $ uftrace graph main # Function Call Graph for 'main' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 1, time 10.293 ms [0] main (0x4004f0) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep 'main' \ud568\uc218\ub294 \ucd5c\uc0c1\uc704 \ud568\uc218\uc774\ubbc0\ub85c \ubc31\ud2b8\ub808\uc774\uc2a4 \uacb0\uacfc\uac00 \uc5c6\uc9c0\ub9cc loop \ud568\uc218\ub97c \uc9c0\uc815\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uacb0\uacfc\ub97c \ubcfc \uc218 \uc788\ub2e4. $ uftrace graph loop # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 6, time 44.360 us [0] main (0x4004b0) [1] foo (0x400622) [2] loop (0x400f5f6) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 44.360 us : (6) loop \uc774 \ubc31\ud2b8\ub808\uc774\uc2a4 \uacb0\uacfc\uc5d0\uc11c loop \ud568\uc218\ub294 foo \ud568\uc218\uc5d0\uc11c \ud638\ucd9c\ub418\uc5c8\uace0 \ub2e4\uc2dc foo \ud568\uc218\ub294 main \ud568\uc218\uc5d0\uc11c \ud638\ucd9c\ub41c\uac83\uc744 \uc54c \uc218 \uc788\ub2e4. loop \ud568\uc218\ub294 \ub2e4\ub978 \ud568\uc218\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uacbd\uc6b0\uc5d0 loop \ud568\uc218\ub294 \ub2e8 \ud558\ub098\uc758 \uacbd\ub85c\ub97c \ud1b5\ud574\uc11c\ub9cc \ud638\ucd9c\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 backtrace #0 \uc758 \ud638\ucd9c \ud69f\uc218\ub294 6 \uc774\ub41c\ub2e4. graph \uba85\ub839\uc5b4\ub294 \ud568\uc218 \ub2e8\uc704\uc758 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc8fc\uc9c0\ub9cc, --task \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc5b4\ub5bb\uac8c \ud504\ub85c\uc138\uc2a4\uc640 \uc2a4\ub808\ub4dc\ub4e4\uc774 \uc0dd\uc131\ub418\uc5c8\ub294\uc9c0\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ud0dc\uc2a4\ud06c \ub2e8\uc704 \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uba74, GCC \ucef4\ud30c\uc77c\ub7ec\uc758 \uc2e4\ud589\uc5d0 \ub300\ud55c \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. $ uftrace record --force /usr/bin/gcc hello.c $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 159.854 ms 4.440 ms [ 82723] : gcc : | 90.951 ms 90.951 ms [ 82734] : +----cc1 : | 17.150 ms 17.150 ms [ 82735] : +----as : | 45.183 ms 6.076 ms [ 82736] : +----collect2 : | 38.880 ms 38.880 ms [ 82737] : +----ld \uc704\uc758 \ucd9c\ub825 \uacb0\uacfc\uc5d0\uc11c \ubcf4\uc774\ub294 \uac83\uacfc \uac19\uc774 gcc \ub294 cc1 , as \uadf8\ub9ac\uace0 collect2 \ud504\ub85c\uc138\uc2a4\ub97c \uc0dd\uc131\ud558\uc600\uace0, collect2 \ub294 \ub0b4\ubd80\uc801\uc73c\ub85c ld \ud504\ub85c\uc138\uc2a4\ub97c \uc0dd\uc131\ud55c \uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\ub2e4. TOTAL TIME \uc740 \ud0dc\uc2a4\ud06c\uc758 \uc0dd\uc131\uc5d0\uc11c\ubd80\ud130 \uc18c\uba78\uae4c\uc9c0\uc758 \ucd1d \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b4\uace0, SELF TIME \uc740 \uc5ed\uc2dc \uac19\uc740 \ubc29\uc2dd\uc758 \ucd1d \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b4\uc9c0\ub9cc \ub0b4\ubd80\uc801\uc73c\ub85c \uc720\ud734(idle) \uc2dc\uac04\uc740 \uc81c\uc678\ub97c \ud55c \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b8\ub2e4. TID \ub294 \ud574\ub2f9 \ud0dc\uc2a4\ud06c\uc758 \uc2a4\ub808\ub4dc \ubc88\ud638\uc778 tid \ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc544\ub798\uc758 \uacb0\uacfc\ub294 uftrace \uac00 record \ud558\ub294 \uc2e4\ud589\uc5d0 \uc790\uccb4\uc5d0 \ub300\ud55c \ub0b4\ubd80\uc801\uc778 \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uacb0\uacfc\uc5d0\uc11c\ub294 uftrace \uac00 t-abc \ud504\ub85c\uc138\uc2a4\ub97c \uc0dd\uc131\ud588\uace0, \ub610\ud55c WriterThread \ub77c\ub294 \uc774\ub984\uc744 \uac16\ub294 \ub2e4\uc218\uc758 \uc2a4\ub808\ub4dc\ub4e4\uc744 \uc0dd\uc131\ud55c \uac83\uc744 \ud655\uc778 \uac00\ub2a5\ud558\ub2e4. $ uftrace record -P. ./uftrace record -d uftrace.data.abc t-abc $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 404.929 ms 321.692 ms [ 4230] : uftrace : | 278.662 us 278.662 us [ 4241] : +----t-abc : | 33.754 ms 4.061 ms [ 4242] : +-WriterThread 27.415 ms 120.992 us [ 4244] : +-WriterThread 27.212 ms 8.119 ms [ 4245] : +-WriterThread 26.754 ms 6.616 ms [ 4248] : +-WriterThread 26.859 ms 8.154 ms [ 4247] : +-WriterThread 26.509 ms 1.645 ms [ 4243] : +-WriterThread 25.320 ms 57.350 us [ 4246] : +-WriterThread 24.757 ms 4.391 ms [ 4249] : +-WriterThread 26.040 ms 3.707 ms [ 4250] : +-WriterThread 24.004 ms 3.999 ms [ 4251] : +-WriterThread \uc704\uc758 \uacb0\uacfc\uc640 \uac19\uc774 \uc2a4\ub808\ub4dc\uc758 \ub4e4\uc5ec\uc4f0\uae30 \uae4a\uc774\ub294 \ud504\ub85c\uc138\uc2a4\uc640\ub294 \ub2e4\ub974\uac8c \ud45c\ud604\ub41c\ub2e4. graph \uba85\ub839\uc744 --srcline \uc635\uc158\uacfc \ud568\uaed8 \uc2e4\ud589\ud55c\ub2e4\uba74 \uc544\ub798\uc640 \uac19\uc774 \ud638\ucd9c \ud568\uc218\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ubcf4\uc5ec\uc900\ub2e4. $ uftrace record --srcline t-abc $ uftrace graph --srcline # Function Call Graph for 't-abc' (session: 60195bac953d8736) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION [SOURCE] 8.909 us : (1) t-abc 1.260 us : +-(1) __monstartup : | 0.179 us : +-(1) __cxa_atexit : | 7.470 us : +-(1) main [tests/s-abc.c:26] 5.522 us : (1) a [tests/s-abc.c:11] 4.912 us : (1) b [tests/s-abc.c:16] 4.176 us : (1) c [tests/s-abc.c:21] 0.794 us : (1) getpid FIELDS uftrace \uc0ac\uc6a9\uc790\ub294 graph \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uc5ec\uae30\uc11c \ud544\ub4dc\ub780 \ucf5c\ub860 \ubb38\uc790 (:) \uc67c\ucabd\uc5d0 \ub098\ud0c0\ub098\ub294 \uc815\ubcf4\ub97c \ub73b\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc804\uccb4\uc2e4\ud589\uc2dc\uac04 total \ub9cc\uc744 \ud544\ub4dc\ub85c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace record tests/t-abc $ uftrace graph -f total,self,addr # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME SELF TIME ADDRESS FUNCTION 10.145 ms 561f652cd610 : (1) t-sort 10.145 ms 39.890 us 561f652cd610 : (1) main 16.773 us 0.734 us 561f652cd7ce : +-(2) foo 16.039 us 16.039 us 561f652cd7a0 : | (6) loop : | 10.088 ms 14.740 us 561f652cd802 : +-(1) bar 10.073 ms 10.073 ms 561f652cd608 : (1) usleep \uac01 \ud544\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\uac00 \uc788\ub2e4. total: \ud568\uc218\uc758 \uc804\uccb4 \uc2e4\ud589 \uc2dc\uac04 self : \uc790\uc2dd \ud568\uc218\ub97c \uc81c\uc678\ud55c \ud568\uc218\uc758 \uc2e4\ud589 \uc2dc\uac04 addr : \ud568\uc218\uc758 \uc8fc\uc18c \uae30\ubcf8\uc801\uc73c\ub85c\ub294 'total' \ud544\ub4dc\uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ud558\uba74 \uae30\ubcf8 \ud544\ub4dc\uc5d0 \ucd94\uac00\ud558\ub294\uac83\uc744 \uc758\ubbf8\ud55c\ub2e4. \ub530\ub77c\uc11c \"-f +addr\" \ub294 \"-f total,addr\" \uc640 \uac19\ub2e4. \ub610\ud55c \ud2b9\ubcc4\ud55c \ud544\ub4dc\uc778 'none' \uc744 \uc0ac\uc6a9\ud558\uba74 \uc544\ubb34\ub7f0 \ud544\ub4dc\ub3c4 \ucd9c\ub825\ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\ub2e4. $ uftrace graph -f none # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== (1) t-sort (1) main +-(2) foo | (6) loop | +-(1) bar (1) usleep \uc774\ub7f0 \ubc29\uc2dd\uc758 \ucd9c\ub825\uc740 diff \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \uac1c\uc758 \uc11c\ub85c \ub2e4\ub978 \uadf8\ub798\ud504 \ucd9c\ub825\uc744 \ube44\uad50\ud560 \ub54c \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\uc5d0 \ub300\ud574\uc11c\ub3c4 \ucd9c\ub825 \ud544\ub4dc\ub97c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8\uc801\uc778 \ud544\ub4dc \uc124\uc815\uc740 total,self,tid \uc774\uc9c0\ub9cc \ud544\ub4dc \uc635\uc158\uc740 \uc544\ub798\uc640 \uac19\uc774 \uc0ac\uc6a9\ub420 \uc218\ub3c4 \uc788\ub2e4. $ uftrace graph --task -f tid,self ========== TASK GRAPH ========== # TID SELF TIME TASK NAME [ 82723] 4.440 ms : gcc : | [ 82734] 90.951 ms : +----cc1 : | [ 82735] 17.150 ms : +----as : | [ 82736] 6.076 ms : +----collect2 : | [ 82737] 38.880 ms : +----ld \uac01 \ud544\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\uac00 \uc788\ub2e4. total: \ud0dc\uc2a4\ud06c\uc758 \uc0dd\uc131\ubd80\ud130 \uc18c\uba78\uae4c\uc9c0\uc758 \ucd1d \uc2dc\uac04 self : \ud0dc\uc2a4\ud06c\uc758 \ucd1d \uc2dc\uac04\uc5d0\uc11c \uc720\ud734(idle) \uc2dc\uac04\uc744 \uc81c\uc678\ud55c \uc2dc\uac04 tid : task id (gettid(2)\ub85c \uc5bb\uc744 \uc218 \uc788\ub2e4.) \ub610\ud55c \ud2b9\ubcc4\ud55c \ud544\ub4dc\uc778 'none' \uc744 \uc0ac\uc6a9\ud558\uba74 \uc67c\ucabd\uc5d0 \uc544\ubb34\ub7f0 \ud544\ub4dc\ub3c4 \ucd9c\ub825\ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\ub2e4. $ uftrace graph --task -f none ========== TASK GRAPH ========== gcc | +----cc1 | +----as | +----collect2 | +----ld \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1) \ubc88\uc5ed\uc790 \uae40\uad00\uc601 gy741.kim@gmail.com , \uac15\ubbfc\ucca0 tegongkang@gmail.com","title":"Uftrace graph"},{"location":"ko/uftrace-graph/#_1","text":"uftrace-graph - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-graph/#_2","text":"uftrace graph [ options ] [ FUNCTION ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-graph/#_3","text":"\uc774 \uba85\ub839\uc5b4\ub294 \ub300\uc0c1 \ubc14\uc774\ub108\ub9ac \ub610\ub294 uftrace \ud615\uc2dd\uc73c\ub85c \uae30\ub85d\ub41c \ub370\uc774\ud130\uc5d0 \uc788\ub294 \ud568\uc218\ub4e4\uc5d0 \ub300\ud55c \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. \ub9cc\uc57d \ud568\uc218 \uc774\ub984\uc744 \uc0dd\ub7b5\ud558\uba74 \uc804\uccb4 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\uac00 \ubcf4\uc5ec\uc9c0\uace0, \ud568\uc218 \uc774\ub984\uc774 \ud558\ub098 \uc8fc\uc5b4\uc9c0\uba74 \ub300\uc0c1 \ud568\uc218\uc5d0 \ub300\ud55c \ubc31\ud2b8\ub808\uc774\uc2a4(backtrace) \ub4e4\uacfc \uadf8 \ud568\uc218\uac00 \ud638\ucd9c\ud558\ub294 \ud568\uc218\ub4e4\uc5d0 \ub300\ud55c \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uacb0\uacfc\uc5d0\uc11c \ubcf4\uc774\ub294 \uac01 \ud568\uc218\ub4e4\uc758 \uc815\ubcf4\uc5d0\ub294 \ud638\ucd9c \ud69f\uc218\uc640 \uadf8 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294\ub370 \uc18c\uc694\ub41c \uc804\uccb4 \uc2dc\uac04\uc774 \ud568\uaed8 \ubcf4\uc5ec\uc9c4\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-graph/#graph","text":"-f FIELD , --output-fields= FIELD : \ucd9c\ub825 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790 \uc9c0\uc815\uc73c\ub85c \uc124\uc815\ud55c\ub2e4. \uc124\uc815 \uac00\ub2a5\ud55c \uac12\uc740 total, self, addr \uc774\uba70 \uc27c\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ud544\ub4dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. 'none' \uacfc \uac19\uc740 \ud2b9\uc218 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc228\uae38 \uc218 \uc788\uc73c\uba70 \uae30\ubcf8 \uc124\uc815\uc740 'total' \uc774\ub2e4. \ud544\ub4dc\uc5d0 \ub300\ud55c \uc0c1\uc138\ud55c \ub0b4\uc6a9\uc740 FIELDS \ub97c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. --task : \uc77c\ubc18\uc801\uc778 \ud568\uc218 \uadf8\ub798\ud504 \ub300\uc2e0 \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. \ucd9c\ub825\ub41c \uac01 \ub178\ub4dc\ub4e4\uc740 \ud504\ub85c\uc138\uc2a4 \ud639\uc740 (\ucd08\ub85d\uc0c9\uc73c\ub85c \ud45c\uae30\ub41c)\uc2a4\ub808\ub4dc\ub97c \ubcf4\uc5ec\uc900\ub2e4. --srcline : \uac00\ub2a5\ud55c \uac01 \ud568\uc218\ub4e4\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4. --format= TYPE : \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud604\uc7ac\ub294 'normal' \uacfc 'html' \ud615\uc2dd\uc774 \uc9c0\uc6d0\ub41c\ub2e4.","title":"GRAPH \uc635\uc158"},{"location":"ko/uftrace-graph/#_4","text":"-F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.","title":"\uacf5\ud1b5 \uc635\uc158"},{"location":"ko/uftrace-graph/#_5","text":"-H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"\uacf5\ud1b5 \ubd84\uc11d \uc635\uc158"},{"location":"ko/uftrace-graph/#_6","text":"\uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uacb0\uacfc\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace record loop $ uftrace replay # DURATION TID FUNCTION [24447] | main() { [24447] | foo() { 8.134 us [24447] | loop(); 7.296 us [24447] | loop(); 7.234 us [24447] | loop(); 24.324 us [24447] | } /* foo */ [24447] | foo() { 7.234 us [24447] | loop(); 7.231 us [24447] | loop(); 7.231 us [24447] | loop(); 22.302 us [24447] | } /* foo */ [24447] | bar() { 10.100 ms [24447] | usleep(); 10.138 ms [24447] | } /* bar */ 10.293 ms [24447] | } /* main */ graph \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace graph # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) ========== FUNCTION CALL GRAPH ========== 10.293 ms : (1) loop 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep \uac00\uc7a5 \ucd5c\uc0c1\ub2e8\uc5d0 \uc788\ub294 \ub178\ub4dc\ub294 \uc2e4\uc81c \ud568\uc218\uac00 \uc544\ub2c8\ub77c \uc2e4\ud589 \uc774\ubbf8\uc9c0\uc758 \uc774\ub984\uc744 \ub098\ud0c0\ub0b8\ub2e4. \uc67c\ucabd\uc5d0 \uc788\ub294 \uc2dc\uac04\uc740 \uc624\ub978\ucabd\uc5d0 \uc788\ub294 \ud568\uc218\uc758 \ucd1d \uc2e4\ud589 \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b8\ub2e4. \ud568\uc218 \uc774\ub984 \uc55e\uc758 \uad04\ud638 \uc548\uc758 \uc22b\uc790\ub294 \ud638\ucd9c \ud69f\uc218\ub97c \uc758\ubbf8\ud55c\ub2e4. \uc704\uc5d0\uc11c main \ud568\uc218\ub294 \ub2e8 \ud55c\ubc88 \ud638\ucd9c\ub418\uc5b4 \uc57d 10 \ubc00\ub9ac\ucd08(msec) \ub3d9\uc548 \uc2e4\ud589\ub418\uc5c8\uace0, foo \ud568\uc218\ub294 \ub450\ubc88 \ud638\ucd9c\ub41c \ub2e4\uc74c \uadf8 \uc548\uc5d0\uc11c loop \ud568\uc218\ub97c \ucd1d 6 \ubc88 \ud638\ucd9c \ud558\uc600\ub2e4. \ub610\ud55c, main \ud568\uc218\ub294 bar \ud568\uc218\ub97c \ud55c\ubc88 \ud638\ucd9c\ud558\uace0, bar \ud568\uc218\ub294 \ub2e4\uc2dc usleep \ud568\uc218\ub97c \ud638\ucd9c\ud55c \uac83\uc744 \uc54c \uc218 \uc788\ub2e4. \uc774\ub7ec\ud55c \ubd84\uc11d \uacb0\uacfc\ub97c \ud1b5\ud574 usleep \ud568\uc218\ub294 main \ud568\uc218\uc5d0\uc11c \uc9c1\uc811 \ud638\ucd9c \ub41c\uac83\uc774 \uc544\ub2d8\uc744 \uc54c \uc218 \uc788\ub2e4. graph \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uace0 main \ud568\uc218\uba85\uc744 \uc9c0\uc815\ud558\uba74 \uc544\ub798\uc640 \uac19\uc774 \ud574\ub2f9 \ud568\uc218\uc758 \ud638\ucd9c \uadf8\ub798\ud504\uc640 \ud568\uaed8 \ubc31\ud2b8\ub808\uc774\uc2a4 \uc815\ubcf4\ub97c \uac19\uc774 \ubcf4\uc5ec\uc900\ub2e4. $ uftrace graph main # Function Call Graph for 'main' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 1, time 10.293 ms [0] main (0x4004f0) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 10.293 ms : (1) main 46.626 us : +-(2) foo 44.360 us : | (6) loop : | 10.138 ms : +-(1) bar 10.100 ms : (1) usleep 'main' \ud568\uc218\ub294 \ucd5c\uc0c1\uc704 \ud568\uc218\uc774\ubbc0\ub85c \ubc31\ud2b8\ub808\uc774\uc2a4 \uacb0\uacfc\uac00 \uc5c6\uc9c0\ub9cc loop \ud568\uc218\ub97c \uc9c0\uc815\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \uacb0\uacfc\ub97c \ubcfc \uc218 \uc788\ub2e4. $ uftrace graph loop # Function Call Graph for 'loop' (session: 073f1e84aa8b09d3) =============== BACKTRACE =============== backtrace #0: hit 6, time 44.360 us [0] main (0x4004b0) [1] foo (0x400622) [2] loop (0x400f5f6) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION 44.360 us : (6) loop \uc774 \ubc31\ud2b8\ub808\uc774\uc2a4 \uacb0\uacfc\uc5d0\uc11c loop \ud568\uc218\ub294 foo \ud568\uc218\uc5d0\uc11c \ud638\ucd9c\ub418\uc5c8\uace0 \ub2e4\uc2dc foo \ud568\uc218\ub294 main \ud568\uc218\uc5d0\uc11c \ud638\ucd9c\ub41c\uac83\uc744 \uc54c \uc218 \uc788\ub2e4. loop \ud568\uc218\ub294 \ub2e4\ub978 \ud568\uc218\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uacbd\uc6b0\uc5d0 loop \ud568\uc218\ub294 \ub2e8 \ud558\ub098\uc758 \uacbd\ub85c\ub97c \ud1b5\ud574\uc11c\ub9cc \ud638\ucd9c\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 backtrace #0 \uc758 \ud638\ucd9c \ud69f\uc218\ub294 6 \uc774\ub41c\ub2e4. graph \uba85\ub839\uc5b4\ub294 \ud568\uc218 \ub2e8\uc704\uc758 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc8fc\uc9c0\ub9cc, --task \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc5b4\ub5bb\uac8c \ud504\ub85c\uc138\uc2a4\uc640 \uc2a4\ub808\ub4dc\ub4e4\uc774 \uc0dd\uc131\ub418\uc5c8\ub294\uc9c0\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ud0dc\uc2a4\ud06c \ub2e8\uc704 \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uba74, GCC \ucef4\ud30c\uc77c\ub7ec\uc758 \uc2e4\ud589\uc5d0 \ub300\ud55c \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. $ uftrace record --force /usr/bin/gcc hello.c $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 159.854 ms 4.440 ms [ 82723] : gcc : | 90.951 ms 90.951 ms [ 82734] : +----cc1 : | 17.150 ms 17.150 ms [ 82735] : +----as : | 45.183 ms 6.076 ms [ 82736] : +----collect2 : | 38.880 ms 38.880 ms [ 82737] : +----ld \uc704\uc758 \ucd9c\ub825 \uacb0\uacfc\uc5d0\uc11c \ubcf4\uc774\ub294 \uac83\uacfc \uac19\uc774 gcc \ub294 cc1 , as \uadf8\ub9ac\uace0 collect2 \ud504\ub85c\uc138\uc2a4\ub97c \uc0dd\uc131\ud558\uc600\uace0, collect2 \ub294 \ub0b4\ubd80\uc801\uc73c\ub85c ld \ud504\ub85c\uc138\uc2a4\ub97c \uc0dd\uc131\ud55c \uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\ub2e4. TOTAL TIME \uc740 \ud0dc\uc2a4\ud06c\uc758 \uc0dd\uc131\uc5d0\uc11c\ubd80\ud130 \uc18c\uba78\uae4c\uc9c0\uc758 \ucd1d \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b4\uace0, SELF TIME \uc740 \uc5ed\uc2dc \uac19\uc740 \ubc29\uc2dd\uc758 \ucd1d \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b4\uc9c0\ub9cc \ub0b4\ubd80\uc801\uc73c\ub85c \uc720\ud734(idle) \uc2dc\uac04\uc740 \uc81c\uc678\ub97c \ud55c \uc2dc\uac04\uc744 \ub098\ud0c0\ub0b8\ub2e4. TID \ub294 \ud574\ub2f9 \ud0dc\uc2a4\ud06c\uc758 \uc2a4\ub808\ub4dc \ubc88\ud638\uc778 tid \ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc544\ub798\uc758 \uacb0\uacfc\ub294 uftrace \uac00 record \ud558\ub294 \uc2e4\ud589\uc5d0 \uc790\uccb4\uc5d0 \ub300\ud55c \ub0b4\ubd80\uc801\uc778 \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uacb0\uacfc\uc5d0\uc11c\ub294 uftrace \uac00 t-abc \ud504\ub85c\uc138\uc2a4\ub97c \uc0dd\uc131\ud588\uace0, \ub610\ud55c WriterThread \ub77c\ub294 \uc774\ub984\uc744 \uac16\ub294 \ub2e4\uc218\uc758 \uc2a4\ub808\ub4dc\ub4e4\uc744 \uc0dd\uc131\ud55c \uac83\uc744 \ud655\uc778 \uac00\ub2a5\ud558\ub2e4. $ uftrace record -P. ./uftrace record -d uftrace.data.abc t-abc $ uftrace graph --task ========== TASK GRAPH ========== # TOTAL TIME SELF TIME TID TASK NAME 404.929 ms 321.692 ms [ 4230] : uftrace : | 278.662 us 278.662 us [ 4241] : +----t-abc : | 33.754 ms 4.061 ms [ 4242] : +-WriterThread 27.415 ms 120.992 us [ 4244] : +-WriterThread 27.212 ms 8.119 ms [ 4245] : +-WriterThread 26.754 ms 6.616 ms [ 4248] : +-WriterThread 26.859 ms 8.154 ms [ 4247] : +-WriterThread 26.509 ms 1.645 ms [ 4243] : +-WriterThread 25.320 ms 57.350 us [ 4246] : +-WriterThread 24.757 ms 4.391 ms [ 4249] : +-WriterThread 26.040 ms 3.707 ms [ 4250] : +-WriterThread 24.004 ms 3.999 ms [ 4251] : +-WriterThread \uc704\uc758 \uacb0\uacfc\uc640 \uac19\uc774 \uc2a4\ub808\ub4dc\uc758 \ub4e4\uc5ec\uc4f0\uae30 \uae4a\uc774\ub294 \ud504\ub85c\uc138\uc2a4\uc640\ub294 \ub2e4\ub974\uac8c \ud45c\ud604\ub41c\ub2e4. graph \uba85\ub839\uc744 --srcline \uc635\uc158\uacfc \ud568\uaed8 \uc2e4\ud589\ud55c\ub2e4\uba74 \uc544\ub798\uc640 \uac19\uc774 \ud638\ucd9c \ud568\uc218\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ubcf4\uc5ec\uc900\ub2e4. $ uftrace record --srcline t-abc $ uftrace graph --srcline # Function Call Graph for 't-abc' (session: 60195bac953d8736) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME FUNCTION [SOURCE] 8.909 us : (1) t-abc 1.260 us : +-(1) __monstartup : | 0.179 us : +-(1) __cxa_atexit : | 7.470 us : +-(1) main [tests/s-abc.c:26] 5.522 us : (1) a [tests/s-abc.c:11] 4.912 us : (1) b [tests/s-abc.c:16] 4.176 us : (1) c [tests/s-abc.c:21] 0.794 us : (1) getpid","title":"\uc608\uc81c"},{"location":"ko/uftrace-graph/#fields","text":"uftrace \uc0ac\uc6a9\uc790\ub294 graph \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uc5ec\uae30\uc11c \ud544\ub4dc\ub780 \ucf5c\ub860 \ubb38\uc790 (:) \uc67c\ucabd\uc5d0 \ub098\ud0c0\ub098\ub294 \uc815\ubcf4\ub97c \ub73b\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc804\uccb4\uc2e4\ud589\uc2dc\uac04 total \ub9cc\uc744 \ud544\ub4dc\ub85c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace record tests/t-abc $ uftrace graph -f total,self,addr # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== # TOTAL TIME SELF TIME ADDRESS FUNCTION 10.145 ms 561f652cd610 : (1) t-sort 10.145 ms 39.890 us 561f652cd610 : (1) main 16.773 us 0.734 us 561f652cd7ce : +-(2) foo 16.039 us 16.039 us 561f652cd7a0 : | (6) loop : | 10.088 ms 14.740 us 561f652cd802 : +-(1) bar 10.073 ms 10.073 ms 561f652cd608 : (1) usleep \uac01 \ud544\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\uac00 \uc788\ub2e4. total: \ud568\uc218\uc758 \uc804\uccb4 \uc2e4\ud589 \uc2dc\uac04 self : \uc790\uc2dd \ud568\uc218\ub97c \uc81c\uc678\ud55c \ud568\uc218\uc758 \uc2e4\ud589 \uc2dc\uac04 addr : \ud568\uc218\uc758 \uc8fc\uc18c \uae30\ubcf8\uc801\uc73c\ub85c\ub294 'total' \ud544\ub4dc\uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ud558\uba74 \uae30\ubcf8 \ud544\ub4dc\uc5d0 \ucd94\uac00\ud558\ub294\uac83\uc744 \uc758\ubbf8\ud55c\ub2e4. \ub530\ub77c\uc11c \"-f +addr\" \ub294 \"-f total,addr\" \uc640 \uac19\ub2e4. \ub610\ud55c \ud2b9\ubcc4\ud55c \ud544\ub4dc\uc778 'none' \uc744 \uc0ac\uc6a9\ud558\uba74 \uc544\ubb34\ub7f0 \ud544\ub4dc\ub3c4 \ucd9c\ub825\ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\ub2e4. $ uftrace graph -f none # Function Call Graph for 't-sort' (session: b007f4b7cf792878) ========== FUNCTION CALL GRAPH ========== (1) t-sort (1) main +-(2) foo | (6) loop | +-(1) bar (1) usleep \uc774\ub7f0 \ubc29\uc2dd\uc758 \ucd9c\ub825\uc740 diff \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \uac1c\uc758 \uc11c\ub85c \ub2e4\ub978 \uadf8\ub798\ud504 \ucd9c\ub825\uc744 \ube44\uad50\ud560 \ub54c \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\uc5d0 \ub300\ud574\uc11c\ub3c4 \ucd9c\ub825 \ud544\ub4dc\ub97c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8\uc801\uc778 \ud544\ub4dc \uc124\uc815\uc740 total,self,tid \uc774\uc9c0\ub9cc \ud544\ub4dc \uc635\uc158\uc740 \uc544\ub798\uc640 \uac19\uc774 \uc0ac\uc6a9\ub420 \uc218\ub3c4 \uc788\ub2e4. $ uftrace graph --task -f tid,self ========== TASK GRAPH ========== # TID SELF TIME TASK NAME [ 82723] 4.440 ms : gcc : | [ 82734] 90.951 ms : +----cc1 : | [ 82735] 17.150 ms : +----as : | [ 82736] 6.076 ms : +----collect2 : | [ 82737] 38.880 ms : +----ld \uac01 \ud544\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\uac00 \uc788\ub2e4. total: \ud0dc\uc2a4\ud06c\uc758 \uc0dd\uc131\ubd80\ud130 \uc18c\uba78\uae4c\uc9c0\uc758 \ucd1d \uc2dc\uac04 self : \ud0dc\uc2a4\ud06c\uc758 \ucd1d \uc2dc\uac04\uc5d0\uc11c \uc720\ud734(idle) \uc2dc\uac04\uc744 \uc81c\uc678\ud55c \uc2dc\uac04 tid : task id (gettid(2)\ub85c \uc5bb\uc744 \uc218 \uc788\ub2e4.) \ub610\ud55c \ud2b9\ubcc4\ud55c \ud544\ub4dc\uc778 'none' \uc744 \uc0ac\uc6a9\ud558\uba74 \uc67c\ucabd\uc5d0 \uc544\ubb34\ub7f0 \ud544\ub4dc\ub3c4 \ucd9c\ub825\ud558\uc9c0 \uc54a\uac8c \ud560 \uc218 \uc788\ub2e4. $ uftrace graph --task -f none ========== TASK GRAPH ========== gcc | +----cc1 | +----as | +----collect2 | +----ld","title":"FIELDS"},{"location":"ko/uftrace-graph/#_7","text":"uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-graph/#_8","text":"\uae40\uad00\uc601 gy741.kim@gmail.com , \uac15\ubbfc\ucca0 tegongkang@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-info/","text":"% UFTRACE-INFO(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-info - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace info [ options ] [ COMMAND ] \uc124\uba85 \uc774 \uba85\ub839\uc5b4\ub294 \uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130 \ud30c\uc77c\uc758 \ud5e4\ub354\uc5d0 \uae30\ub85d\ub41c \uba54\ud0c0 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc635\uc158 --symbols : \uae30\ub85d\ub41c \uc815\ubcf4 \ub300\uc2e0\uc5d0 \uc2ec\ubcfc(symbol) \ud14c\uc774\ube14\uc744 \ucd9c\ub825\ud55c\ub2e4. \uc2ec\ubcfc \uc815\ubcf4\ub294 \uc77c\ubc18 \uc2ec\ubcfc\ub4e4\uacfc \ub3d9\uc801 \uc2ec\ubcfc\ub4e4\ub85c \ubd84\ub958\ub418\ub294\ub370 \uc77c\ubc18 \uc2ec\ubcfc\ub4e4\uc740 \uc2e4\ud589 \uc774\ubbf8\uc9c0\uc5d0 \uc788\ub294 \uc815\ubcf4\uc774\uace0, \ub3d9\uc801 \uc2ec\ubcfc\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \uc704\ud574 \uc0ac\uc6a9\ub41c\ub2e4. COMMAND \uac00 \uc8fc\uc5b4\uc9c0\uba74 \uc2e4\ud589 \uc774\ubbf8\uc9c0\ub85c\ubd80\ud130 \uc2ec\ubcfc \uc815\ubcf4\ub97c \ucd94\ucd9c\ud574\uc11c \ucd9c\ub825\ud55c\ub2e4. --task : \ub370\uc774\ud130 \uc815\ubcf4 \ub300\uc2e0 \ud0dc\uc2a4\ud06c\uc758 \uad00\uacc4\ub97c \ud2b8\ub9ac \ud615\ud0dc\ub85c \ucd9c\ub825\ud55c\ub2e4. \uc608\uc2dc \uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace record abc $ uftrace info # system information # ================== # program version : v0.9 ( dwarf python tui perf sched ) # recorded on : Wed Sep 19 17:30:39 2018 # cmdline : uftrace record abc # cpu info : Intel(R) Core(TM) i7-3930K CPU @ 3.20GHz # number of cpus : 12 / 12 (online / possible) # memory info : 19.8 / 23.5 GB (free / total) # system load : 0.02 / 0.07 / 0.11 (1 / 5 / 15 min) # kernel version : Linux 4.5.4-1-ARCH # hostname : sejong # distro : \"Arch Linux\" # # process information # =================== # number of tasks : 1 # task list : 8284(abc) # exe image : /home/namhyung/tmp/abc # build id : a3c50d25f7dd98dab68e94ef0f215edb06e98434 # pattern : regex # exit status : exited with code: 0 # elapsed time : 0.003219479 sec # cpu time : 0.003 / 0.000 sec (sys / user) # context switch : 1 / 1 (voluntary / involuntary) # max rss : 3104 KB # page fault : 0 / 169 (major / minor) # disk iops : 0 / 24 (read / write) '--symbols' \uc635\uc158\uc744 \uc0ac\uc6a9\ud574\uc11c \uc2ec\ubcfc \ud14c\uc774\ube14\uc744 \ubcfc \uc218 \uc788\ub2e4. $ uftrace info --symbols Normal symbols ============== [ 0] _start (0x400590) size: 42 [ 1] __gmon_start__ (0x4005c0) size: 59 [ 2] a (0x4006c6) size: 19 [ 3] b (0x4006d9) size: 19 [ 4] c (0x4006ec) size: 49 [ 5] main (0x40071d) size: 19 [ 6] __libc_csu_init (0x400730) size: 101 [ 7] __libc_csu_fini (0x4007a0) size: 2 [ 8] atexit (0x4007b0) size: 41 Dynamic symbols =============== [ 0] getpid (0x400530) size: 16 [ 1] _mcleanup (0x400540) size: 16 [ 2] __libc_start_main (0x400550) size: 16 [ 3] __monstartup (0x400560) size: 16 [ 4] mcount (0x400570) size: 16 [ 5] __cxa_atexit (0x400580) size: 16 --task \uc635\uc158\uc740 \ud0dc\uc2a4\ud06c\ub4e4\uc758 \uacc4\uce35 \uad00\uacc4\ub97c \ubcf4\uc5ec\uc900\ub2e4. $ uftrace info --task [166399] parent [166401] child \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-record (1), uftrace-tui (1) \ubc88\uc5ed\uc790 \uc870\uc815\uc6b0 jungwoo5759@gmail.com","title":"Uftrace info"},{"location":"ko/uftrace-info/#_1","text":"uftrace-info - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-info/#_2","text":"uftrace info [ options ] [ COMMAND ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-info/#_3","text":"\uc774 \uba85\ub839\uc5b4\ub294 \uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130 \ud30c\uc77c\uc758 \ud5e4\ub354\uc5d0 \uae30\ub85d\ub41c \uba54\ud0c0 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud55c\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-info/#_4","text":"--symbols : \uae30\ub85d\ub41c \uc815\ubcf4 \ub300\uc2e0\uc5d0 \uc2ec\ubcfc(symbol) \ud14c\uc774\ube14\uc744 \ucd9c\ub825\ud55c\ub2e4. \uc2ec\ubcfc \uc815\ubcf4\ub294 \uc77c\ubc18 \uc2ec\ubcfc\ub4e4\uacfc \ub3d9\uc801 \uc2ec\ubcfc\ub4e4\ub85c \ubd84\ub958\ub418\ub294\ub370 \uc77c\ubc18 \uc2ec\ubcfc\ub4e4\uc740 \uc2e4\ud589 \uc774\ubbf8\uc9c0\uc5d0 \uc788\ub294 \uc815\ubcf4\uc774\uace0, \ub3d9\uc801 \uc2ec\ubcfc\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \uc704\ud574 \uc0ac\uc6a9\ub41c\ub2e4. COMMAND \uac00 \uc8fc\uc5b4\uc9c0\uba74 \uc2e4\ud589 \uc774\ubbf8\uc9c0\ub85c\ubd80\ud130 \uc2ec\ubcfc \uc815\ubcf4\ub97c \ucd94\ucd9c\ud574\uc11c \ucd9c\ub825\ud55c\ub2e4. --task : \ub370\uc774\ud130 \uc815\ubcf4 \ub300\uc2e0 \ud0dc\uc2a4\ud06c\uc758 \uad00\uacc4\ub97c \ud2b8\ub9ac \ud615\ud0dc\ub85c \ucd9c\ub825\ud55c\ub2e4.","title":"\uc635\uc158"},{"location":"ko/uftrace-info/#_5","text":"\uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. $ uftrace record abc $ uftrace info # system information # ================== # program version : v0.9 ( dwarf python tui perf sched ) # recorded on : Wed Sep 19 17:30:39 2018 # cmdline : uftrace record abc # cpu info : Intel(R) Core(TM) i7-3930K CPU @ 3.20GHz # number of cpus : 12 / 12 (online / possible) # memory info : 19.8 / 23.5 GB (free / total) # system load : 0.02 / 0.07 / 0.11 (1 / 5 / 15 min) # kernel version : Linux 4.5.4-1-ARCH # hostname : sejong # distro : \"Arch Linux\" # # process information # =================== # number of tasks : 1 # task list : 8284(abc) # exe image : /home/namhyung/tmp/abc # build id : a3c50d25f7dd98dab68e94ef0f215edb06e98434 # pattern : regex # exit status : exited with code: 0 # elapsed time : 0.003219479 sec # cpu time : 0.003 / 0.000 sec (sys / user) # context switch : 1 / 1 (voluntary / involuntary) # max rss : 3104 KB # page fault : 0 / 169 (major / minor) # disk iops : 0 / 24 (read / write) '--symbols' \uc635\uc158\uc744 \uc0ac\uc6a9\ud574\uc11c \uc2ec\ubcfc \ud14c\uc774\ube14\uc744 \ubcfc \uc218 \uc788\ub2e4. $ uftrace info --symbols Normal symbols ============== [ 0] _start (0x400590) size: 42 [ 1] __gmon_start__ (0x4005c0) size: 59 [ 2] a (0x4006c6) size: 19 [ 3] b (0x4006d9) size: 19 [ 4] c (0x4006ec) size: 49 [ 5] main (0x40071d) size: 19 [ 6] __libc_csu_init (0x400730) size: 101 [ 7] __libc_csu_fini (0x4007a0) size: 2 [ 8] atexit (0x4007b0) size: 41 Dynamic symbols =============== [ 0] getpid (0x400530) size: 16 [ 1] _mcleanup (0x400540) size: 16 [ 2] __libc_start_main (0x400550) size: 16 [ 3] __monstartup (0x400560) size: 16 [ 4] mcount (0x400570) size: 16 [ 5] __cxa_atexit (0x400580) size: 16 --task \uc635\uc158\uc740 \ud0dc\uc2a4\ud06c\ub4e4\uc758 \uacc4\uce35 \uad00\uacc4\ub97c \ubcf4\uc5ec\uc900\ub2e4. $ uftrace info --task [166399] parent [166401] child","title":"\uc608\uc2dc"},{"location":"ko/uftrace-info/#_6","text":"uftrace (1), uftrace-record (1), uftrace-tui (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-info/#_7","text":"\uc870\uc815\uc6b0 jungwoo5759@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-live/","text":"% UFTRACE-LIVE(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-live - \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud558\uace0 \ucd9c\ub825\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace [live] [ options ] COMMAND [ command-options ] \uc124\uba85 \uc774 \uba85\ub839\uc5b4\ub294 COMMAND \ub85c \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\uace0 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud558\uace0 \uc2e4\ud589\uc2dc\uac04 \ub4f1\uc758 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774\ub294 \uae30\ubcf8\uc801\uc73c\ub85c uftrace record \uc640 uftrace replay \ub97c \ucc28\ub840\ub85c \uc2e4\ud589\ud558\ub294 \uac83\uacfc \uac19\uc9c0\ub9cc, \ub370\uc774\ud130 \ud30c\uc77c\uc744 \uc800\uc7a5\ud558\uc9c0\ub294 \uc54a\ub294\ub2e4. \uc774 \uba85\ub839\uc5b4\ub294 record \uc640 replay \uba85\ub839\uc5b4\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ub300\ubd80\ubd84\uc758 \uc778\uc790\ub4e4\uc744 \ubc1b\ub294\ub2e4. \uacf5\ud1b5 \uc635\uc158 -F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \uc744 \ucc38\uace0\ud55c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --event \ub97c \ud1b5\ud55c \uba85\uc2dc\uc801\uc778 \uc774\ubca4\ud2b8 \uae30\ub85d \ubc29\uc2dd\uc5d0\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --disable : uftrace \ub97c \uc2dc\uc791\ud560\ub54c \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\uace0 \uc2dc\uc791\ud55c\ub2e4. \uc774\uac83\uc740 trace_on \ud2b8\ub9ac\uac70\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. LIVE \uc635\uc158 --list-event : \uc2e4\ud589\uc911\uc5d0 \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. --report : replay \ucd9c\ub825 \uc804 live-report \ub97c \ud568\uaed8 \ucd9c\ub825\ud55c\ub2e4. --record : \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ud5a5\ud6c4 \ubd84\uc11d\uc744 \uc704\ud574 \uc800\uc7a5\ud55c\ub2e4. RECORD \uc635\uc158 -A SPEC , --argument= SPEC : \ud568\uc218\uc758 \uc778\uc790\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uc778\uc790\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -R SPEC , --retval= SPEC : \ud568\uc218\ub4e4\uc758 \ubc18\ud658\uac12\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ubc18\ud658\uac12\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -P FUNC , --patch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub97c \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud558\uc5ec \ucd94\uc801\ud558\uace0 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -U FUNC , --unpatch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\uc5d0 \ub300\ud574 \ub3d9\uc801 \ud328\uce58\ub97c \uc801\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \ud070 \ud568\uc218\ub4e4\uc744 \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud55c\ub2e4. \ub3d9\uc801\ucd94\uc801\uc5d0 \ub300\ud574\uc11c\ub294 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -E EVENT , --event= EVENT : \uc774\ubca4\ud2b8 \ucd94\uc801\uc744 \ud65c\uc131\ud654\ud55c\ub2e4. \uc2dc\uc2a4\ud15c \ub0b4\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\uc5ec\uc57c \ud55c\ub2e4. -S SCRIPT_PATH , --script= SCRIPT_PATH : \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc8fc\uc5b4\uc9c4 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ud65c\uc6a9\ud574\uc11c \ucd94\uac00\uc801\uc778 \uc791\uc5c5\uc744 \ud55c\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc5b8\uc5b4 \uc885\ub958\ub294 \ud30c\uc77c\uc758 \ud655\uc7a5\uc790\ub97c \ud1b5\ud574 \uc815\ud574\uc9c0\ub294\ub370 \ud30c\uc774\uc36c\uc758 \uacbd\uc6b0 \".py\" \uc774\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589 \uc124\uba85\uc740 SCRIPT EXECUTION \uc744 \ucc38\uace0\ud55c\ub2e4. -W, --watch= POINT : \ud2b9\uc815\ud55c \uac12\uc774 \ubcc0\uacbd\ub418\uc5c8\uc744 \uacbd\uc6b0 \uc774\ub97c \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud574 watch point \ub97c \ucd94\uac00\ud55c\ub2e4. \uc790\uc138\ud55c \uc0ac\ud56d\uc740 WATCH POINT \ub97c \ucc38\uace0\ud55c\ub2e4. -a, --auto-args : \uc54c\ub824\uc9c4 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\ub4e4\uc744 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ud55c\ub2e4. \ubcf4\ud1b5\uc758 \uacbd\uc6b0 C \uc5b8\uc5b4 \ub610\ub294 \uc2dc\uc2a4\ud15c\uc758 \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc5d0 \ud574\ub2f9\ud558\uc9c0\ub9cc, \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\ub3c4 \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. -l, --nest-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4 \uac04\uc758 \ud568\uc218 \ud638\ucd9c\ub3c4 \ud568\uaed8 \uae30\ub85d\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c uftrace \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \uc9c1\uc811 \ud638\ucd9c\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. -k, --kernel : \uc0ac\uc6a9\uc790 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218\uc640 \ud568\uaed8 \ucee4\ub110 \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \ucee4\ub110\ub85c\uc758 \uc9c4\uc785 \ubc0f \ubcf5\uadc0 \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. \uc774\ub97c \ubcc0\uacbd\ud558\ub824\uba74 --kernel-depth \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. -K DEPTH , --kernel-depth= DEPTH : \ucee4\ub110 \ucd5c\ub300 \ud568\uc218 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. --kernel \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. --clock= CLOCK : \ud0c0\uc784\uc2a4\ud0ec\ud504\ub97c \uc77d\ub294 \ud074\ub7ed \uc18c\uc2a4\ub97c \uc124\uc815\ud55c\ub2e4. CLOCK \uc740 'mono', 'mono_raw', 'boot' \uc911\uc758 \ud558\ub098\ub85c \uc124\uc815 \uac00\ub2a5\ud558\uace0, \uae30\ubcf8 \uc124\uc815\uc740 'mono' \uc774\ub2e4. --signal= TRG : \ud568\uc218\uac00 \uc544\ub2cc \uc120\ud0dd\ud55c \uc2dc\uadf8\ub110\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc81c\ud55c \uc0ac\ud56d\ub4e4\ub85c \uc778\ud558\uc5ec \uc18c\uc218 \ud2b8\ub9ac\uac70 \uae30\ub2a5\ub9cc\uc744 \uc9c0\uc6d0\ud558\uace0 \uc788\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc791\uc5c5: : trace_on, trace_off, finish. \uc774 \uc635\uc158\uc740 \ub450\ubc88 \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70 \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. --nop : \uc5b4\ub5a4 \ud568\uc218\ub3c4 record \ud558\uac70\ub098 replay\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774\ub294 \uc544\ubb34 \uc77c\ub3c4 \ud558\uc9c0 \uc54a\ub294 \uba85\ub839\uc5b4\ub85c, \uc131\ub2a5 \ube44\uad50\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --force : \uc57d\uac04\uc758 \ubb38\uc81c\uac00 \uc788\uc5b4\ub3c4 uftrace \uac00 \uc2e4\ud589\ub41c\ub2e4. uftrace record \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \ucef4\ud30c\uc77c\ub7ec\uc5d0 \uc758\ud574 \uc0dd\uc131\ub418\ub294 mcount \ub97c \ucc3e\uc744 \uc218 \uc5c6\uc744 \ub54c uftrace \uac00 \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc624\ub958 \uba54\uc2dc\uc9c0\uc640 \ud568\uaed8 \uc885\ub8cc\ub41c\ub2e4. \ub2e8, \uc0ac\uc6a9\uc790\ub294 \ub3d9\uc801\uc73c\ub85c \uc5f0\uacb0\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ub0b4\uc758 \uae30\ub2a5\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uc744 \uc218 \uc788\uc73c\uba70, \uc774 \uacbd\uc6b0 --force \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec uftrace \ub97c \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc788\ub2e4. \ub610\ud55c -A / --argument \ubc0f -R / --retval \uc635\uc158\uc740 -pg \ub85c \ucef4\ud30c\uc77c\ub41c \ubc14\uc774\ub108\ub9ac\uc5d0 \ub300\ud574\uc11c\ub9cc \uc791\ub3d9\ud558\ubbc0\ub85c, uftrace \ub294 \uadf8 \uc635\uc158 \uc5c6\uc774 \ube4c\ub4dc\ub41c \ubc14\uc774\ub108\ub9ac\ub97c \uc2e4\ud589\ud558\ub824\uace0 \ud560 \ub54c\uc5d0\ub3c4 \uc885\ub8cc\ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \uacbd\uace0\ub97c \ubb34\uc2dc\ud558\uace0 \uc778\uc218 \ubc0f \ubc18\ud658 \uac12 \uc5c6\uc774 uftrace \ub97c \uc2e4\ud589\uc2dc\ud0a4\ub3c4\ub85d \ud55c\ub2e4. --time : time(1) \uc2a4\ud0c0\uc77c\ub85c \uc2e4\ud589\uc2dc\uac04\uc744 \ucd9c\ub825\ud55c\ub2e4. -e, --estimate-return : \uac01 \ud568\uc218\uc758 \uc9c4\uc785 \ub370\uc774\ud130\ub9cc\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2a4\ud0dd\uc744 \ub2e4\ub8f0 \uacbd\uc6b0 \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace\ub294 \ud568\uc218\uc758 \ubc18\ud658\uac12\uc744 \ud6c4\ud0b9\ud558\uae30 \uc704\ud574 \uc791\uc5c5 \ub300\uc0c1\uc758 \uc2e4\ud589 \uc2a4\ud0dd \ud504\ub808\uc784\uc744 \uc218\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ub54c\ub54c\ub85c \ubb38\uc81c\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uace0 \ubaa8\ub4e0 \uacbd\uc6b0\ub97c \ub2e4\ub8e8\uae30 \uc5b4\ub835\ub2e4. \uc774 \uc635\uc158\uc740 uftrace\uac00 \ub9ac\ud134 \uc8fc\uc18c\ub97c \ud6c4\ud0b9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc5ec \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \uc608\ubc29\ud55c\ub2e4. \ubc18\ud658\ub41c \uc2dc\uac04\uc740 \uc5f0\uc18d\ub41c \ub450 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \uc2dc\uac04\uc758 \uc808\ubc18\uc73c\ub85c \uc608\uce21\ub41c\ub2e4. RECORD \uc124\uc815 \uc635\uc158 --libmcount-path= PATH : limcount \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c PATH \uc5d0\uc11c \uba3c\uc800 \ucc3e\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\ubd80\ubd84 \ud14c\uc2a4\ud2b8 \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub41c\ub2e4. -b SIZE , --buffer= SIZE : \uc800\uc7a5\ud560 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8 \uc0ac\uc774\uc988\ub294 128k \uc774\ub2e4. --kernel-buffer= SIZE : \uc800\uc7a5\ud560 \ucee4\ub110 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \ucee4\ub110 \ub0b4\ubd80\uc758 \uae30\ubcf8 \uc124\uc815\uc740 1408k \uc774\ub2e4. --no-pltbind : \ub3d9\uc801 \uc2ec\ubcfc \uc8fc\uc18c\ub97c \ubc14\uc778\ub529\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 LD_BIND_NOT \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc2dc\uc801\uc73c\ub85c \ubc1c\uc0dd\ud558\ub294 (\uccab \ubc88\uc9f8) \uc811\uadfc\uc73c\ub85c \uc778\ud574 \ub204\ub77d\ub420 \uc218 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. --no-libcall \uc635\uc158\uacfc \ud568\uaed8 \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc758\ubbf8\uac00 \uc5c6\ub2e4. --max-stack= DEPTH : \ub0b4\ubd80\uc801\uc73c\ub85c \uae30\ub85d\ud558\ub294 \ud568\uc218 \ud638\ucd9c \uc2a4\ud0dd\uc758 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 1024 \uc774\ub2e4. --num-thread= NUM : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 NUM \uac1c\uc758 \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 1/4 \uc73c\ub85c \uc124\uc815\ud55c\ub2e4. (\ud558\uc9c0\ub9cc \ucee4\ub110\uc744 \ud3ec\ud568\ud574 \uc804\uccb4\ub97c \uae30\ub85d\ud558\ub294 \uacbd\uc6b0, \ucd5c\ub300\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 \uc218\ub85c \uc124\uc815\ud55c\ub2e4.) --libmcount-single : \ube60\ub978 \ub370\uc774\ud130 \uae30\ub85d\uc744 \uc704\ud574\uc11c libmcount \uc758 \ub2e8\uc77c \uc4f0\ub808\ub4dc \ubc84\uc804\uc744 \uc0ac\uc6a9\ud55c\ub2e4. \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 pthread \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubb34\uc2dc\ub41c\ub2e4. --rt-prio= PRIO : \ub370\uc774\ud130 \uae30\ub85d\uc744 \ud558\ub294 \uc2a4\ub808\ub4dc\ub97c PRIO \ub97c \uc6b0\uc120\uc21c\uc704\ub85c \uac16\ub294 \uc2e4\uc2dc\uac04(FIFO)\ub85c \ud5a5\uc0c1\uc2dc\ud0a8\ub2e4. \uc774 \uc635\uc158\uc740 \ud2b9\ud788 \ub300\uaddc\ubaa8 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\ub294 \uc804\uccb4 \ucee4\ub110 \ucd94\uc801\uacfc \uac19\uc740 \ud658\uacbd\uc5d0\uc11c \uc720\uc6a9\ud558\ub2e4. --keep-pid : \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \ub54c \ub3d9\uc77c\ud55c pid \uac12\uc744 \uc720\uc9c0\ud558\uac8c \ud574\uc900\ub2e4. \uc77c\ubd80 \ub370\ubaac \ud504\ub85c\uc138\uc2a4\uc758 \uacbd\uc6b0 \ubd84\uae30 \ud560 \ub584 \ub3d9\uc77c\ud55c pid \ub97c \uac16\ub294\uac83\uc774 \uc911\uc694\ud558\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace \ub97c \uc2e4\ud589\ud558\uba74 fork() \ub97c \ub0b4\ubd80\uc801\uc73c\ub85c \ub2e4\uc2dc \ud638\ucd9c\ud558\ubbc0\ub85c pid \uac00 \ubcc0\uacbd\ub41c\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ud130\ubbf8\ub110 \uc124\uc815\uc774 \uc190\uc0c1\ub418\ub294 \uacbd\uc6b0\uac00 \uc788\uae30 \ub584\ubb38\uc5d0 --no-pager \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. --no-randomize-addr : ASLR(Address Space Layout Randomization)\uc744 \ube44\ud65c\uc131\ud654 \ud55c\ub2e4. \uc774\ub294 \ud504\ub85c\uc138\uc2a4\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub85c\ub529 \uc8fc\uc18c\uac00 \ub9e4\ubc88 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c9\uc544\uc900\ub2e4. REPLAY \uc635\uc158 -f FIELD , --output-fields= FIELD : \uacb0\uacfc\ub85c \ubcf4\uc5ec\uc9c0\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294 duration, tid, time, delta, elapsed, addr \uac00 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'duration,tid' \uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. --flat : C \uc640 \uac19\uc774 \ud638\ucd9c \uae4a\uc774\uac00 \ubcf4\uc774\ub294 \ubc29\uc2dd\uc774 \uc544\ub2cc \ud3c9\ud3c9\ud55c(flat) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \uc8fc\ub85c \ub514\ubc84\uae45\uc774\ub098 \ud14c\uc2a4\ud2b8 \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub41c\ub2e4. --column-view : \uc5f4(column) \ubcc4\ub85c \ubd84\ub9ac\ud558\uc5ec \uac01\uac01\uc758 \ud0dc\uc2a4\ud06c\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc11c\ub85c \ub2e4\ub978 \ud0dc\uc2a4\ud06c\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ud568\uc218\uc758 \uad6c\ubd84\uc744 \uc27d\uac8c\ud55c\ub2e4. --column-offset= DEPTH : --column-view \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c, \uc774 \uc635\uc158\uc740 \uac01 \ud0dc\uc2a4\ud06c \uc0ac\uc774\uc758 \uac04\uaca9(offset) \ud06c\uae30\ub97c \uba85\uc2dc\ud55c\ub2e4. \uae30\ubcf8 \uac04\uaca9\uc740 8 \uc774\ub2e4. --task-newline : \ud0dc\uc2a4\ud06c\uac00 \ubcc0\uacbd\ub418\uba74 \ube48 \uacf5\ubc31 \ud55c\uc904\uc744 \ucd94\uac00\ud55c\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5ec\ub7ec \ud0dc\uc2a4\ud06c\uc5d0\uc11c \ub3d9\uc791\ud558\ub294 \ud568\uc218\ub4e4\uc744 \uc27d\uac8c \uad6c\ubcc4 \ud560 \uc218 \uc788\ub2e4. --no-comment : \ud568\uc218\uac00 \ubc18\ud658\ub418\ub294 \uacf3\uc5d0 \uc8fc\uc11d\uc744 \ucd9c\ub825\ud558\uc9c0 \uc54a\ub294\ub2e4. --libname : \ud568\uc218 \uc774\ub984\uacfc \ud568\uaed8 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4. \uacf5\ud1b5 \ubd84\uc11d \uc635\uc158 -H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. FILTERS uftrace \ub294 \uad00\uc2ec \uc788\ub294 \ub300\uc0c1\uc774 \uc544\ub2cc \ud568\uc218\ub4e4\uc744 \uac10\ucd94\ub294 \ud544\ud130\ub9c1\uc744 \ud560 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\uc790\ub4e4\uc774 \uad00\uc2ec \uc788\ub294 \ud568\uc218\ub4e4\uc5d0\ub9cc \uc9d1\uc911\ud560 \uc218 \uc788\uac8c \ud558\uace0, \uae30\ub85d\ub418\ub294 \ub370\uc774\ud130\uc758 \ud06c\uae30\ub97c \uc904\uc77c \uc218 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ud55c\ub2e4. uftrace \uac00 \ud638\ucd9c\ub418\uba74, \ub450 \uc885\ub958\uc758 \ud568\uc218 \ud544\ud130\ub97c \uac16\uac8c \ub418\ub294\ub370 \uc774\ub4e4\uc740 \ub300\uc0c1 \ud568\uc218\ub97c \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd(opt-in)\uc758 \ud544\ud130\ub85c -F / --filter \uc640 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd(opt-out)\uc758 \ud544\ud130\uc778 -N / --notrace \uac00 \uc788\ub2e4. \uc774 \ud544\ud130\ub4e4\uc740 \uae30\ub85d(record)\ud558\uac70\ub098 \uc7ac\uc0dd(replay)\ud560 \ub54c \ubaa8\ub450 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4. \uccab\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \uc774\uac83\uc740 \uc544\ubb34\uac83\ub3c4 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \uc5b4\ub5a4 \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uba74, \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ucd94\uc801\uc744 \uc2dc\uc791\ud55c\ub2e4. \uadf8\ub7ec\ub2e4\uac00 \uadf8 \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc911\ub2e8\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, a() , b() \uc640 c() \ub97c \ucc28\ub840\ub85c \ud638\ucd9c\ud558\ub294 \uac04\ub2e8\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \uc0dd\uac01\ud574\ubcf4\uc790. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 uftrace \ub294 main() \ubd80\ud130 c() \uae4c\uc9c0\uc758 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace live ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c\ub294 \uba85\uc2dc\uc801\uc73c\ub85c live \uba85\ub839\uc5b4\uac00 \uc4f0\uc600\ub2e4. \ud558\uc9c0\ub9cc live \uba85\ub839\uc5b4\ub294 \uae30\ubcf8 \uba85\ub839\uc5b4\uc774\uae30 \ub54c\ubb38\uc5d0 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \ub530\ub77c\uc11c \uc704\uc758 \uba85\ub839\uc5b4\ub294 \uac04\ub2e8\ud558\uac8c uftrace ./abc \ub97c \uc2e4\ud589\ud574\ub3c4 \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\ub2e4. \ud558\uc9c0\ub9cc -F b \ud544\ud130 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub294, main() \uacfc a() \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uace0 \uc624\uc9c1 b() \uc640 c() \ub9cc\uc774 \ud3ec\ud568\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc77c\uac83\uc774\ub2e4. $ uftrace -F b ./abc # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ \ub450\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \uac83\uc774 \ucd94\uc801\ub418\uc9c0\ub9cc, \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uba48\ucd98\ub2e4. \uc81c\uc678\ub41c \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uc7ac\uac1c\ud55c\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c, b() \ud568\uc218\uc640 \uadf8\uc758 \ubaa8\ub4e0 \ud638\ucd9c\uc740 -N \uc635\uc158\uc73c\ub85c \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. $ uftrace -N b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ b() \ud568\uc218\ub9cc\uc744 \uc228\uae30\uace0 \uadf8\uc758 \ud558\uc704 \ud568\uc218\ub4e4\uc740 \uadf8\ub300\ub85c \ubcf4\uace0 \uc2f6\uc73c\uba74 -H \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace -H b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704\uc758 -H \uc635\uc158\uc740 \ud2b9\ud788 C++ \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c -H ^std:: \uc640 \uac19\uc774 \uc0ac\uc6a9\ud574\uc11c std \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud638\ucd9c\ub4e4\uc744 \uc228\uae38\ub54c \uc720\uc6a9\ud558\ub2e4. \ub9cc\uc77c \ud2b9\uc815 \ud568\uc218\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uace0 \uadf8 \ud568\uc218\uac00 \uc5b4\ub5bb\uac8c \ud638\ucd9c\ub418\ub294\uc9c0\ub9cc \uc54c\uace0 \uc2f6\ub2e4\uba74, caller filter \ub97c \uc0ac\uc6a9\ud558\uba74 \ub420 \uac83\uc774\ub2e4. \uadf8 \ud568\uc218\ub97c \ub9c8\uc9c0\ub9c9(leaf) \ub178\ub4dc\ub85c \ub9cc\ub4e4\uace0, \uadf8 \ud568\uc218\uc758 \ubaa8\ub4e0 \ubd80\ubaa8 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace -C b ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, \ud638\ucd9c \uacbd\ub85c\uc5d0 \uc5c6\ub294 \ud568\uc218\ub4e4\uc740 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, \ud568\uc218 b() \uc758 \uc790\uc2dd \ud568\uc218\uc778 \ud568\uc218 c() \ub610\ud55c \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, -D \uc635\uc158\uc73c\ub85c \ud568\uc218\uc758 \uc911\ucca9 \uae4a\uc774\uc744 \uc81c\ud55c\ud560 \uc218\ub3c4 \uc788\ub2e4. $ uftrace -D 3 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, uftrace \ub294 \ud568\uc218 \ud638\ucd9c \uae4a\uc774\ub97c \ucd5c\ub300 3 \uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd9c\ub825\ud588\uae30 \ub54c\ubb38\uc5d0, \ub9c8\uc9c0\ub9c9 \ud568\uc218\uc778 c() \ub294 \uc0dd\ub7b5\ub418\uc5c8\ub2e4. -D \uc635\uc158\uc740 -F \uc635\uc158\uacfc \ud568\uaed8 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ub54c\ub85c\ub294, \uae34 \uc2dc\uac04 \ub3d9\uc548 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\ub9cc\uc744 \ubcf4\ub294 \uac83\uc774 \uc720\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc9e7\uc740 \uc2e4\ud589 \uc2dc\uac04\uc744 \uac16\ub294 \uc791\uc740 \uaddc\ubaa8\uc758 \ud568\uc218\ub4e4\uc740 \ub300\ubd80\ubd84 \uad00\uc2ec \ub300\uc0c1\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc774\ub2e4. -t / --time-filter \uc635\uc158\uc740 \uba85\uc2dc\ub41c \uc784\uacc4\uc2dc\uac04\ubcf4\ub2e4 \uc624\ub798 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ubcfc \uc218 \uc788\uac8c \ud558\ub294 \uc2dc\uac04 \uae30\ubc18\uc758 \ud544\ud130\uc774\ub2e4. \uc704\uc758 \uc608\uc2dc\uc5d0\uc11c, \uc0ac\uc6a9\uc790\ub294 \uc544\ub798\uc640 \uac19\uc774 5 \ub9c8\uc774\ud06c\ub85c\ucd08(us) \uc774\uc0c1 \uac78\ub824\uc11c \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ubcf4\uace0 \uc2f6\uc5b4 \ud560 \uc218 \uc788\ub2e4. $ uftrace -t 5us ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ud544\ud130\ub9c1\ub41c \ud568\uc218\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4. \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 TRIGGERS \ud56d\ubaa9\uc5d0\uc11c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. \ucee4\ub110 \ud568\uc218 \ucd94\uc801\uc744 \uc124\uc815\ud558\uba74, @kernel \uc2dd\ubcc4\uc790\ub97c \ud1b5\ud574 \ucee4\ub110 \ud568\uc218\uc5d0 \ub300\ud55c \ud544\ud130\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ud558 \uc608\uc2dc\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \ud568\uc218\uc640 (\ucee4\ub110 \ub808\ubca8\uc758) page fault \ud578\ub4e4\ub7ec\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */ TRIGGERS uftrace \ub294 (\ud544\ud130\uac00 \uc788\ub4e0 \uc5c6\ub4e0) \uc120\ud0dd\ub41c \ud568\uc218 \ud638\ucd9c\uacfc \uc2dc\uadf8\ub110\uc5d0 \ub300\ud55c \ud2b8\ub9ac\uac70 \ub3d9\uc791\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \ud2b8\ub9ac\uac70\uc640 \uc0ac\uc591\uc5d0 \ub300\ud55c BNF \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace\" | \"trace_on\" | \"trace_off\" | \"recover\" | \"color=\"<color> | \"time=\"<time_spec> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"hide\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" depth \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud544\ud130\uc758 \uae4a\uc774\ub97c \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\uc591\ud55c \ud568\uc218\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \ud544\ud130 \uae4a\uc774\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. \uadf8\ub9ac\uace0 backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc2dc \uc2a4\ud0dd \ubc31\ud2b8\ub808\uc774\uc2a4\ub97c \ucd9c\ub825\ud55c\ub2e4. color \ud2b8\ub9ac\uac70\ub294 replay \uba85\ub839\uc5b4\uc5d0\uc11c \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud55c\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc0c9\uc0c1\uc740 red , green , blue , yellow , magenta , cyan , bold , gray \uac00 \uc788\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ud2b8\ub9ac\uac70 \uc791\ub3d9 \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc804\uc5ed \ud544\ud130 \uae4a\uc774\uac00 5 \ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc9c0\ub9cc b() \ud568\uc218\uc5d0 depth \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud558\uc5ec b() \uc544\ub798 \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uac8c\ub41c\ub2e4. $ uftrace -D 5 -T 'b@depth=1' ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. trace_on \uacfc trace_off \ud2b8\ub9ac\uac70\ub294 uftrace \uac00 \uc9c0\uc815\ub41c \ud568\uc218\ub97c \uae30\ub85d\ud560\uc9c0 \uc5ec\ubd80\ub97c \uad00\ub9ac\ud55c\ub2e4. \ub610\ud55c, _ \ubb38\uc790 \uc5c6\uc774 traceon \uacfc traceoff \ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. recover \ud2b8\ub9ac\uac70\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \ud638\ucd9c \uc2a4\ud0dd(call stack)\uc5d0 \uc9c1\uc811 \uc811\uadfc\ud558\ub294 \uc77c\ubd80 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4. \uc608\ub97c\ub4e4\uc5b4, v8 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc5d4\uc9c4\uc744 \ucd94\uc801\ud558\ub294 \ub3d9\uc548 \uac00\ube44\uc9c0 \uceec\ub809\uc158 \ub2e8\uacc4\uc5d0\uc11c \uc138\uadf8\uba58\ud14c\uc774\uc158 \ud3f4\ud2b8 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ub41c\ub2e4\uba74 \uc774\ub294 v8 \uc774 (\ubcc0\uacbd\ub41c) \ubc18\ud658 \uc8fc\uc18c\ub97c \ud1b5\ud574 \ucef4\ud30c\uc77c\ub41c \ucf54\ub4dc \uac1d\uccb4\uc5d0 \uc811\uadfc\ud558\ub824 \ud558\uae30 \ub54c\ubb38\uc774\ub2e4. recover \ud2b8\ub9ac\uac70\ub294 \ud568\uc218 \uc9c4\uc785\uc810\uc5d0 \uc6d0\ub798 \ubc18\ud658 \uc8fc\uc18c\ub97c \ubcf5\uc6d0\ud558\uace0 \ud568\uc218 \ubc18\ud658\uc810\uc5d0\uc11c \ub2e4\uc2dc uftrace \uc5d0\uc11c \uc870\uc791\ud55c \ubc18\ud658 \uc8fc\uc18c\ub85c \uc7ac\uc124\uc815\ud55c\ub2e4. (\ud2b9\ud788 v8 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc5d4\uc9c4 \uc0ac\ub840\uc5d0\uc11c ExitFrame::Iterate \ud568\uc218\uc640 \uac19\uc774 \ubb38\uc81c\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uc0c1\ud669\uc5d0\uc11c recover \ud2b8\ub9ac\uac70\ub97c \uc0ac\uc6a9\ud558\uba74 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218 \uc788\ub2e4.) time \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04 \ud544\ud130(time-filter) \uc124\uc815\uc744 \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\ub978 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c \uc11c\ub85c \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130\ub97c \uc801\uc6a9\ud560 \ub584 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. read \ud2b8\ub9ac\uac70\ub294 \uc2e4\ud589 \uc2dc\uc5d0 \uc77c\ubd80 \uc815\ubcf4\ub97c \uc77d\uc744 \uc218 \uc788\ub2e4. \uacb0\uacfc\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc5d0 (\ub0b4\uc7a5) \uc774\ubca4\ud2b8\uc758 \ud615\ud0dc\ub85c \uae30\ub85d\ub41c\ub2e4. \ud604\uc7ac \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\ubca4\ud2b8\uac00 \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. \"proc/statm\": /proc \uc73c\ub85c\ubd80\ud130\uc758 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uc815\ubcf4 \"page-fault\": getrusage(2)\ub97c \uc0ac\uc6a9\ud55c \ud398\uc774\uc9c0 \ud3f4\ud2b8(page fault) \ud69f\uc218 \"pmu-cycle\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c cpu \ud074\ub7ed \uc0ac\uc774\ud074 \ubc0f \uba85\ub839\uc5b4 \uc2e4\ud589 \ud69f\uc218 \"pmu-cache\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c \uce90\uc2dc \ucc38\uc870(reference) \ubc0f \uc2e4\ud328(miss) \"pmu-branch\": Perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \uc0ac\uc6a9\ud55c \ubd84\uae30\uc608\uce21(branch prediction) \ubc0f \uc2e4\ud328(miss) \uacb0\uacfc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc8fc\uc11d\uc758 \ud615\ud0dc\ub85c \uc774\ubca4\ud2b8 \uc815\ubcf4\uac00 \ucd9c\ub825\ub41c\ub2e4. $ uftrace -T a@read=proc/statm ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ finish \ud2b8\ub9ac\uac70\ub294 \uae30\ub85d(record)\uc744 \uc885\ub8cc\ud560 \ub584 \uc0ac\uc6a9\ud55c\ub2e4. \ub370\ubaac\uacfc \uac19\uc774 \uc885\ub8cc\ub418\uc9c0 \uc54a\ub294 \ud504\ub85c\uc138\uc2a4\ub97c \ucd94\uc801\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub2e4. filter \uc640 notrace \ud2b8\ub9ac\uac70\ub294 \uac01\uac01 -F / --filter \uc640 -N / --notrace \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\ub2e4. hide \ud2b8\ub9ac\uac70\ub294 \ud2b9\uc815 \ud568\uc218\ub97c \ubcf4\uc774\uc9c0 \uc54a\uac8c \ud558\ub294 -H / --hide \uc635\uc158\uacfc \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\uc5b4\uc11c notrace \uc640 \ub2e4\ub974\uac8c \ud558\uc704 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4. \ud2b8\ub9ac\uac70\ub294 \ud604\uc7ac \ucee4\ub110 \ud568\uc218\ub97c \uc81c\uc678\ud55c \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ud2b8\ub9ac\uac70\ub294 \uc2dc\uadf8\ub110\ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 signal \ud2b8\ub9ac\uac70\uc5d0 \uc758\ud574 \uc218\ud589\ub418\uba70 \ud568\uc218 \ud2b8\ub9ac\uac70\uc640 \ube44\uc2b7\ud558\uc9c0\ub9cc \ud604\uc7ac\ub294 \"trace_on\", \"trace_off\" \ubc0f \"finish\" \ud2b8\ub9ac\uac70\ub9cc \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. $ uftrace --signal 'SIGUSR1@finish' ./some-daemon ARGUMENTS uftrace \ub294 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\uc744 \uac01\uac01 -A / \\--argument \uc640 -R / \\--retval \ub85c \uae30\ub85d\ud560 \uc218 \uc788\ub2e4. \uc774\uc5d0 \ub300\ud55c \ubb38\ubc95\uccb4\uacc4\ub294 \ud2b8\ub9ac\uac70\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\ub2e4. <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> -A / \\--argument \uc635\uc158\uc740 symbol \uc758 \uc774\ub984\uacfc \uadf8\uac83\uc758 spec \ub4e4\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ubc1b\ub294\ub2e4. spec \uc740 argN \uc73c\ub85c \uc2dc\uc791\ub418\ub294\ub370 \uc5ec\uae30\uc11c N \uc740 \uc778\uc790\uc758 \uc778\ub371\uc2a4\uac12\uc774\ub2e4. \uc778\ub371\uc2a4\ub294 1 \ubd80\ud130 \uc2dc\uc791\ub418\uba70, \uc21c\uc11c\ub294 \ud568\uc218\ud638\ucd9c\uaddc\uc57d(calling convention)\uc758 \uc778\uc790 \uc804\ub2ec \uc21c\uc11c\uc640 \ub300\uc751\ub41c\ub2e4. \uc778\uc790\uc758 \uc778\ub371\uc2a4\ub294 \uc815\uc218\ud615 (\ud639\uc740 \ud3ec\uc778\ud130\ud615) \uacfc \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uac01\uac01 \ub530\ub85c \uad00\ub9ac\ub41c\ub2e4\ub294 \uc810, \uadf8\ub9ac\uace0 \uc774\ub4e4\uc740 \ud568\uc218\ud638\ucd9c\uaddc\uc57d\uc5d0 \ub530\ub77c \uac01\uae30 \uac04\uc12d\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\ub77c. argN \uc740 \uc815\uc218\ud615 \uc778\uc790\ub97c, fpargN \uc740 \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uc778\uc790\ub97c \uc704\ud55c \ud45c\uae30\uc774\ub2e4. \"d\" \ud615\uc2dd \ud639\uc740 \uc544\ubb34 \ud615\uc2dd\ub3c4 \uc8fc\uc9c0 \uc54a\uc744 \uacbd\uc6b0, uftrace \ub294 \uc815\uc218\ud615\uc740 'long int'\ud615\uc73c\ub85c \uac04\uc8fc\ud558\uace0 \uc18c\uc218\uc810\ud615\uc5d0 \ub300\ud574\uc11c\ub294 'double'\ud615\uc73c\ub85c \uac04\uc8fc\ud55c\ub2e4. \"i\" \ud615\uc2dd\uc740 signed \uc815\uc218\ud615\uc73c\ub85c, \"u\" \ud615\uc2dd\uc740 unsigned \uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \ub450 \ud615\uc2dd \ubaa8\ub450 10 \uc9c4\uc218\uac00 \ucd9c\ub825\ub418\ub294 \ud55c\ud3b8 \"x\" \ud615\uc2dd\uc740 16 \uc9c4\uc218\ub85c, \"o\" \ud615\uc2dd\uc740 8\uc9c4\uc218\ub85c \ucd9c\ub825\ub418\uac8c \ud55c\ub2e4. \"s\" \ub294 null \uc744 \uc81c\uc678\ud55c \ubb38\uc790\uc5f4 \ucd9c\ub825\uc744 \uc704\ud55c \ud615\uc2dd\uc774\uace0, \"c\" \ub294 \ub2e8\uc77c \ubb38\uc790\ub97c \uc704\ud55c \ud615\uc2dd\uc774\ub2e4. \"f\" \ud615\uc2dd\uc740 \ubd80\ub3d9 \uc18c\uc218\uc810\uc744 \ucd9c\ub825\ud558\ub294\ub370, (\uc77c\ubc18\uc801\uc73c\ub85c) \ubc18\ud658\uac12\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. fpargN \uc740 \ud56d\uc0c1 \uc18c\uc218\uc810 \ubc29\uc2dd\uc774\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub5a4 \ud615\uc2dd \ud544\ub4dc\ub3c4 \uc5c6\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \"S\" \ud615\uc2dd\uc740 std::string \uc744 \uc704\ud55c \ud615\uc2dd\uc774\uc9c0\ub9cc, \uc544\uc9c1\uae4c\uc9c0\ub294 libstdc++ \ub77c\uc774\ube0c\ub7ec\ub9ac\ub9cc \uc9c0\uc6d0\uac00\ub2a5\ud558\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \"p\" \ud615\uc2dd\uc740 \ud568\uc218\ud3ec\uc778\ud130 \ud615\uc2dd\uc774\ub2e4. \ucd94\uc801 \ub300\uc0c1\uc758 \uc8fc\uc18c\uac00 \uae30\ub85d\ub418\uba74, \uc5b8\uc81c\ub098 \ud568\uc218 \uc774\ub984\uc73c\ub85c \ucd9c\ub825\ub41c\ub2e4. \ubb38\uc790\uc5f4 \ud0c0\uc785\uc758 \uc778\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c (\ud3ec\uc778\ud130) \uac12\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ud504\ub85c\uadf8\ub7a8\uc744 \ube44\uc815\uc0c1 \uc885\ub8cc\uc2dc\ud0ac \uc218 \uc788\uc74c\uc5d0 \uc8fc\uc758\ud558\ub77c. \uc0ac\uc2e4 uftrace \ub294 \uc720\ud6a8\ud55c \ud504\ub85c\uc138\uc2a4 \uc8fc\uc18c \uacf5\uac04\uc758 \ubc94\uc704\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \uc810\uac80\ud558\ub824\uace0 \ub178\ub825\ud558\uc9c0\ub9cc, \uba87\uba87\uc758 \uacbd\uc6b0\ub4e4\uc744 \ub193\uce60 \uc218 \uc788\ub2e4. \ub610\ud55c \ud2b9\uc815 \ub808\uc9c0\uc2a4\ud130\uc758 \uc774\ub984\uc774\ub098 \uc2a4\ud0dd \uc624\ud504\uc14b(offset)\uc73c\ub85c\ub3c4 \uc778\uc790\ub85c \uba85\uc2dc\ud560 \uc218 \uc788\ub2e4. (\ubc18\ud658\uac12\uc740 \ubd88\uac00\ud558\ub2e4) \uc544\ub798\ub294 \uc778\uc790\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud130 \uc774\ub984\ub4e4\uc774\ub2e4. x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4. $ uftrace -A main@arg1/x -R main@retval/i32 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace -A puts@arg1/s -R puts@retval ./hello Hello world # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ \uc774 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc740 \uc2e4\ud589\ud30c\uc77c\uc774 -pg \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ub418\uc5c8\uc744 \ub54c\uc5d0\ub9cc \uae30\ub85d\ub428\uc5d0 \uc720\uc758\ud558\ub77c. -finstrument-functions \ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \uc2e4\ud589\ud30c\uc77c\ub4e4\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubb34\uc2dc\ub41c\ub2e4. \uc778\uc790\uc640 \ubc18\ud658\uac12\uc758 \uae30\ub85d\uc740 \uc544\uc9c1\uae4c\uc9c4 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud568\uc218\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ub9cc\uc77c \ud504\ub85c\uadf8\ub7a8\uc774 DWARF \uc640 \uac19\uc740 \ub514\ubc84\uadf8 \uc815\ubcf4\uc640 \ud568\uaed8 \ube4c\ub4dc\ub418\uc5c8\ub2e4\uba74, (libdw \uc640 \ud568\uaed8 \ube4c\ub4dc\ub41c) uftrace \ub294 \uc790\ub3d9\uc73c\ub85c \uc778\uc790\ub4e4\uc758 \uac2f\uc218\uc640 \uc790\ub8cc\ud615\ub4e4\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub354\ub77c\ub3c4, \uba87\uba87 \uc798 \uc54c\ub824\uc9c4 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ub41c\ub2e4. \uc774 \uacbd\uc6b0 \uc0ac\uc6a9\uc790\ub294 \uc778\uc790\ub4e4\uc758 spec \uacfc \ubc18\ud658\uac12\uc744 \uc218\ub3d9\uc801\uc73c\ub85c \uba85\uc2dc\ud560 \ud544\uc694\uac00 \uc5c6\uc774 \ud568\uc218\uc758 \uc774\ub984 (\ub610\ub294 \ud328\ud134) \ub9cc \uc8fc\ub294 \uac83\uc73c\ub85c\ub3c4 \ucda9\ubd84\ud558\ub2e4. \uc0ac\uc2e4, \uba85\uc2dc\uc801\uc73c\ub85c argspec \uc744 \uc9c0\uc815\ud558\uba74 \uc790\ub3d9 argspec \uc744 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\ub2e4. $ uftrace -A . -R main -F main ./hello Hello world # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ \uc778\uc790 \ud328\ud134 (\".\")\uc740 \ubaa8\ub4e0 \ubb38\uc790\uc5d0 \ub300\uc751\ub418\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\ub4e4\uc774 \uae30\ub85d\ub418\uc5c8\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \uc704\uc5d0\uc11c\ub294 \"main\" \ud568\uc218\uc758 \ub450 \uc778\uc790\ub4e4\uacfc \"puts\" \uc758 \ud55c \ubb38\uc790\uc5f4 \uc778\uc790\ub97c \ubcf4\uc5ec\uc900\ub2e4. \ub9cc\uc77c (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\uc758 \ubaa8\ub4e0 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc744 \ubcf4\uace0 \uc2f6\ub2e4\uba74, -a / \\--auto-args \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub77c. FIELDS uftrace \uc0ac\uc6a9\uc790\ub294 replay \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uc5ec\uae30\uc11c \ud544\ub4dc\ub780 \ud30c\uc774\ud504 \ubb38\uc790 (|) \uc67c\ucabd\uc5d0 \ub098\ud0c0\ub098\ub294 \uc815\ubcf4\ub97c \ub73b\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc9c0\uc18d\uc2dc\uac04 duration \uacfc tid \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace -f time,delta,duration,tid,addr ./abc # TIMESTAMP TIMEDELTA DURATION TID ADDRESS FUNCTION 75059.205379813 1.374 us [27804] 4004d0 | __monstartup(); 75059.205384184 4.371 us 0.737 us [27804] 4004f0 | __cxa_atexit(); 75059.205386655 2.471 us [27804] 4006b1 | main() { 75059.205386838 0.183 us [27804] 400656 | a() { 75059.205386961 0.123 us [27804] 400669 | b() { 75059.205387078 0.117 us [27804] 40067c | c() { 75059.205387264 0.186 us 0.643 us [27804] 4004b0 | getpid(); 75059.205388501 1.237 us 1.423 us [27804] 40067c | } /* c */ 75059.205388724 0.223 us 1.763 us [27804] 400669 | } /* b */ 75059.205388878 0.154 us 2.040 us [27804] 400656 | } /* a */ 75059.205389030 0.152 us 2.375 us [27804] 4006b1 | } /* main */ \uac01 \ud544\ub4dc\ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. tid: task id (gettid(2)\ub85c \uc5bb\uc744 \uc218 \uc788\ub2e4.) duration: \ud568\uc218 \uc2e4\ud589 \uc2dc\uac04 time: \ud0c0\uc784\uc2a4\ud0ec\ud504 \uc815\ubcf4 delta: \uc5b4\ub5a4 \uc791\uc5c5 \ub0b4 \ub450 \ud0c0\uc784\uc2a4\ud0ec\ud504\uc758 \ucc28\uc774 elapsed: \uccab \ud0c0\uc784\uc2a4\ud0ec\ud504\ub85c\ubd80\ud130\uc758 \uacbd\uacfc \uc2dc\uac04 addr: \ud574\ub2f9 \ud568\uc218\uc758 \uc8fc\uc18c task: \ud0dc\uc2a4\ud06c \uc774\ub984 (comm) module: \ub77c\uc774\ube0c\ub7ec\ub9ac \ud639\uc740 \uc2e4\ud589 \uac00\ub2a5\ud55c \ud568\uc218\uc758 \uc774\ub984 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'duration,tid'\uc774\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ub41c\ub2e4\uba74, \uadf8 \ud544\ub4dc\ub294 \uae30\ubcf8 \ud544\ub4dc\uac12\uc5d0 \ucd94\uac00\ub420 \uac83\uc774\ub2e4. \uc989, \"-f +time\" \ub294 \"-f duration,tid,time\" \uc640 \uac19\uc740 \uac83\uc774\ub2e4. \ub610\ud55c 'none'\uc774\ub77c\ub294 \ud2b9\ubcc4\ud55c \ud544\ub4dc\ub3c4 \ubc1b\uc744 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ud544\ub4dc \ucd9c\ub825\uc744 \ud558\uc9c0 \uc54a\uace0 \uc624\uc9c1 \ud568\uc218 \uc2e4\ud589 \uacb0\uacfc\ub9cc\uc744 \ubcf4\uc5ec\uc900\ub2e4. DYNAMIC TRACING uftrace \ub294 x86_64, AArch64 \ud658\uacbd\uc758 \ub7f0\ud0c0\uc784 (\uc815\ud655\ud558\uac8c\ub294, \ub85c\ub4dc \ud0c0\uc784) \uc5d0\uc11c \ub3d9\uc801\ucd94\uc801(dynamic tracing)\uc774 \uac00\ub2a5\ud558\ub2e4. \ud568\uc218\ub97c \uae30\ub85d\ud558\uae30 \uc804\uc5d0, \ubcf4\ud1b5 \ud504\ub85c\uadf8\ub7a8\uc744 -pg (\ud639\uc740 -finstrument-functions \uc73c\ub85c) \ube4c\ub4dc\ud574\uc57c \ud558\uace0, \uadf8\ub807\uac8c \ub41c\ub2e4\uba74 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc774 mcount() \ub97c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub290 \uc815\ub3c4 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubc1b\uac8c \ub420 \uac83\uc774\ub2e4. \ub3d9\uc801\ucd94\uc801\uc744 \ud560 \ub54c, -P / --patch \uc635\uc158\uc744 \ud1b5\ud574 \ud2b9\uc815 \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. capstone \ub514\uc2a4\uc5b4\uc148\ube14\ub9ac \uc5d4\uc9c4\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uc704 \uc635\uc158\uc744 \uc9c0\uc815\ud574\uc11c \ud504\ub85c\uadf8\ub7a8\uc744 (\uc7ac)\ucef4\ud30c\uc77c\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4. \uc774\uc81c uftrace \ub294 \uba85\ub839\uc5b4\ub4e4\uc744 \ubd84\uc11d\ud560 \uc218 \uc788\uac8c \ub418\uace0 (\ub9cc\uc57d \uac00\ub2a5\ud558\ub2e4\uba74) \uadf8 \uba85\ub839\uc5b4\ub4e4\uc744 \ub2e4\ub978 \uacf3\uc5d0 \ubcf5\uc0ac\ud558\uc5ec mcount() \ud568\uc218\ub4e4\uc744 \ud638\ucd9c\ud558\uc5ec uftrace \ub85c \ucd94\uc801\ud560 \uc218 \uc788\uac8c \ubc14\uc774\ub108\ub9ac\ub97c \uc870\uc791 \ud560 \uc218 \uc788\ub2e4. \uadf8 \uc774\ud6c4 \uc81c\uc5b4\uad8c\uc740 \ubcf5\uc0ac\ub41c \uba85\ub839\uc5b4\ub85c \ub118\uc5b4\uac00\uac8c \ub418\uace0, \uadf8 \ub2e4\uc74c\uc5d0\uc57c \ub0a8\uc740 \uba85\ub839\uc5b4\ub4e4\ub85c \ubc18\ud658\ud558\uac8c \ub41c\ub2e4. capstone \uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4\uba74, \ud504\ub85c\uadf8\ub7a8\uc744 \ube4c\ub4dc\ud560 \ub54c \uba87\uba87 \ucef4\ud30c\uc77c\ub7ec (gcc) \uc635\uc158\ub4e4\uc744 \ucd94\uac00\ud574\uc57c \ud560 \uac83\uc774\ub2e4. gcc 5.1 \ubc84\uc804 \uc774\uc0c1\ubd80\ud130\ub294 -mfentry \uc640 -mnop-mcount \uc635\uc158\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc774 \uc635\uc158\ub4e4\uc740 \ud568\uc218 \ub9e8 \uc55e\uc5d0 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uace0 \uadf8 \uba85\ub839\uc5b4\ub97c NOP \uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4. \uadf8\ub807\uac8c \ub418\uba74 \uc77c\ubc18\uc801\uc778 \uc870\uac74\uc5d0\uc11c \uc2e4\ud589\ud560 \ub54c\uc5d0\ub294 \uc131\ub2a5 \uc0c1\uc758 \uc624\ubc84\ud5e4\ub4dc\uac00 \uac70\uc758 \uc5c6\uc5b4\uc9c8 \uac83\uc774\ub2e4. uftrace \ub294 -P \uc635\uc158\uc744 \uc774\uc6a9\ud558\uc5ec \uc120\ud0dd\uc801\uc73c\ub85c mcount() \ud568\uc218\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub3c4\ub85d \uc804\ud658\ud560 \uc218 \uc788\ub2e4. uftrace \ub97c \uc544\ub798\uc758 \uc608\uc81c\uc5d0\uc11c \ud3c9\uc18c\ucc98\ub7fc \uc0ac\uc6a9\ud560\ub54c\uc5d0\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uadf8 \uc774\uc720\ub294 \ubc14\uc774\ub108\ub9ac\uac00 \uc5b4\ub5a4 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub3c4 \ud638\ucd9c\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. $ gcc -o abc -pg -mfentry -mnop-mcount tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. \ud558\uc9c0\ub9cc -P a \ud328\uce58 \uc635\uc158\uc744 \uc801\uc6a9\ud55c\ub2e4\uba74, \ub3d9\uc801\uc73c\ub85c a() \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace --no-libcall -P a abc # DURATION TID FUNCTION 0.923 us [19379] | a(); \ucd94\uac00\ub85c, '.'\uc744 \uc774\uc6a9\ud574 (glob\uc740, '*') P \uc635\uc158\uacfc \ud568\uaed8 \uc815\uaddc\ud45c\ud604\uc2dd\uc73c\ub85c \uc4f0\uc778 \ubb38\uc790\uc5d0 \ub300\ud574 \ud558\ub098\ub77c\ub3c4 \ub9e4\uce6d\ub418\ub294 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc801\uc6a9\uc2dc\ud0ac \uc218 \uc788\ub2e4. $ uftrace --no-libcall -P . abc # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ -U \uc635\uc158\uc740 -P \uc635\uc158\uacfc \ubc18\ub300\uc758 \ud6a8\uacfc\uac00 \uc788\uc5b4 \uc0ac\uc6a9\uc790\uac00 \ub450 \uc635\uc158 \ubaa8\ub450\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\ub2e4. \ub098\uc911\uc5d0 \uba85\uc2dc\ub41c \uc635\uc158\uc740 \uc55e\uc120 \uc635\uc158\uc744 \ub36e\uc5b4\uc4f4\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \uc608\uc2dc\uc5d0\uc11c 'a'\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud558\uace0 \uc2f6\ub2e4\uba74 \uc544\ub798\uc640 \uac19\uc774 \uc635\uc158\uc744 \uc801\uc6a9\ud55c\ub2e4. $ uftrace --no-libcall -P . -U a abc # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ \uc635\uc158\uc758 \uc21c\uc11c\ub294 \uc911\uc694\ud558\ub2e4. \ub9cc\uc77c \uc635\uc158\uc758 \uc21c\uc11c\ub97c -U a -P . \uc640 \uac19\uc774 \ubcc0\uacbd\ud55c\ub2e4\uba74 -P . \uc635\uc158\uc774 \uc804\uccb4\uc5d0 \uc720\ud6a8\ud574\uc9c0\uae30\uc5d0 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c, -U \uc635\uc158\uc740 -pg (\uadf8\ub9ac\uace0 -mfentry \ud639\uc740 -mrecord-mcount )\ub85c \ube4c\ub4dc\ub41c \ubc14\uc774\ub108\ub9ac \ub0b4\uc758 \ud568\uc218\ub4e4\uc744 \ube44\ud65c\uc131\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uc774 \ub54c, capstone\uc774 \ud544\uc694\ud560 \uc218 \uc788\ub2e4. Clang/LLVM 4.0\uc740 X-ray \ub77c\ub294 \uae30\uc220\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\ub294 gcc -mfentry -mnop-mcount \uc640 -finstrument-functions \ub97c \uacb0\ud569\ud55c \uac83\uacfc\ub3c4 \uc720\uc0ac\ud558\ub2e4. uftrace\ub294 X-ray \ub85c \ube4c\ub4dc\ub41c \uc2e4\ud589\ud30c\uc77c\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub3d9\uc801\ucd94\uc801\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 clang \uc73c\ub85c \uc544\ub798\uc758 \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \uadf8\uc640 \ub3d9\uc77c\ud558\uac8c \ub3d9\uc801\ucd94\uc801\uc744 \uc704\ud574 \uc544\ub798\uc640 \uac19\uc774 -P \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc744 \uac83\uc774\ub2e4. $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace -P main abc-xray # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace -P . abc-xray # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */ SCRIPT EXECUTION uftrace \ub294 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\uc774 \uac00\ub2a5\ud558\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \uc2a4\ud06c\ub9bd\ud2b8 \ud0c0\uc785\uc740 Python 2.7, Python 3 \uadf8\ub9ac\uace0 Lua 5.1 \uc774\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ub124 \uac1c\uc758 \ud568\uc218\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4. 'uftrace_entry' \uc640 'uftracce_exit' \uc740 \uac01 \ud568\uc218\uc758 \uc9c4\uc785\uc2dc\uc810\uacfc \ubc18\ud658\uc2dc\uc810\uc5d0 \ud56d\uc0c1 \uc2e4\ud589\ub41c\ub2e4. \ud558\uc9c0\ub9cc 'uftrace_begin' \uacfc 'uftrace_end' \ub294 \ubd84\uc11d \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \ucd08\uae30\ud654\ub418\uace0 \uc885\ub8cc\ub420\ub54c \ud55c \ubc88\uc529\ub9cc \uc2e4\ud589\ub41c\ub2e4. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") \uc704 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc544\ub798\uc640 \uac19\uc774 \uae30\ub85d\ub41c \uc2dc\uac04 \uc21c\uc73c\ub85c \uc2e4\ud589\ub420 \uc218 \uc788\ub2e4: $ uftrace -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished # DURATION TID FUNCTION [10929] | main() { [10929] | a() { [10929] | b() { [10929] | c() { 4.293 us [10929] | getpid(); 19.017 us [10929] | } /* c */ 27.710 us [10929] | } /* b */ 37.007 us [10929] | } /* a */ 55.260 us [10929] | } /* main */ 'ctx' \ubcc0\uc218\ub294 \uc544\ub798\uc758 \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\ub294 \uc0ac\uc804\ud0c0\uc785(dictionary type)\uc758 \ubcc0\uc218\uc774\ub2e4. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; 'script_context' \uc5d0 \uc788\ub294 \uac01 \ud56d\ubaa9\ub4e4\uc740 \uc2a4\ud06c\ub9bd\ud2b8 \ub0b4\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\ub2e4. \uc2a4\ud06c\ub9bd\ud305\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 uftrace-script (1)\ub97c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. WATCH POINT uftrace \uc758 watch point \ub294 \ud2b9\uc815 \uac12\uc758 \ubcc0\uacbd\uc0ac\ud56d\uc744 \ucd9c\ub825\ud55c\ub2e4. \uac1c\ub150\uc801\uc73c\ub85c\ub294 \uc77c\ubc18\uc801\uc778 \ub514\ubc84\uac70\uc758 watch point \uc640 \uac19\uc9c0\ub9cc, \ud568\uc218\uc758 \uc9c4\uc785\uacfc \uc885\ub8cc\uc5d0\ub9cc \uc801\uc6a9\ub418\uae30 \ub54c\ubb38\uc5d0 \uba87\uba87 \ubcc0\uacbd\uc0ac\ud56d\ub4e4\uc740 \ub193\uce60 \uc218\ub3c4 \uc788\ub2e4. \uc544\uc9c1\uae4c\uc9c0\ub294, \uc544\ub798\uc758 watch point \ub4e4\ub9cc\uc774 \uc9c0\uc6d0\ub41c\ub2e4. \"cpu\" : \ud604\uc7ac \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 cpu \ubc88\ud638 \ud2b8\ub9ac\uac70\ub97c \uc77d\uc744 \ub54c\ucc98\ub7fc, \uacb0\uacfc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc8fc\uc11d \ud615\uc2dd\uc758 \uc774\ubca4\ud2b8\ub85c \ucd9c\ub825\ub41c\ub2e4. $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */ \ud568\uaed8 \ubcf4\uae30 uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-script (1) \ubc88\uc5ed\uc790 \uac15\ubbfc\ucca0 tegongkang@gmail.com , \uae40\uad00\uc601 gy741.kim@gmail.com , \uae40\ud64d\uaddc honggyu.kp@gmail.com","title":"Uftrace live"},{"location":"ko/uftrace-live/#_1","text":"uftrace-live - \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud558\uace0 \ucd9c\ub825\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-live/#_2","text":"uftrace [live] [ options ] COMMAND [ command-options ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-live/#_3","text":"\uc774 \uba85\ub839\uc5b4\ub294 COMMAND \ub85c \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\uace0 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud558\uace0 \uc2e4\ud589\uc2dc\uac04 \ub4f1\uc758 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774\ub294 \uae30\ubcf8\uc801\uc73c\ub85c uftrace record \uc640 uftrace replay \ub97c \ucc28\ub840\ub85c \uc2e4\ud589\ud558\ub294 \uac83\uacfc \uac19\uc9c0\ub9cc, \ub370\uc774\ud130 \ud30c\uc77c\uc744 \uc800\uc7a5\ud558\uc9c0\ub294 \uc54a\ub294\ub2e4. \uc774 \uba85\ub839\uc5b4\ub294 record \uc640 replay \uba85\ub839\uc5b4\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ub300\ubd80\ubd84\uc758 \uc778\uc790\ub4e4\uc744 \ubc1b\ub294\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-live/#_4","text":"-F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \uc744 \ucc38\uace0\ud55c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --event \ub97c \ud1b5\ud55c \uba85\uc2dc\uc801\uc778 \uc774\ubca4\ud2b8 \uae30\ub85d \ubc29\uc2dd\uc5d0\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --disable : uftrace \ub97c \uc2dc\uc791\ud560\ub54c \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\uace0 \uc2dc\uc791\ud55c\ub2e4. \uc774\uac83\uc740 trace_on \ud2b8\ub9ac\uac70\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.","title":"\uacf5\ud1b5 \uc635\uc158"},{"location":"ko/uftrace-live/#live","text":"--list-event : \uc2e4\ud589\uc911\uc5d0 \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. --report : replay \ucd9c\ub825 \uc804 live-report \ub97c \ud568\uaed8 \ucd9c\ub825\ud55c\ub2e4. --record : \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ud5a5\ud6c4 \ubd84\uc11d\uc744 \uc704\ud574 \uc800\uc7a5\ud55c\ub2e4.","title":"LIVE \uc635\uc158"},{"location":"ko/uftrace-live/#record","text":"-A SPEC , --argument= SPEC : \ud568\uc218\uc758 \uc778\uc790\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uc778\uc790\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -R SPEC , --retval= SPEC : \ud568\uc218\ub4e4\uc758 \ubc18\ud658\uac12\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ubc18\ud658\uac12\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -P FUNC , --patch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub97c \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud558\uc5ec \ucd94\uc801\ud558\uace0 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -U FUNC , --unpatch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\uc5d0 \ub300\ud574 \ub3d9\uc801 \ud328\uce58\ub97c \uc801\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \ud070 \ud568\uc218\ub4e4\uc744 \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud55c\ub2e4. \ub3d9\uc801\ucd94\uc801\uc5d0 \ub300\ud574\uc11c\ub294 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -E EVENT , --event= EVENT : \uc774\ubca4\ud2b8 \ucd94\uc801\uc744 \ud65c\uc131\ud654\ud55c\ub2e4. \uc2dc\uc2a4\ud15c \ub0b4\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\uc5ec\uc57c \ud55c\ub2e4. -S SCRIPT_PATH , --script= SCRIPT_PATH : \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc8fc\uc5b4\uc9c4 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ud65c\uc6a9\ud574\uc11c \ucd94\uac00\uc801\uc778 \uc791\uc5c5\uc744 \ud55c\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc5b8\uc5b4 \uc885\ub958\ub294 \ud30c\uc77c\uc758 \ud655\uc7a5\uc790\ub97c \ud1b5\ud574 \uc815\ud574\uc9c0\ub294\ub370 \ud30c\uc774\uc36c\uc758 \uacbd\uc6b0 \".py\" \uc774\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589 \uc124\uba85\uc740 SCRIPT EXECUTION \uc744 \ucc38\uace0\ud55c\ub2e4. -W, --watch= POINT : \ud2b9\uc815\ud55c \uac12\uc774 \ubcc0\uacbd\ub418\uc5c8\uc744 \uacbd\uc6b0 \uc774\ub97c \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud574 watch point \ub97c \ucd94\uac00\ud55c\ub2e4. \uc790\uc138\ud55c \uc0ac\ud56d\uc740 WATCH POINT \ub97c \ucc38\uace0\ud55c\ub2e4. -a, --auto-args : \uc54c\ub824\uc9c4 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\ub4e4\uc744 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ud55c\ub2e4. \ubcf4\ud1b5\uc758 \uacbd\uc6b0 C \uc5b8\uc5b4 \ub610\ub294 \uc2dc\uc2a4\ud15c\uc758 \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc5d0 \ud574\ub2f9\ud558\uc9c0\ub9cc, \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\ub3c4 \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. -l, --nest-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4 \uac04\uc758 \ud568\uc218 \ud638\ucd9c\ub3c4 \ud568\uaed8 \uae30\ub85d\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c uftrace \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \uc9c1\uc811 \ud638\ucd9c\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. -k, --kernel : \uc0ac\uc6a9\uc790 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218\uc640 \ud568\uaed8 \ucee4\ub110 \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \ucee4\ub110\ub85c\uc758 \uc9c4\uc785 \ubc0f \ubcf5\uadc0 \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. \uc774\ub97c \ubcc0\uacbd\ud558\ub824\uba74 --kernel-depth \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. -K DEPTH , --kernel-depth= DEPTH : \ucee4\ub110 \ucd5c\ub300 \ud568\uc218 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. --kernel \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. --clock= CLOCK : \ud0c0\uc784\uc2a4\ud0ec\ud504\ub97c \uc77d\ub294 \ud074\ub7ed \uc18c\uc2a4\ub97c \uc124\uc815\ud55c\ub2e4. CLOCK \uc740 'mono', 'mono_raw', 'boot' \uc911\uc758 \ud558\ub098\ub85c \uc124\uc815 \uac00\ub2a5\ud558\uace0, \uae30\ubcf8 \uc124\uc815\uc740 'mono' \uc774\ub2e4. --signal= TRG : \ud568\uc218\uac00 \uc544\ub2cc \uc120\ud0dd\ud55c \uc2dc\uadf8\ub110\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc81c\ud55c \uc0ac\ud56d\ub4e4\ub85c \uc778\ud558\uc5ec \uc18c\uc218 \ud2b8\ub9ac\uac70 \uae30\ub2a5\ub9cc\uc744 \uc9c0\uc6d0\ud558\uace0 \uc788\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc791\uc5c5: : trace_on, trace_off, finish. \uc774 \uc635\uc158\uc740 \ub450\ubc88 \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70 \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. --nop : \uc5b4\ub5a4 \ud568\uc218\ub3c4 record \ud558\uac70\ub098 replay\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774\ub294 \uc544\ubb34 \uc77c\ub3c4 \ud558\uc9c0 \uc54a\ub294 \uba85\ub839\uc5b4\ub85c, \uc131\ub2a5 \ube44\uad50\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --force : \uc57d\uac04\uc758 \ubb38\uc81c\uac00 \uc788\uc5b4\ub3c4 uftrace \uac00 \uc2e4\ud589\ub41c\ub2e4. uftrace record \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \ucef4\ud30c\uc77c\ub7ec\uc5d0 \uc758\ud574 \uc0dd\uc131\ub418\ub294 mcount \ub97c \ucc3e\uc744 \uc218 \uc5c6\uc744 \ub54c uftrace \uac00 \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc624\ub958 \uba54\uc2dc\uc9c0\uc640 \ud568\uaed8 \uc885\ub8cc\ub41c\ub2e4. \ub2e8, \uc0ac\uc6a9\uc790\ub294 \ub3d9\uc801\uc73c\ub85c \uc5f0\uacb0\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ub0b4\uc758 \uae30\ub2a5\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uc744 \uc218 \uc788\uc73c\uba70, \uc774 \uacbd\uc6b0 --force \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec uftrace \ub97c \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc788\ub2e4. \ub610\ud55c -A / --argument \ubc0f -R / --retval \uc635\uc158\uc740 -pg \ub85c \ucef4\ud30c\uc77c\ub41c \ubc14\uc774\ub108\ub9ac\uc5d0 \ub300\ud574\uc11c\ub9cc \uc791\ub3d9\ud558\ubbc0\ub85c, uftrace \ub294 \uadf8 \uc635\uc158 \uc5c6\uc774 \ube4c\ub4dc\ub41c \ubc14\uc774\ub108\ub9ac\ub97c \uc2e4\ud589\ud558\ub824\uace0 \ud560 \ub54c\uc5d0\ub3c4 \uc885\ub8cc\ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \uacbd\uace0\ub97c \ubb34\uc2dc\ud558\uace0 \uc778\uc218 \ubc0f \ubc18\ud658 \uac12 \uc5c6\uc774 uftrace \ub97c \uc2e4\ud589\uc2dc\ud0a4\ub3c4\ub85d \ud55c\ub2e4. --time : time(1) \uc2a4\ud0c0\uc77c\ub85c \uc2e4\ud589\uc2dc\uac04\uc744 \ucd9c\ub825\ud55c\ub2e4. -e, --estimate-return : \uac01 \ud568\uc218\uc758 \uc9c4\uc785 \ub370\uc774\ud130\ub9cc\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2a4\ud0dd\uc744 \ub2e4\ub8f0 \uacbd\uc6b0 \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace\ub294 \ud568\uc218\uc758 \ubc18\ud658\uac12\uc744 \ud6c4\ud0b9\ud558\uae30 \uc704\ud574 \uc791\uc5c5 \ub300\uc0c1\uc758 \uc2e4\ud589 \uc2a4\ud0dd \ud504\ub808\uc784\uc744 \uc218\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ub54c\ub54c\ub85c \ubb38\uc81c\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uace0 \ubaa8\ub4e0 \uacbd\uc6b0\ub97c \ub2e4\ub8e8\uae30 \uc5b4\ub835\ub2e4. \uc774 \uc635\uc158\uc740 uftrace\uac00 \ub9ac\ud134 \uc8fc\uc18c\ub97c \ud6c4\ud0b9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc5ec \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \uc608\ubc29\ud55c\ub2e4. \ubc18\ud658\ub41c \uc2dc\uac04\uc740 \uc5f0\uc18d\ub41c \ub450 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \uc2dc\uac04\uc758 \uc808\ubc18\uc73c\ub85c \uc608\uce21\ub41c\ub2e4.","title":"RECORD \uc635\uc158"},{"location":"ko/uftrace-live/#record_1","text":"--libmcount-path= PATH : limcount \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c PATH \uc5d0\uc11c \uba3c\uc800 \ucc3e\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\ubd80\ubd84 \ud14c\uc2a4\ud2b8 \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub41c\ub2e4. -b SIZE , --buffer= SIZE : \uc800\uc7a5\ud560 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8 \uc0ac\uc774\uc988\ub294 128k \uc774\ub2e4. --kernel-buffer= SIZE : \uc800\uc7a5\ud560 \ucee4\ub110 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \ucee4\ub110 \ub0b4\ubd80\uc758 \uae30\ubcf8 \uc124\uc815\uc740 1408k \uc774\ub2e4. --no-pltbind : \ub3d9\uc801 \uc2ec\ubcfc \uc8fc\uc18c\ub97c \ubc14\uc778\ub529\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 LD_BIND_NOT \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc2dc\uc801\uc73c\ub85c \ubc1c\uc0dd\ud558\ub294 (\uccab \ubc88\uc9f8) \uc811\uadfc\uc73c\ub85c \uc778\ud574 \ub204\ub77d\ub420 \uc218 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. --no-libcall \uc635\uc158\uacfc \ud568\uaed8 \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc758\ubbf8\uac00 \uc5c6\ub2e4. --max-stack= DEPTH : \ub0b4\ubd80\uc801\uc73c\ub85c \uae30\ub85d\ud558\ub294 \ud568\uc218 \ud638\ucd9c \uc2a4\ud0dd\uc758 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 1024 \uc774\ub2e4. --num-thread= NUM : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 NUM \uac1c\uc758 \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 1/4 \uc73c\ub85c \uc124\uc815\ud55c\ub2e4. (\ud558\uc9c0\ub9cc \ucee4\ub110\uc744 \ud3ec\ud568\ud574 \uc804\uccb4\ub97c \uae30\ub85d\ud558\ub294 \uacbd\uc6b0, \ucd5c\ub300\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 \uc218\ub85c \uc124\uc815\ud55c\ub2e4.) --libmcount-single : \ube60\ub978 \ub370\uc774\ud130 \uae30\ub85d\uc744 \uc704\ud574\uc11c libmcount \uc758 \ub2e8\uc77c \uc4f0\ub808\ub4dc \ubc84\uc804\uc744 \uc0ac\uc6a9\ud55c\ub2e4. \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 pthread \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubb34\uc2dc\ub41c\ub2e4. --rt-prio= PRIO : \ub370\uc774\ud130 \uae30\ub85d\uc744 \ud558\ub294 \uc2a4\ub808\ub4dc\ub97c PRIO \ub97c \uc6b0\uc120\uc21c\uc704\ub85c \uac16\ub294 \uc2e4\uc2dc\uac04(FIFO)\ub85c \ud5a5\uc0c1\uc2dc\ud0a8\ub2e4. \uc774 \uc635\uc158\uc740 \ud2b9\ud788 \ub300\uaddc\ubaa8 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\ub294 \uc804\uccb4 \ucee4\ub110 \ucd94\uc801\uacfc \uac19\uc740 \ud658\uacbd\uc5d0\uc11c \uc720\uc6a9\ud558\ub2e4. --keep-pid : \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \ub54c \ub3d9\uc77c\ud55c pid \uac12\uc744 \uc720\uc9c0\ud558\uac8c \ud574\uc900\ub2e4. \uc77c\ubd80 \ub370\ubaac \ud504\ub85c\uc138\uc2a4\uc758 \uacbd\uc6b0 \ubd84\uae30 \ud560 \ub584 \ub3d9\uc77c\ud55c pid \ub97c \uac16\ub294\uac83\uc774 \uc911\uc694\ud558\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace \ub97c \uc2e4\ud589\ud558\uba74 fork() \ub97c \ub0b4\ubd80\uc801\uc73c\ub85c \ub2e4\uc2dc \ud638\ucd9c\ud558\ubbc0\ub85c pid \uac00 \ubcc0\uacbd\ub41c\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ud130\ubbf8\ub110 \uc124\uc815\uc774 \uc190\uc0c1\ub418\ub294 \uacbd\uc6b0\uac00 \uc788\uae30 \ub584\ubb38\uc5d0 --no-pager \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. --no-randomize-addr : ASLR(Address Space Layout Randomization)\uc744 \ube44\ud65c\uc131\ud654 \ud55c\ub2e4. \uc774\ub294 \ud504\ub85c\uc138\uc2a4\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub85c\ub529 \uc8fc\uc18c\uac00 \ub9e4\ubc88 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c9\uc544\uc900\ub2e4.","title":"RECORD \uc124\uc815 \uc635\uc158"},{"location":"ko/uftrace-live/#replay","text":"-f FIELD , --output-fields= FIELD : \uacb0\uacfc\ub85c \ubcf4\uc5ec\uc9c0\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294 duration, tid, time, delta, elapsed, addr \uac00 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'duration,tid' \uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. --flat : C \uc640 \uac19\uc774 \ud638\ucd9c \uae4a\uc774\uac00 \ubcf4\uc774\ub294 \ubc29\uc2dd\uc774 \uc544\ub2cc \ud3c9\ud3c9\ud55c(flat) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \uc8fc\ub85c \ub514\ubc84\uae45\uc774\ub098 \ud14c\uc2a4\ud2b8 \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub41c\ub2e4. --column-view : \uc5f4(column) \ubcc4\ub85c \ubd84\ub9ac\ud558\uc5ec \uac01\uac01\uc758 \ud0dc\uc2a4\ud06c\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc11c\ub85c \ub2e4\ub978 \ud0dc\uc2a4\ud06c\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ud568\uc218\uc758 \uad6c\ubd84\uc744 \uc27d\uac8c\ud55c\ub2e4. --column-offset= DEPTH : --column-view \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c, \uc774 \uc635\uc158\uc740 \uac01 \ud0dc\uc2a4\ud06c \uc0ac\uc774\uc758 \uac04\uaca9(offset) \ud06c\uae30\ub97c \uba85\uc2dc\ud55c\ub2e4. \uae30\ubcf8 \uac04\uaca9\uc740 8 \uc774\ub2e4. --task-newline : \ud0dc\uc2a4\ud06c\uac00 \ubcc0\uacbd\ub418\uba74 \ube48 \uacf5\ubc31 \ud55c\uc904\uc744 \ucd94\uac00\ud55c\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5ec\ub7ec \ud0dc\uc2a4\ud06c\uc5d0\uc11c \ub3d9\uc791\ud558\ub294 \ud568\uc218\ub4e4\uc744 \uc27d\uac8c \uad6c\ubcc4 \ud560 \uc218 \uc788\ub2e4. --no-comment : \ud568\uc218\uac00 \ubc18\ud658\ub418\ub294 \uacf3\uc5d0 \uc8fc\uc11d\uc744 \ucd9c\ub825\ud558\uc9c0 \uc54a\ub294\ub2e4. --libname : \ud568\uc218 \uc774\ub984\uacfc \ud568\uaed8 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4.","title":"REPLAY \uc635\uc158"},{"location":"ko/uftrace-live/#_5","text":"-H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"\uacf5\ud1b5 \ubd84\uc11d \uc635\uc158"},{"location":"ko/uftrace-live/#filters","text":"uftrace \ub294 \uad00\uc2ec \uc788\ub294 \ub300\uc0c1\uc774 \uc544\ub2cc \ud568\uc218\ub4e4\uc744 \uac10\ucd94\ub294 \ud544\ud130\ub9c1\uc744 \ud560 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\uc790\ub4e4\uc774 \uad00\uc2ec \uc788\ub294 \ud568\uc218\ub4e4\uc5d0\ub9cc \uc9d1\uc911\ud560 \uc218 \uc788\uac8c \ud558\uace0, \uae30\ub85d\ub418\ub294 \ub370\uc774\ud130\uc758 \ud06c\uae30\ub97c \uc904\uc77c \uc218 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ud55c\ub2e4. uftrace \uac00 \ud638\ucd9c\ub418\uba74, \ub450 \uc885\ub958\uc758 \ud568\uc218 \ud544\ud130\ub97c \uac16\uac8c \ub418\ub294\ub370 \uc774\ub4e4\uc740 \ub300\uc0c1 \ud568\uc218\ub97c \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd(opt-in)\uc758 \ud544\ud130\ub85c -F / --filter \uc640 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd(opt-out)\uc758 \ud544\ud130\uc778 -N / --notrace \uac00 \uc788\ub2e4. \uc774 \ud544\ud130\ub4e4\uc740 \uae30\ub85d(record)\ud558\uac70\ub098 \uc7ac\uc0dd(replay)\ud560 \ub54c \ubaa8\ub450 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4. \uccab\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \uc774\uac83\uc740 \uc544\ubb34\uac83\ub3c4 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \uc5b4\ub5a4 \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uba74, \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ucd94\uc801\uc744 \uc2dc\uc791\ud55c\ub2e4. \uadf8\ub7ec\ub2e4\uac00 \uadf8 \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc911\ub2e8\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, a() , b() \uc640 c() \ub97c \ucc28\ub840\ub85c \ud638\ucd9c\ud558\ub294 \uac04\ub2e8\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \uc0dd\uac01\ud574\ubcf4\uc790. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 uftrace \ub294 main() \ubd80\ud130 c() \uae4c\uc9c0\uc758 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace live ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c\ub294 \uba85\uc2dc\uc801\uc73c\ub85c live \uba85\ub839\uc5b4\uac00 \uc4f0\uc600\ub2e4. \ud558\uc9c0\ub9cc live \uba85\ub839\uc5b4\ub294 \uae30\ubcf8 \uba85\ub839\uc5b4\uc774\uae30 \ub54c\ubb38\uc5d0 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \ub530\ub77c\uc11c \uc704\uc758 \uba85\ub839\uc5b4\ub294 \uac04\ub2e8\ud558\uac8c uftrace ./abc \ub97c \uc2e4\ud589\ud574\ub3c4 \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\ub2e4. \ud558\uc9c0\ub9cc -F b \ud544\ud130 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub294, main() \uacfc a() \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uace0 \uc624\uc9c1 b() \uc640 c() \ub9cc\uc774 \ud3ec\ud568\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc77c\uac83\uc774\ub2e4. $ uftrace -F b ./abc # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ \ub450\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \uac83\uc774 \ucd94\uc801\ub418\uc9c0\ub9cc, \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uba48\ucd98\ub2e4. \uc81c\uc678\ub41c \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uc7ac\uac1c\ud55c\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c, b() \ud568\uc218\uc640 \uadf8\uc758 \ubaa8\ub4e0 \ud638\ucd9c\uc740 -N \uc635\uc158\uc73c\ub85c \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. $ uftrace -N b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ b() \ud568\uc218\ub9cc\uc744 \uc228\uae30\uace0 \uadf8\uc758 \ud558\uc704 \ud568\uc218\ub4e4\uc740 \uadf8\ub300\ub85c \ubcf4\uace0 \uc2f6\uc73c\uba74 -H \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace -H b ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704\uc758 -H \uc635\uc158\uc740 \ud2b9\ud788 C++ \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c -H ^std:: \uc640 \uac19\uc774 \uc0ac\uc6a9\ud574\uc11c std \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud638\ucd9c\ub4e4\uc744 \uc228\uae38\ub54c \uc720\uc6a9\ud558\ub2e4. \ub9cc\uc77c \ud2b9\uc815 \ud568\uc218\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uace0 \uadf8 \ud568\uc218\uac00 \uc5b4\ub5bb\uac8c \ud638\ucd9c\ub418\ub294\uc9c0\ub9cc \uc54c\uace0 \uc2f6\ub2e4\uba74, caller filter \ub97c \uc0ac\uc6a9\ud558\uba74 \ub420 \uac83\uc774\ub2e4. \uadf8 \ud568\uc218\ub97c \ub9c8\uc9c0\ub9c9(leaf) \ub178\ub4dc\ub85c \ub9cc\ub4e4\uace0, \uadf8 \ud568\uc218\uc758 \ubaa8\ub4e0 \ubd80\ubaa8 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace -C b ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, \ud638\ucd9c \uacbd\ub85c\uc5d0 \uc5c6\ub294 \ud568\uc218\ub4e4\uc740 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, \ud568\uc218 b() \uc758 \uc790\uc2dd \ud568\uc218\uc778 \ud568\uc218 c() \ub610\ud55c \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, -D \uc635\uc158\uc73c\ub85c \ud568\uc218\uc758 \uc911\ucca9 \uae4a\uc774\uc744 \uc81c\ud55c\ud560 \uc218\ub3c4 \uc788\ub2e4. $ uftrace -D 3 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, uftrace \ub294 \ud568\uc218 \ud638\ucd9c \uae4a\uc774\ub97c \ucd5c\ub300 3 \uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd9c\ub825\ud588\uae30 \ub54c\ubb38\uc5d0, \ub9c8\uc9c0\ub9c9 \ud568\uc218\uc778 c() \ub294 \uc0dd\ub7b5\ub418\uc5c8\ub2e4. -D \uc635\uc158\uc740 -F \uc635\uc158\uacfc \ud568\uaed8 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ub54c\ub85c\ub294, \uae34 \uc2dc\uac04 \ub3d9\uc548 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\ub9cc\uc744 \ubcf4\ub294 \uac83\uc774 \uc720\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc9e7\uc740 \uc2e4\ud589 \uc2dc\uac04\uc744 \uac16\ub294 \uc791\uc740 \uaddc\ubaa8\uc758 \ud568\uc218\ub4e4\uc740 \ub300\ubd80\ubd84 \uad00\uc2ec \ub300\uc0c1\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc774\ub2e4. -t / --time-filter \uc635\uc158\uc740 \uba85\uc2dc\ub41c \uc784\uacc4\uc2dc\uac04\ubcf4\ub2e4 \uc624\ub798 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ubcfc \uc218 \uc788\uac8c \ud558\ub294 \uc2dc\uac04 \uae30\ubc18\uc758 \ud544\ud130\uc774\ub2e4. \uc704\uc758 \uc608\uc2dc\uc5d0\uc11c, \uc0ac\uc6a9\uc790\ub294 \uc544\ub798\uc640 \uac19\uc774 5 \ub9c8\uc774\ud06c\ub85c\ucd08(us) \uc774\uc0c1 \uac78\ub824\uc11c \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ubcf4\uace0 \uc2f6\uc5b4 \ud560 \uc218 \uc788\ub2e4. $ uftrace -t 5us ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ud544\ud130\ub9c1\ub41c \ud568\uc218\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4. \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 TRIGGERS \ud56d\ubaa9\uc5d0\uc11c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. \ucee4\ub110 \ud568\uc218 \ucd94\uc801\uc744 \uc124\uc815\ud558\uba74, @kernel \uc2dd\ubcc4\uc790\ub97c \ud1b5\ud574 \ucee4\ub110 \ud568\uc218\uc5d0 \ub300\ud55c \ud544\ud130\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ud558 \uc608\uc2dc\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \ud568\uc218\uc640 (\ucee4\ub110 \ub808\ubca8\uc758) page fault \ud578\ub4e4\ub7ec\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */","title":"FILTERS"},{"location":"ko/uftrace-live/#triggers","text":"uftrace \ub294 (\ud544\ud130\uac00 \uc788\ub4e0 \uc5c6\ub4e0) \uc120\ud0dd\ub41c \ud568\uc218 \ud638\ucd9c\uacfc \uc2dc\uadf8\ub110\uc5d0 \ub300\ud55c \ud2b8\ub9ac\uac70 \ub3d9\uc791\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \ud2b8\ub9ac\uac70\uc640 \uc0ac\uc591\uc5d0 \ub300\ud55c BNF \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace\" | \"trace_on\" | \"trace_off\" | \"recover\" | \"color=\"<color> | \"time=\"<time_spec> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"hide\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" depth \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud544\ud130\uc758 \uae4a\uc774\ub97c \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\uc591\ud55c \ud568\uc218\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \ud544\ud130 \uae4a\uc774\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. \uadf8\ub9ac\uace0 backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc2dc \uc2a4\ud0dd \ubc31\ud2b8\ub808\uc774\uc2a4\ub97c \ucd9c\ub825\ud55c\ub2e4. color \ud2b8\ub9ac\uac70\ub294 replay \uba85\ub839\uc5b4\uc5d0\uc11c \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud55c\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc0c9\uc0c1\uc740 red , green , blue , yellow , magenta , cyan , bold , gray \uac00 \uc788\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ud2b8\ub9ac\uac70 \uc791\ub3d9 \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc804\uc5ed \ud544\ud130 \uae4a\uc774\uac00 5 \ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc9c0\ub9cc b() \ud568\uc218\uc5d0 depth \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud558\uc5ec b() \uc544\ub798 \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uac8c\ub41c\ub2e4. $ uftrace -D 5 -T 'b@depth=1' ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. trace_on \uacfc trace_off \ud2b8\ub9ac\uac70\ub294 uftrace \uac00 \uc9c0\uc815\ub41c \ud568\uc218\ub97c \uae30\ub85d\ud560\uc9c0 \uc5ec\ubd80\ub97c \uad00\ub9ac\ud55c\ub2e4. \ub610\ud55c, _ \ubb38\uc790 \uc5c6\uc774 traceon \uacfc traceoff \ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. recover \ud2b8\ub9ac\uac70\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \ud638\ucd9c \uc2a4\ud0dd(call stack)\uc5d0 \uc9c1\uc811 \uc811\uadfc\ud558\ub294 \uc77c\ubd80 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4. \uc608\ub97c\ub4e4\uc5b4, v8 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc5d4\uc9c4\uc744 \ucd94\uc801\ud558\ub294 \ub3d9\uc548 \uac00\ube44\uc9c0 \uceec\ub809\uc158 \ub2e8\uacc4\uc5d0\uc11c \uc138\uadf8\uba58\ud14c\uc774\uc158 \ud3f4\ud2b8 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ub41c\ub2e4\uba74 \uc774\ub294 v8 \uc774 (\ubcc0\uacbd\ub41c) \ubc18\ud658 \uc8fc\uc18c\ub97c \ud1b5\ud574 \ucef4\ud30c\uc77c\ub41c \ucf54\ub4dc \uac1d\uccb4\uc5d0 \uc811\uadfc\ud558\ub824 \ud558\uae30 \ub54c\ubb38\uc774\ub2e4. recover \ud2b8\ub9ac\uac70\ub294 \ud568\uc218 \uc9c4\uc785\uc810\uc5d0 \uc6d0\ub798 \ubc18\ud658 \uc8fc\uc18c\ub97c \ubcf5\uc6d0\ud558\uace0 \ud568\uc218 \ubc18\ud658\uc810\uc5d0\uc11c \ub2e4\uc2dc uftrace \uc5d0\uc11c \uc870\uc791\ud55c \ubc18\ud658 \uc8fc\uc18c\ub85c \uc7ac\uc124\uc815\ud55c\ub2e4. (\ud2b9\ud788 v8 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc5d4\uc9c4 \uc0ac\ub840\uc5d0\uc11c ExitFrame::Iterate \ud568\uc218\uc640 \uac19\uc774 \ubb38\uc81c\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uc0c1\ud669\uc5d0\uc11c recover \ud2b8\ub9ac\uac70\ub97c \uc0ac\uc6a9\ud558\uba74 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218 \uc788\ub2e4.) time \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04 \ud544\ud130(time-filter) \uc124\uc815\uc744 \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\ub978 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c \uc11c\ub85c \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130\ub97c \uc801\uc6a9\ud560 \ub584 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. read \ud2b8\ub9ac\uac70\ub294 \uc2e4\ud589 \uc2dc\uc5d0 \uc77c\ubd80 \uc815\ubcf4\ub97c \uc77d\uc744 \uc218 \uc788\ub2e4. \uacb0\uacfc\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc5d0 (\ub0b4\uc7a5) \uc774\ubca4\ud2b8\uc758 \ud615\ud0dc\ub85c \uae30\ub85d\ub41c\ub2e4. \ud604\uc7ac \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\ubca4\ud2b8\uac00 \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. \"proc/statm\": /proc \uc73c\ub85c\ubd80\ud130\uc758 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uc815\ubcf4 \"page-fault\": getrusage(2)\ub97c \uc0ac\uc6a9\ud55c \ud398\uc774\uc9c0 \ud3f4\ud2b8(page fault) \ud69f\uc218 \"pmu-cycle\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c cpu \ud074\ub7ed \uc0ac\uc774\ud074 \ubc0f \uba85\ub839\uc5b4 \uc2e4\ud589 \ud69f\uc218 \"pmu-cache\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c \uce90\uc2dc \ucc38\uc870(reference) \ubc0f \uc2e4\ud328(miss) \"pmu-branch\": Perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \uc0ac\uc6a9\ud55c \ubd84\uae30\uc608\uce21(branch prediction) \ubc0f \uc2e4\ud328(miss) \uacb0\uacfc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc8fc\uc11d\uc758 \ud615\ud0dc\ub85c \uc774\ubca4\ud2b8 \uc815\ubcf4\uac00 \ucd9c\ub825\ub41c\ub2e4. $ uftrace -T a@read=proc/statm ./abc # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ finish \ud2b8\ub9ac\uac70\ub294 \uae30\ub85d(record)\uc744 \uc885\ub8cc\ud560 \ub584 \uc0ac\uc6a9\ud55c\ub2e4. \ub370\ubaac\uacfc \uac19\uc774 \uc885\ub8cc\ub418\uc9c0 \uc54a\ub294 \ud504\ub85c\uc138\uc2a4\ub97c \ucd94\uc801\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub2e4. filter \uc640 notrace \ud2b8\ub9ac\uac70\ub294 \uac01\uac01 -F / --filter \uc640 -N / --notrace \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\ub2e4. hide \ud2b8\ub9ac\uac70\ub294 \ud2b9\uc815 \ud568\uc218\ub97c \ubcf4\uc774\uc9c0 \uc54a\uac8c \ud558\ub294 -H / --hide \uc635\uc158\uacfc \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\uc5b4\uc11c notrace \uc640 \ub2e4\ub974\uac8c \ud558\uc704 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4. \ud2b8\ub9ac\uac70\ub294 \ud604\uc7ac \ucee4\ub110 \ud568\uc218\ub97c \uc81c\uc678\ud55c \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ud2b8\ub9ac\uac70\ub294 \uc2dc\uadf8\ub110\ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 signal \ud2b8\ub9ac\uac70\uc5d0 \uc758\ud574 \uc218\ud589\ub418\uba70 \ud568\uc218 \ud2b8\ub9ac\uac70\uc640 \ube44\uc2b7\ud558\uc9c0\ub9cc \ud604\uc7ac\ub294 \"trace_on\", \"trace_off\" \ubc0f \"finish\" \ud2b8\ub9ac\uac70\ub9cc \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. $ uftrace --signal 'SIGUSR1@finish' ./some-daemon","title":"TRIGGERS"},{"location":"ko/uftrace-live/#arguments","text":"uftrace \ub294 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\uc744 \uac01\uac01 -A / \\--argument \uc640 -R / \\--retval \ub85c \uae30\ub85d\ud560 \uc218 \uc788\ub2e4. \uc774\uc5d0 \ub300\ud55c \ubb38\ubc95\uccb4\uacc4\ub294 \ud2b8\ub9ac\uac70\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\ub2e4. <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> -A / \\--argument \uc635\uc158\uc740 symbol \uc758 \uc774\ub984\uacfc \uadf8\uac83\uc758 spec \ub4e4\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ubc1b\ub294\ub2e4. spec \uc740 argN \uc73c\ub85c \uc2dc\uc791\ub418\ub294\ub370 \uc5ec\uae30\uc11c N \uc740 \uc778\uc790\uc758 \uc778\ub371\uc2a4\uac12\uc774\ub2e4. \uc778\ub371\uc2a4\ub294 1 \ubd80\ud130 \uc2dc\uc791\ub418\uba70, \uc21c\uc11c\ub294 \ud568\uc218\ud638\ucd9c\uaddc\uc57d(calling convention)\uc758 \uc778\uc790 \uc804\ub2ec \uc21c\uc11c\uc640 \ub300\uc751\ub41c\ub2e4. \uc778\uc790\uc758 \uc778\ub371\uc2a4\ub294 \uc815\uc218\ud615 (\ud639\uc740 \ud3ec\uc778\ud130\ud615) \uacfc \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uac01\uac01 \ub530\ub85c \uad00\ub9ac\ub41c\ub2e4\ub294 \uc810, \uadf8\ub9ac\uace0 \uc774\ub4e4\uc740 \ud568\uc218\ud638\ucd9c\uaddc\uc57d\uc5d0 \ub530\ub77c \uac01\uae30 \uac04\uc12d\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\ub77c. argN \uc740 \uc815\uc218\ud615 \uc778\uc790\ub97c, fpargN \uc740 \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uc778\uc790\ub97c \uc704\ud55c \ud45c\uae30\uc774\ub2e4. \"d\" \ud615\uc2dd \ud639\uc740 \uc544\ubb34 \ud615\uc2dd\ub3c4 \uc8fc\uc9c0 \uc54a\uc744 \uacbd\uc6b0, uftrace \ub294 \uc815\uc218\ud615\uc740 'long int'\ud615\uc73c\ub85c \uac04\uc8fc\ud558\uace0 \uc18c\uc218\uc810\ud615\uc5d0 \ub300\ud574\uc11c\ub294 'double'\ud615\uc73c\ub85c \uac04\uc8fc\ud55c\ub2e4. \"i\" \ud615\uc2dd\uc740 signed \uc815\uc218\ud615\uc73c\ub85c, \"u\" \ud615\uc2dd\uc740 unsigned \uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \ub450 \ud615\uc2dd \ubaa8\ub450 10 \uc9c4\uc218\uac00 \ucd9c\ub825\ub418\ub294 \ud55c\ud3b8 \"x\" \ud615\uc2dd\uc740 16 \uc9c4\uc218\ub85c, \"o\" \ud615\uc2dd\uc740 8\uc9c4\uc218\ub85c \ucd9c\ub825\ub418\uac8c \ud55c\ub2e4. \"s\" \ub294 null \uc744 \uc81c\uc678\ud55c \ubb38\uc790\uc5f4 \ucd9c\ub825\uc744 \uc704\ud55c \ud615\uc2dd\uc774\uace0, \"c\" \ub294 \ub2e8\uc77c \ubb38\uc790\ub97c \uc704\ud55c \ud615\uc2dd\uc774\ub2e4. \"f\" \ud615\uc2dd\uc740 \ubd80\ub3d9 \uc18c\uc218\uc810\uc744 \ucd9c\ub825\ud558\ub294\ub370, (\uc77c\ubc18\uc801\uc73c\ub85c) \ubc18\ud658\uac12\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. fpargN \uc740 \ud56d\uc0c1 \uc18c\uc218\uc810 \ubc29\uc2dd\uc774\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub5a4 \ud615\uc2dd \ud544\ub4dc\ub3c4 \uc5c6\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \"S\" \ud615\uc2dd\uc740 std::string \uc744 \uc704\ud55c \ud615\uc2dd\uc774\uc9c0\ub9cc, \uc544\uc9c1\uae4c\uc9c0\ub294 libstdc++ \ub77c\uc774\ube0c\ub7ec\ub9ac\ub9cc \uc9c0\uc6d0\uac00\ub2a5\ud558\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \"p\" \ud615\uc2dd\uc740 \ud568\uc218\ud3ec\uc778\ud130 \ud615\uc2dd\uc774\ub2e4. \ucd94\uc801 \ub300\uc0c1\uc758 \uc8fc\uc18c\uac00 \uae30\ub85d\ub418\uba74, \uc5b8\uc81c\ub098 \ud568\uc218 \uc774\ub984\uc73c\ub85c \ucd9c\ub825\ub41c\ub2e4. \ubb38\uc790\uc5f4 \ud0c0\uc785\uc758 \uc778\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c (\ud3ec\uc778\ud130) \uac12\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ud504\ub85c\uadf8\ub7a8\uc744 \ube44\uc815\uc0c1 \uc885\ub8cc\uc2dc\ud0ac \uc218 \uc788\uc74c\uc5d0 \uc8fc\uc758\ud558\ub77c. \uc0ac\uc2e4 uftrace \ub294 \uc720\ud6a8\ud55c \ud504\ub85c\uc138\uc2a4 \uc8fc\uc18c \uacf5\uac04\uc758 \ubc94\uc704\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \uc810\uac80\ud558\ub824\uace0 \ub178\ub825\ud558\uc9c0\ub9cc, \uba87\uba87\uc758 \uacbd\uc6b0\ub4e4\uc744 \ub193\uce60 \uc218 \uc788\ub2e4. \ub610\ud55c \ud2b9\uc815 \ub808\uc9c0\uc2a4\ud130\uc758 \uc774\ub984\uc774\ub098 \uc2a4\ud0dd \uc624\ud504\uc14b(offset)\uc73c\ub85c\ub3c4 \uc778\uc790\ub85c \uba85\uc2dc\ud560 \uc218 \uc788\ub2e4. (\ubc18\ud658\uac12\uc740 \ubd88\uac00\ud558\ub2e4) \uc544\ub798\ub294 \uc778\uc790\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud130 \uc774\ub984\ub4e4\uc774\ub2e4. x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4. $ uftrace -A main@arg1/x -R main@retval/i32 ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace -A puts@arg1/s -R puts@retval ./hello Hello world # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ \uc774 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc740 \uc2e4\ud589\ud30c\uc77c\uc774 -pg \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ub418\uc5c8\uc744 \ub54c\uc5d0\ub9cc \uae30\ub85d\ub428\uc5d0 \uc720\uc758\ud558\ub77c. -finstrument-functions \ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \uc2e4\ud589\ud30c\uc77c\ub4e4\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubb34\uc2dc\ub41c\ub2e4. \uc778\uc790\uc640 \ubc18\ud658\uac12\uc758 \uae30\ub85d\uc740 \uc544\uc9c1\uae4c\uc9c4 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud568\uc218\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ub9cc\uc77c \ud504\ub85c\uadf8\ub7a8\uc774 DWARF \uc640 \uac19\uc740 \ub514\ubc84\uadf8 \uc815\ubcf4\uc640 \ud568\uaed8 \ube4c\ub4dc\ub418\uc5c8\ub2e4\uba74, (libdw \uc640 \ud568\uaed8 \ube4c\ub4dc\ub41c) uftrace \ub294 \uc790\ub3d9\uc73c\ub85c \uc778\uc790\ub4e4\uc758 \uac2f\uc218\uc640 \uc790\ub8cc\ud615\ub4e4\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub354\ub77c\ub3c4, \uba87\uba87 \uc798 \uc54c\ub824\uc9c4 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ub41c\ub2e4. \uc774 \uacbd\uc6b0 \uc0ac\uc6a9\uc790\ub294 \uc778\uc790\ub4e4\uc758 spec \uacfc \ubc18\ud658\uac12\uc744 \uc218\ub3d9\uc801\uc73c\ub85c \uba85\uc2dc\ud560 \ud544\uc694\uac00 \uc5c6\uc774 \ud568\uc218\uc758 \uc774\ub984 (\ub610\ub294 \ud328\ud134) \ub9cc \uc8fc\ub294 \uac83\uc73c\ub85c\ub3c4 \ucda9\ubd84\ud558\ub2e4. \uc0ac\uc2e4, \uba85\uc2dc\uc801\uc73c\ub85c argspec \uc744 \uc9c0\uc815\ud558\uba74 \uc790\ub3d9 argspec \uc744 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\ub2e4. $ uftrace -A . -R main -F main ./hello Hello world # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ \uc778\uc790 \ud328\ud134 (\".\")\uc740 \ubaa8\ub4e0 \ubb38\uc790\uc5d0 \ub300\uc751\ub418\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\ub4e4\uc774 \uae30\ub85d\ub418\uc5c8\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \uc704\uc5d0\uc11c\ub294 \"main\" \ud568\uc218\uc758 \ub450 \uc778\uc790\ub4e4\uacfc \"puts\" \uc758 \ud55c \ubb38\uc790\uc5f4 \uc778\uc790\ub97c \ubcf4\uc5ec\uc900\ub2e4. \ub9cc\uc77c (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\uc758 \ubaa8\ub4e0 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc744 \ubcf4\uace0 \uc2f6\ub2e4\uba74, -a / \\--auto-args \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub77c.","title":"ARGUMENTS"},{"location":"ko/uftrace-live/#fields","text":"uftrace \uc0ac\uc6a9\uc790\ub294 replay \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uc5ec\uae30\uc11c \ud544\ub4dc\ub780 \ud30c\uc774\ud504 \ubb38\uc790 (|) \uc67c\ucabd\uc5d0 \ub098\ud0c0\ub098\ub294 \uc815\ubcf4\ub97c \ub73b\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc9c0\uc18d\uc2dc\uac04 duration \uacfc tid \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace -f time,delta,duration,tid,addr ./abc # TIMESTAMP TIMEDELTA DURATION TID ADDRESS FUNCTION 75059.205379813 1.374 us [27804] 4004d0 | __monstartup(); 75059.205384184 4.371 us 0.737 us [27804] 4004f0 | __cxa_atexit(); 75059.205386655 2.471 us [27804] 4006b1 | main() { 75059.205386838 0.183 us [27804] 400656 | a() { 75059.205386961 0.123 us [27804] 400669 | b() { 75059.205387078 0.117 us [27804] 40067c | c() { 75059.205387264 0.186 us 0.643 us [27804] 4004b0 | getpid(); 75059.205388501 1.237 us 1.423 us [27804] 40067c | } /* c */ 75059.205388724 0.223 us 1.763 us [27804] 400669 | } /* b */ 75059.205388878 0.154 us 2.040 us [27804] 400656 | } /* a */ 75059.205389030 0.152 us 2.375 us [27804] 4006b1 | } /* main */ \uac01 \ud544\ub4dc\ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. tid: task id (gettid(2)\ub85c \uc5bb\uc744 \uc218 \uc788\ub2e4.) duration: \ud568\uc218 \uc2e4\ud589 \uc2dc\uac04 time: \ud0c0\uc784\uc2a4\ud0ec\ud504 \uc815\ubcf4 delta: \uc5b4\ub5a4 \uc791\uc5c5 \ub0b4 \ub450 \ud0c0\uc784\uc2a4\ud0ec\ud504\uc758 \ucc28\uc774 elapsed: \uccab \ud0c0\uc784\uc2a4\ud0ec\ud504\ub85c\ubd80\ud130\uc758 \uacbd\uacfc \uc2dc\uac04 addr: \ud574\ub2f9 \ud568\uc218\uc758 \uc8fc\uc18c task: \ud0dc\uc2a4\ud06c \uc774\ub984 (comm) module: \ub77c\uc774\ube0c\ub7ec\ub9ac \ud639\uc740 \uc2e4\ud589 \uac00\ub2a5\ud55c \ud568\uc218\uc758 \uc774\ub984 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'duration,tid'\uc774\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ub41c\ub2e4\uba74, \uadf8 \ud544\ub4dc\ub294 \uae30\ubcf8 \ud544\ub4dc\uac12\uc5d0 \ucd94\uac00\ub420 \uac83\uc774\ub2e4. \uc989, \"-f +time\" \ub294 \"-f duration,tid,time\" \uc640 \uac19\uc740 \uac83\uc774\ub2e4. \ub610\ud55c 'none'\uc774\ub77c\ub294 \ud2b9\ubcc4\ud55c \ud544\ub4dc\ub3c4 \ubc1b\uc744 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ud544\ub4dc \ucd9c\ub825\uc744 \ud558\uc9c0 \uc54a\uace0 \uc624\uc9c1 \ud568\uc218 \uc2e4\ud589 \uacb0\uacfc\ub9cc\uc744 \ubcf4\uc5ec\uc900\ub2e4.","title":"FIELDS"},{"location":"ko/uftrace-live/#dynamic-tracing","text":"uftrace \ub294 x86_64, AArch64 \ud658\uacbd\uc758 \ub7f0\ud0c0\uc784 (\uc815\ud655\ud558\uac8c\ub294, \ub85c\ub4dc \ud0c0\uc784) \uc5d0\uc11c \ub3d9\uc801\ucd94\uc801(dynamic tracing)\uc774 \uac00\ub2a5\ud558\ub2e4. \ud568\uc218\ub97c \uae30\ub85d\ud558\uae30 \uc804\uc5d0, \ubcf4\ud1b5 \ud504\ub85c\uadf8\ub7a8\uc744 -pg (\ud639\uc740 -finstrument-functions \uc73c\ub85c) \ube4c\ub4dc\ud574\uc57c \ud558\uace0, \uadf8\ub807\uac8c \ub41c\ub2e4\uba74 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc774 mcount() \ub97c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub290 \uc815\ub3c4 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubc1b\uac8c \ub420 \uac83\uc774\ub2e4. \ub3d9\uc801\ucd94\uc801\uc744 \ud560 \ub54c, -P / --patch \uc635\uc158\uc744 \ud1b5\ud574 \ud2b9\uc815 \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. capstone \ub514\uc2a4\uc5b4\uc148\ube14\ub9ac \uc5d4\uc9c4\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uc704 \uc635\uc158\uc744 \uc9c0\uc815\ud574\uc11c \ud504\ub85c\uadf8\ub7a8\uc744 (\uc7ac)\ucef4\ud30c\uc77c\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4. \uc774\uc81c uftrace \ub294 \uba85\ub839\uc5b4\ub4e4\uc744 \ubd84\uc11d\ud560 \uc218 \uc788\uac8c \ub418\uace0 (\ub9cc\uc57d \uac00\ub2a5\ud558\ub2e4\uba74) \uadf8 \uba85\ub839\uc5b4\ub4e4\uc744 \ub2e4\ub978 \uacf3\uc5d0 \ubcf5\uc0ac\ud558\uc5ec mcount() \ud568\uc218\ub4e4\uc744 \ud638\ucd9c\ud558\uc5ec uftrace \ub85c \ucd94\uc801\ud560 \uc218 \uc788\uac8c \ubc14\uc774\ub108\ub9ac\ub97c \uc870\uc791 \ud560 \uc218 \uc788\ub2e4. \uadf8 \uc774\ud6c4 \uc81c\uc5b4\uad8c\uc740 \ubcf5\uc0ac\ub41c \uba85\ub839\uc5b4\ub85c \ub118\uc5b4\uac00\uac8c \ub418\uace0, \uadf8 \ub2e4\uc74c\uc5d0\uc57c \ub0a8\uc740 \uba85\ub839\uc5b4\ub4e4\ub85c \ubc18\ud658\ud558\uac8c \ub41c\ub2e4. capstone \uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4\uba74, \ud504\ub85c\uadf8\ub7a8\uc744 \ube4c\ub4dc\ud560 \ub54c \uba87\uba87 \ucef4\ud30c\uc77c\ub7ec (gcc) \uc635\uc158\ub4e4\uc744 \ucd94\uac00\ud574\uc57c \ud560 \uac83\uc774\ub2e4. gcc 5.1 \ubc84\uc804 \uc774\uc0c1\ubd80\ud130\ub294 -mfentry \uc640 -mnop-mcount \uc635\uc158\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc774 \uc635\uc158\ub4e4\uc740 \ud568\uc218 \ub9e8 \uc55e\uc5d0 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uace0 \uadf8 \uba85\ub839\uc5b4\ub97c NOP \uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4. \uadf8\ub807\uac8c \ub418\uba74 \uc77c\ubc18\uc801\uc778 \uc870\uac74\uc5d0\uc11c \uc2e4\ud589\ud560 \ub54c\uc5d0\ub294 \uc131\ub2a5 \uc0c1\uc758 \uc624\ubc84\ud5e4\ub4dc\uac00 \uac70\uc758 \uc5c6\uc5b4\uc9c8 \uac83\uc774\ub2e4. uftrace \ub294 -P \uc635\uc158\uc744 \uc774\uc6a9\ud558\uc5ec \uc120\ud0dd\uc801\uc73c\ub85c mcount() \ud568\uc218\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub3c4\ub85d \uc804\ud658\ud560 \uc218 \uc788\ub2e4. uftrace \ub97c \uc544\ub798\uc758 \uc608\uc81c\uc5d0\uc11c \ud3c9\uc18c\ucc98\ub7fc \uc0ac\uc6a9\ud560\ub54c\uc5d0\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uadf8 \uc774\uc720\ub294 \ubc14\uc774\ub108\ub9ac\uac00 \uc5b4\ub5a4 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub3c4 \ud638\ucd9c\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. $ gcc -o abc -pg -mfentry -mnop-mcount tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. \ud558\uc9c0\ub9cc -P a \ud328\uce58 \uc635\uc158\uc744 \uc801\uc6a9\ud55c\ub2e4\uba74, \ub3d9\uc801\uc73c\ub85c a() \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace --no-libcall -P a abc # DURATION TID FUNCTION 0.923 us [19379] | a(); \ucd94\uac00\ub85c, '.'\uc744 \uc774\uc6a9\ud574 (glob\uc740, '*') P \uc635\uc158\uacfc \ud568\uaed8 \uc815\uaddc\ud45c\ud604\uc2dd\uc73c\ub85c \uc4f0\uc778 \ubb38\uc790\uc5d0 \ub300\ud574 \ud558\ub098\ub77c\ub3c4 \ub9e4\uce6d\ub418\ub294 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc801\uc6a9\uc2dc\ud0ac \uc218 \uc788\ub2e4. $ uftrace --no-libcall -P . abc # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ -U \uc635\uc158\uc740 -P \uc635\uc158\uacfc \ubc18\ub300\uc758 \ud6a8\uacfc\uac00 \uc788\uc5b4 \uc0ac\uc6a9\uc790\uac00 \ub450 \uc635\uc158 \ubaa8\ub450\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\ub2e4. \ub098\uc911\uc5d0 \uba85\uc2dc\ub41c \uc635\uc158\uc740 \uc55e\uc120 \uc635\uc158\uc744 \ub36e\uc5b4\uc4f4\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \uc608\uc2dc\uc5d0\uc11c 'a'\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud558\uace0 \uc2f6\ub2e4\uba74 \uc544\ub798\uc640 \uac19\uc774 \uc635\uc158\uc744 \uc801\uc6a9\ud55c\ub2e4. $ uftrace --no-libcall -P . -U a abc # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ \uc635\uc158\uc758 \uc21c\uc11c\ub294 \uc911\uc694\ud558\ub2e4. \ub9cc\uc77c \uc635\uc158\uc758 \uc21c\uc11c\ub97c -U a -P . \uc640 \uac19\uc774 \ubcc0\uacbd\ud55c\ub2e4\uba74 -P . \uc635\uc158\uc774 \uc804\uccb4\uc5d0 \uc720\ud6a8\ud574\uc9c0\uae30\uc5d0 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. \ucd94\uac00\uc801\uc73c\ub85c, -U \uc635\uc158\uc740 -pg (\uadf8\ub9ac\uace0 -mfentry \ud639\uc740 -mrecord-mcount )\ub85c \ube4c\ub4dc\ub41c \ubc14\uc774\ub108\ub9ac \ub0b4\uc758 \ud568\uc218\ub4e4\uc744 \ube44\ud65c\uc131\ud654\ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uc774 \ub54c, capstone\uc774 \ud544\uc694\ud560 \uc218 \uc788\ub2e4. Clang/LLVM 4.0\uc740 X-ray \ub77c\ub294 \uae30\uc220\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\ub294 gcc -mfentry -mnop-mcount \uc640 -finstrument-functions \ub97c \uacb0\ud569\ud55c \uac83\uacfc\ub3c4 \uc720\uc0ac\ud558\ub2e4. uftrace\ub294 X-ray \ub85c \ube4c\ub4dc\ub41c \uc2e4\ud589\ud30c\uc77c\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub3d9\uc801\ucd94\uc801\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 clang \uc73c\ub85c \uc544\ub798\uc758 \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \uadf8\uc640 \ub3d9\uc77c\ud558\uac8c \ub3d9\uc801\ucd94\uc801\uc744 \uc704\ud574 \uc544\ub798\uc640 \uac19\uc774 -P \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc744 \uac83\uc774\ub2e4. $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace -P main abc-xray # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace -P . abc-xray # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */","title":"DYNAMIC TRACING"},{"location":"ko/uftrace-live/#script-execution","text":"uftrace \ub294 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\uc774 \uac00\ub2a5\ud558\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \uc2a4\ud06c\ub9bd\ud2b8 \ud0c0\uc785\uc740 Python 2.7, Python 3 \uadf8\ub9ac\uace0 Lua 5.1 \uc774\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ub124 \uac1c\uc758 \ud568\uc218\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4. 'uftrace_entry' \uc640 'uftracce_exit' \uc740 \uac01 \ud568\uc218\uc758 \uc9c4\uc785\uc2dc\uc810\uacfc \ubc18\ud658\uc2dc\uc810\uc5d0 \ud56d\uc0c1 \uc2e4\ud589\ub41c\ub2e4. \ud558\uc9c0\ub9cc 'uftrace_begin' \uacfc 'uftrace_end' \ub294 \ubd84\uc11d \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \ucd08\uae30\ud654\ub418\uace0 \uc885\ub8cc\ub420\ub54c \ud55c \ubc88\uc529\ub9cc \uc2e4\ud589\ub41c\ub2e4. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") \uc704 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc544\ub798\uc640 \uac19\uc774 \uae30\ub85d\ub41c \uc2dc\uac04 \uc21c\uc73c\ub85c \uc2e4\ud589\ub420 \uc218 \uc788\ub2e4: $ uftrace -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished # DURATION TID FUNCTION [10929] | main() { [10929] | a() { [10929] | b() { [10929] | c() { 4.293 us [10929] | getpid(); 19.017 us [10929] | } /* c */ 27.710 us [10929] | } /* b */ 37.007 us [10929] | } /* a */ 55.260 us [10929] | } /* main */ 'ctx' \ubcc0\uc218\ub294 \uc544\ub798\uc758 \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\ub294 \uc0ac\uc804\ud0c0\uc785(dictionary type)\uc758 \ubcc0\uc218\uc774\ub2e4. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; 'script_context' \uc5d0 \uc788\ub294 \uac01 \ud56d\ubaa9\ub4e4\uc740 \uc2a4\ud06c\ub9bd\ud2b8 \ub0b4\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\ub2e4. \uc2a4\ud06c\ub9bd\ud305\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 uftrace-script (1)\ub97c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4.","title":"SCRIPT EXECUTION"},{"location":"ko/uftrace-live/#watch-point","text":"uftrace \uc758 watch point \ub294 \ud2b9\uc815 \uac12\uc758 \ubcc0\uacbd\uc0ac\ud56d\uc744 \ucd9c\ub825\ud55c\ub2e4. \uac1c\ub150\uc801\uc73c\ub85c\ub294 \uc77c\ubc18\uc801\uc778 \ub514\ubc84\uac70\uc758 watch point \uc640 \uac19\uc9c0\ub9cc, \ud568\uc218\uc758 \uc9c4\uc785\uacfc \uc885\ub8cc\uc5d0\ub9cc \uc801\uc6a9\ub418\uae30 \ub54c\ubb38\uc5d0 \uba87\uba87 \ubcc0\uacbd\uc0ac\ud56d\ub4e4\uc740 \ub193\uce60 \uc218\ub3c4 \uc788\ub2e4. \uc544\uc9c1\uae4c\uc9c0\ub294, \uc544\ub798\uc758 watch point \ub4e4\ub9cc\uc774 \uc9c0\uc6d0\ub41c\ub2e4. \"cpu\" : \ud604\uc7ac \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 cpu \ubc88\ud638 \ud2b8\ub9ac\uac70\ub97c \uc77d\uc744 \ub54c\ucc98\ub7fc, \uacb0\uacfc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc8fc\uc11d \ud615\uc2dd\uc758 \uc774\ubca4\ud2b8\ub85c \ucd9c\ub825\ub41c\ub2e4. $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */","title":"WATCH POINT"},{"location":"ko/uftrace-live/#_6","text":"uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-script (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-live/#_7","text":"\uac15\ubbfc\ucca0 tegongkang@gmail.com , \uae40\uad00\uc601 gy741.kim@gmail.com , \uae40\ud64d\uaddc honggyu.kp@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-record/","text":"% UFTRACE-RECORD(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-record - \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace record [ options ] COMMAND [ command-options ] \uc124\uba85 \uc774 \uba85\ub839\uc5b4\ub294 COMMAND \ub85c \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\uace0 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uacfc\uc815\uc5d0\uc11c \uc544\ubb34\uac83\ub3c4 \ucd9c\ub825\ud558\uc9c0 \uc54a\uace0 uftrace.data \ub514\ub809\ud1a0\ub9ac\uc5d0 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. \uc774 \ub370\uc774\ud130\ub294 \uc774\ud6c4\uc5d0 uftrace replay \ub098 uftrace report \ub4f1\uc744 \ud1b5\ud574 \ubd84\uc11d\ub420 \uc218 \uc788\ub2e4. RECORD \uc635\uc158 -A SPEC , --argument= SPEC : \ud568\uc218\uc758 \uc778\uc790\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --srcline \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. \uc778\uc790\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -R SPEC , --retval= SPEC : \ud568\uc218\ub4e4\uc758 \ubc18\ud658\uac12\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --srcline \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. \ubc18\ud658\uac12\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -P FUNC , --patch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub97c \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud558\uc5ec \ucd94\uc801\ud558\uace0 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -U FUNC , --unpatch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\uc5d0 \ub300\ud574 \ub3d9\uc801 \ud328\uce58\ub97c \uc801\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \ud070 \ud568\uc218\ub4e4\uc744 \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud55c\ub2e4. \ub3d9\uc801\ucd94\uc801\uc5d0 \ub300\ud574\uc11c\ub294 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -E EVENT , --event= EVENT : \uc774\ubca4\ud2b8 \ucd94\uc801\uc744 \ud65c\uc131\ud654\ud55c\ub2e4. \uc2dc\uc2a4\ud15c \ub0b4\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\uc5ec\uc57c \ud55c\ub2e4. -S SCRIPT_PATH , --script= SCRIPT_PATH : \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc8fc\uc5b4\uc9c4 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ud65c\uc6a9\ud574\uc11c \ucd94\uac00\uc801\uc778 \uc791\uc5c5\uc744 \ud55c\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc5b8\uc5b4 \uc885\ub958\ub294 \ud30c\uc77c\uc758 \ud655\uc7a5\uc790\ub97c \ud1b5\ud574 \uc815\ud574\uc9c0\ub294\ub370 \ud30c\uc774\uc36c\uc758 \uacbd\uc6b0 \".py\" \uc774\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589 \uc124\uba85\uc740 SCRIPT EXECUTION \uc744 \ucc38\uace0\ud55c\ub2e4. -W, --watch= POINT : \ud2b9\uc815\ud55c \uac12\uc774 \ubcc0\uacbd\ub418\uc5c8\uc744 \uacbd\uc6b0 \uc774\ub97c \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud574 watch point \ub97c \ucd94\uac00\ud55c\ub2e4. \uc790\uc138\ud55c \uc0ac\ud56d\uc740 WATCH POINT \ub97c \ucc38\uace0\ud55c\ub2e4. -a, --auto-args : \uc54c\ub824\uc9c4 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\ub4e4\uc744 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ud55c\ub2e4. \ubcf4\ud1b5\uc758 \uacbd\uc6b0 C \uc5b8\uc5b4 \ub610\ub294 \uc2dc\uc2a4\ud15c\uc758 \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc5d0 \ud574\ub2f9\ud558\uc9c0\ub9cc, \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\ub3c4 \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. --srcline \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. -l, --nest-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4 \uac04\uc758 \ud568\uc218 \ud638\ucd9c\ub3c4 \ud568\uaed8 \uae30\ub85d\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c uftrace \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \uc9c1\uc811 \ud638\ucd9c\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. -k, --kernel : \uc0ac\uc6a9\uc790 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218\uc640 \ud568\uaed8 \ucee4\ub110 \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \ucee4\ub110\ub85c\uc758 \uc9c4\uc785 \ubc0f \ubcf5\uadc0 \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. \uc774\ub97c \ubcc0\uacbd\ud558\ub824\uba74 --kernel-depth \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. -K DEPTH , --kernel-depth= DEPTH : \ucee4\ub110 \ucd5c\ub300 \ud568\uc218 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. --kernel \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. --clock= CLOCK : \ud0c0\uc784\uc2a4\ud0ec\ud504\ub97c \uc77d\ub294 \ud074\ub7ed \uc18c\uc2a4\ub97c \uc124\uc815\ud55c\ub2e4. CLOCK \uc740 'mono', 'mono_raw', 'boot' \uc911\uc758 \ud558\ub098\ub85c \uc124\uc815 \uac00\ub2a5\ud558\uace0, \uae30\ubcf8 \uc124\uc815\uc740 'mono' \uc774\ub2e4. --host= HOST : \ud30c\uc77c\uc5d0 \uc4f0\uc9c0 \uc54a\uace0, \uc8fc\uc5b4\uc9c4 \ud638\uc2a4\ud2b8\uc5d0\uac8c \ucd94\uc801 \ub370\uc774\ud130\ub97c \ub124\ud2b8\uc6cc\ud06c \uc0c1\uc73c\ub85c \uc804\uc1a1\ud55c\ub2e4. \ub370\uc774\ud130\ub97c \ubc1b\uae30 \uc704\ud574\uc11c uftrace recv \uba85\ub839\uc5b4\uac00 \ubaa9\uc801\uc9c0\uc5d0\uc11c \uc2e4\ud589\ub418\uc5b4\uc57c \ud55c\ub2e4. --port= PORT : --host \uc635\uc158\uc744 \uc774\uc6a9\ud574\uc11c \ub370\uc774\ud130\ub97c \ub124\ud2b8\uc6cc\ud06c\ub85c \ubcf4\ub0bc \ub54c, \uae30\ubcf8 \ud3ec\ud2b8(8090)\uac00 \uc544\ub2cc \ub2e4\ub978 \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud55c\ub2e4. --signal= TRG : \ud568\uc218\uac00 \uc544\ub2cc \uc120\ud0dd\ud55c \uc2dc\uadf8\ub110\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc81c\ud55c \uc0ac\ud56d\ub4e4\ub85c \uc778\ud558\uc5ec \uc18c\uc218 \ud2b8\ub9ac\uac70 \uae30\ub2a5\ub9cc\uc744 \uc9c0\uc6d0\ud558\uace0 \uc788\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc791\uc5c5: : trace_on, trace_off, finish. \uc774 \uc635\uc158\uc740 \ub450\ubc88 \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70 \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. --nop : \uc5b4\ub5a4 \ud568\uc218\ub3c4 record \ud558\uac70\ub098 replay\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774\ub294 \uc544\ubb34 \uc77c\ub3c4 \ud558\uc9c0 \uc54a\ub294 \uba85\ub839\uc5b4\ub85c, \uc131\ub2a5 \ube44\uad50\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --force : \uc57d\uac04\uc758 \ubb38\uc81c\uac00 \uc788\uc5b4\ub3c4 uftrace \uac00 \uc2e4\ud589\ub41c\ub2e4. uftrace record \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \ucef4\ud30c\uc77c\ub7ec\uc5d0 \uc758\ud574 \uc0dd\uc131\ub418\ub294 mcount \ub97c \ucc3e\uc744 \uc218 \uc5c6\uc744 \ub54c uftrace \uac00 \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc624\ub958 \uba54\uc2dc\uc9c0\uc640 \ud568\uaed8 \uc885\ub8cc\ub41c\ub2e4. \ub2e8, \uc0ac\uc6a9\uc790\ub294 \ub3d9\uc801\uc73c\ub85c \uc5f0\uacb0\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ub0b4\uc758 \uae30\ub2a5\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uc744 \uc218 \uc788\uc73c\uba70, \uc774 \uacbd\uc6b0 --force \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec uftrace \ub97c \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc788\ub2e4. \ub610\ud55c -A / --argument \ubc0f -R / --retval \uc635\uc158\uc740 -pg \ub85c \ucef4\ud30c\uc77c\ub41c \ubc14\uc774\ub108\ub9ac\uc5d0 \ub300\ud574\uc11c\ub9cc \uc791\ub3d9\ud558\ubbc0\ub85c, uftrace \ub294 \uadf8 \uc635\uc158 \uc5c6\uc774 \ube4c\ub4dc\ub41c \ubc14\uc774\ub108\ub9ac\ub97c \uc2e4\ud589\ud558\ub824\uace0 \ud560 \ub54c\uc5d0\ub3c4 \uc885\ub8cc\ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \uacbd\uace0\ub97c \ubb34\uc2dc\ud558\uace0 \uc778\uc218 \ubc0f \ubc18\ud658 \uac12 \uc5c6\uc774 uftrace \ub97c \uc2e4\ud589\uc2dc\ud0a4\ub3c4\ub85d \ud55c\ub2e4. --time : time(1) \uc2a4\ud0c0\uc77c\ub85c \uc2e4\ud589\uc2dc\uac04\uc744 \ucd9c\ub825\ud55c\ub2e4. -e, --estimate-return : \uac01 \ud568\uc218\uc758 \uc9c4\uc785 \ub370\uc774\ud130\ub9cc\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2a4\ud0dd\uc744 \ub2e4\ub8f0 \uacbd\uc6b0 \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace\ub294 \ud568\uc218\uc758 \ubc18\ud658\uac12\uc744 \ud6c4\ud0b9\ud558\uae30 \uc704\ud574 \uc791\uc5c5 \ub300\uc0c1\uc758 \uc2e4\ud589 \uc2a4\ud0dd \ud504\ub808\uc784\uc744 \uc218\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ub54c\ub54c\ub85c \ubb38\uc81c\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uace0 \ubaa8\ub4e0 \uacbd\uc6b0\ub97c \uc81c\ub300\ub85c \ub2e4\ub8e8\uae30 \uc5b4\ub835\ub2e4. \uc774 \uc635\uc158\uc740 uftrace\uac00 \ub9ac\ud134 \uc8fc\uc18c\ub97c \ud6c4\ud0b9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc5ec \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \uc608\ubc29\ud55c\ub2e4. \ubc18\ud658\ub41c \uc2dc\uac04\uc740 \uc5f0\uc18d\ub41c \ub450 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \uc2dc\uac04\uc758 \uc808\ubc18\uc73c\ub85c \uc608\uce21\ub41c\ub2e4. \uacf5\ud1b5 \uc635\uc158 -F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788 \ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815 \uc740 \ubb34\uc2dc\ud55c\ub2e4.) \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801 \uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \uc744 \ucc38\uace0\ud55c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --event \ub97c \ud1b5\ud55c \uba85\uc2dc\uc801\uc778 \uc774\ubca4\ud2b8 \uae30\ub85d \ubc29\uc2dd\uc5d0\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --match= TYPE : TYPE\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8\uc740 regex \uc774\ub2e4. --disable : \ucd94\uc801\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc740 \ucc44\ub85c uftrace\ub97c \uc2dc\uc791\ud55c\ub2e4. \uc774\uac83\uc740 trace_on \ud2b8\ub9ac\uac70\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. RECORD \uc124\uc815 \uc635\uc158 --libmcount-path= PATH : libmcount \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c PATH \uc5d0\uc11c \uba3c\uc800 \ucc3e\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\ubd80\ubd84 \ud14c\uc2a4\ud2b8 \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub41c\ub2e4. -b SIZE , --buffer= SIZE : \uc800\uc7a5\ud560 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8 \uc0ac\uc774\uc988\ub294 128k \uc774\ub2e4. --kernel-buffer= SIZE : \uc800\uc7a5\ud560 \ucee4\ub110 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \ucee4\ub110 \ub0b4\ubd80\uc758 \uae30\ubcf8 \uc124\uc815\uc740 1408k \uc774\ub2e4. --no-pltbind : \ub3d9\uc801 \uc2ec\ubcfc \uc8fc\uc18c\ub97c \ubc14\uc778\ub529\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 LD_BIND_NOT \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc2dc\uc801\uc73c\ub85c \ubc1c\uc0dd\ud558\ub294 (\uccab \ubc88\uc9f8) \uc811\uadfc\uc73c\ub85c \uc778\ud574 \ub204\ub77d\ub420 \uc218 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. --no-libcall \uc635\uc158\uacfc \ud568\uaed8 \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc758\ubbf8\uac00 \uc5c6\ub2e4. --max-stack= DEPTH : \ub0b4\ubd80\uc801\uc73c\ub85c \uae30\ub85d\ud558\ub294 \ud568\uc218 \ud638\ucd9c \uc2a4\ud0dd\uc758 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 1024 \uc774\ub2e4. --num-thread= NUM : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 NUM \uac1c\uc758 \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 1/4 \uc73c\ub85c \uc124\uc815\ud55c\ub2e4. (\ud558\uc9c0\ub9cc \ucee4\ub110\uc744 \ud3ec\ud568\ud574 \uc804\uccb4\ub97c \uae30\ub85d\ud558\ub294 \uacbd\uc6b0, \ucd5c\ub300\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 \uc218\ub85c \uc124\uc815\ud55c\ub2e4.) --libmcount-single : \ube60\ub978 \ub370\uc774\ud130 \uae30\ub85d\uc744 \uc704\ud574\uc11c libmcount \uc758 \ub2e8\uc77c \uc4f0\ub808\ub4dc \ubc84\uc804\uc744 \uc0ac\uc6a9\ud55c\ub2e4. \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 pthread \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubb34\uc2dc\ub41c\ub2e4. --rt-prio= PRIO : \ub370\uc774\ud130 \uae30\ub85d\uc744 \ud558\ub294 \uc2a4\ub808\ub4dc\ub97c PRIO \ub97c \uc6b0\uc120\uc21c\uc704\ub85c \uac16\ub294 \uc2e4\uc2dc\uac04(FIFO)\ub85c \ud5a5\uc0c1\uc2dc\ud0a8\ub2e4. \uc774 \uc635\uc158\uc740 \ud2b9\ud788 \ub300\uaddc\ubaa8 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\ub294 \uc804\uccb4 \ucee4\ub110 \ucd94\uc801\uacfc \uac19\uc740 \ud658\uacbd\uc5d0\uc11c \uc720\uc6a9\ud558\ub2e4. --keep-pid : \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \ub54c \ub3d9\uc77c\ud55c pid \uac12\uc744 \uc720\uc9c0\ud558\uac8c \ud574\uc900\ub2e4. \uc77c\ubd80 \ub370\ubaac \ud504\ub85c\uc138\uc2a4\uc758 \uacbd\uc6b0 \ubd84\uae30 \ud560 \ub584 \ub3d9\uc77c\ud55c pid \ub97c \uac16\ub294\uac83\uc774 \uc911\uc694\ud558\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace \ub97c \uc2e4\ud589\ud558\uba74 fork() \ub97c \ub0b4\ubd80\uc801\uc73c\ub85c \ub2e4\uc2dc \ud638\ucd9c\ud558\ubbc0\ub85c pid \uac00 \ubcc0\uacbd\ub41c\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ud130\ubbf8\ub110 \uc124\uc815\uc774 \uc190\uc0c1\ub418\ub294 \uacbd\uc6b0\uac00 \uc788\uae30 \ub584\ubb38\uc5d0 --no-pager \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. --no-randomize-addr : ASLR(Address Space Layout Randomization)\uc744 \ube44\ud65c\uc131\ud654 \ud55c\ub2e4. \uc774\ub294 \ud504\ub85c\uc138\uc2a4\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub85c\ub529 \uc8fc\uc18c\uac00 \ub9e4\ubc88 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c9\uc544\uc900\ub2e4. --srcline : \ub514\ubc84\uadf8 \uc815\ubcf4\uc5d0 \ub808\ucf54\ub4dc\ud55c \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4. FILTERS uftrace \ub294 \uad00\uc2ec \uc788\ub294 \ub300\uc0c1\uc774 \uc544\ub2cc \ud568\uc218\ub4e4\uc744 \uac10\ucd94\ub294 \ud544\ud130\ub9c1\uc744 \ud560 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\uc790\ub4e4\uc774 \uad00\uc2ec \uc788\ub294 \ud568\uc218\ub4e4\uc5d0\ub9cc \uc9d1\uc911\ud560 \uc218 \uc788\uac8c \ud558\uace0, \uae30\ub85d\ub418\ub294 \ub370\uc774\ud130\uc758 \ud06c\uae30\ub97c \uc904\uc77c \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ud55c\ub2e4. uftrace \uac00 \ud638\ucd9c\ub418\uba74, \ub450 \uc885\ub958\uc758 \ud568\uc218 \ud544\ud130\ub97c \uac16\uac8c \ub418\ub294\ub370 \uc774\ub4e4\uc740 \ub300\uc0c1 \ud568\uc218\ub97c \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd(opt-in)\uc758 \ud544\ud130\ub85c -F / --filter \uc640 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd(opt-out)\uc758 \ud544\ud130\uc778 -N / --notrace \uac00 \uc788\ub2e4. \uc774 \ud544\ud130\ub4e4\uc740 \uae30\ub85d(record)\ud558\uac70\ub098 \uc7ac\uc0dd(replay)\ud560 \ub54c \ubaa8\ub450 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4. \uccab\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \uc774\uac83\uc740 \uc544\ubb34\uac83\ub3c4 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \uc5b4\ub5a4 \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uba74, \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ucd94\uc801\uc744 \uc2dc\uc791\ud55c\ub2e4. \uadf8\ub7ec\ub2e4\uac00 \uadf8 \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc911\ub2e8\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, a() , b() \uc640 c() \ub97c \ucc28\ub840\ub85c \ud638\ucd9c\ud558\ub294 \uac04\ub2e8\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \uc0dd\uac01\ud574\ubcf4\uc790. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 uftrace \ub294 main() \ubd80\ud130 c() \uae4c\uc9c0\uc758 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace record ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ud558\uc9c0\ub9cc -F b \ud544\ud130 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub294, main() \uacfc a() \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uace0 \uc624\uc9c1 b() \uc640 c() \ub9cc\uc774 \ud3ec\ud568\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc77c\uac83\uc774\ub2e4. $ uftrace record -F b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ \ub450\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \uac83\uc774 \ucd94\uc801\ub418\uc9c0\ub9cc, \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uba48\ucd98\ub2e4. \uc81c\uc678\ub41c \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uc7ac\uac1c\ud55c\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c, b() \ud568\uc218\uc640 \uadf8\uc758 \ubaa8\ub4e0 \ud638\ucd9c\uc740 -N \uc635\uc158\uc73c\ub85c \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. $ uftrace record -N b ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ \ub9cc\uc77c \ud2b9\uc815 \ud568\uc218\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uace0 \uadf8 \ud568\uc218\uac00 \uc5b4\ub5bb\uac8c \ud638\ucd9c\ub418\ub294\uc9c0\ub9cc \uc54c\uace0 \uc2f6\ub2e4\uba74, caller filter \ub97c \uc0ac\uc6a9\ud558\uba74 \ub420 \uac83\uc774\ub2e4. \uadf8 \ud568\uc218\ub97c \ub9c8\uc9c0\ub9c9(leaf) \ub178\ub4dc\ub85c \ub9cc\ub4e4\uace0, \uadf8 \ud568\uc218\uc758 \ubaa8\ub4e0 \ubd80\ubaa8 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace record -C b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, \ud638\ucd9c \uacbd\ub85c\uc5d0 \uc5c6\ub294 \ud568\uc218\ub4e4\uc744 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, \ud568\uc218 b() \uc758 \uc790\uc2dd \ud568\uc218\uc778 \ud568\uc218 c() \ub610\ud55c \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, -D \uc635\uc158\uc73c\ub85c \ud568\uc218\uc758 \uc911\ucca9 \uae4a\uc774\uc744 \uc81c\ud55c\ud560 \uc218\ub3c4 \uc788\ub2e4. $ uftrace record -D 3 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, uftrace \ub294 \ud568\uc218 \ud638\ucd9c \uae4a\uc774\ub97c \ucd5c\ub300 3 \uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd9c\ub825\ud588\uae30 \ub54c\ubb38\uc5d0, \ub9c8\uc9c0\ub9c9 \ud568\uc218\uc778 c() \ub294 \uc0dd\ub7b5\ub418\uc5c8\ub2e4. -D \uc635\uc158\uc740 -F \uc635\uc158\uacfc \ud568\uaed8 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ub54c\ub85c\ub294, \uc624\ub79c \uc2dc\uac04 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\uc744 \ud2b9\ubcc4\ud558\uac8c \uad00\ucc30\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud558\ub2e4. \uc774\ub294 \uc791\uc740 (\uc2e4\ud589\uc2dc\uac04\uc744 \uac00\uc9c0\ub294) \ud568\uc218\ub4e4 \uc911\uc5d0\ub294 \uad00\uc2ec \ub300\uc0c1\uc774 \uc544\ub2cc \uac83\ub4e4\uc774 \ub9ce\uae30 \ub54c\ubb38\uc774\ub2e4. -t / --time-filter \uc635\uc158\uc740 \uba85\uc2dc\ub41c \uc784\uacc4\uc2dc\uac04\ubcf4\ub2e4 \uc624\ub798 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ubcfc \uc218 \uc788\uac8c \ud558\ub294 \uc2dc\uac04 \uae30\ubc18\uc758 \ud544\ud130\uc774\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c\ub294, \uc0ac\uc6a9\uc790\ub294 \ub300\ubd80\ubd84 \uc544\ub798\uc640 \uac19\uc774 5 \ub9c8\uc774\ud06c\ub85c(us) \ucd08 \uc774\uc0c1 \uac78\ub824\uc11c \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ubcf4\uace0 \uc2f6\uc5b4\ud560 \uac83\uc774\ub2e4. $ uftrace record -t 5us ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ -t / --time-filter \uc635\uc158\uc740 \uc0ac\uc6a9\uc790 \ud568\uc218\uc5d0\uac8c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ucee4\ub110 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc, \uc774\uac83\ub4e4\uc740 replay, report, dump\uc640 -t / --time-filter \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud55c graph \uba85\ub839\uc758 \uacb0\uacfc\uc5d0 \uc228\uaca8\uc838 \uc788\uc744 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\ub41c \ud568\uc218\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4. \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 TRIGGERS \ud56d\ubaa9\uc5d0\uc11c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. \ucee4\ub110 \ud568\uc218 \ucd94\uc801\uc744 \uc124\uc815\ud558\uba74, @kernel \uc2dd\ubcc4\uc790\ub97c \ud1b5\ud574 \ucee4\ub110 \ud568\uc218\uc5d0 \ub300\ud55c \ud544\ud130\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ud558 \uc608\uc2dc\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \ud568\uc218\uc640 (\ucee4\ub110 \ub808\ubca8\uc758) page fault \ud578\ub4e4\ub7ec\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */ TRIGGERS uftrace \ub294 (\ud544\ud130\uac00 \uc788\ub4e0 \uc5c6\ub4e0) \uc120\ud0dd\ub41c \ud568\uc218 \ud638\ucd9c\uacfc \uc2dc\uadf8\ub110\uc5d0 \ub300\ud55c \ud2b8\ub9ac\uac70 \ub3d9\uc791\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \ud2b8\ub9ac\uac70\uc640 \uc0ac\uc591\uc5d0 \ub300\ud55c BNF \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"trace\" | \"trace_on\" | \"trace_off\" | \"time=\"<time_spec> | \"size=\"<num> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"recover\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" depth \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud544\ud130\uc758 \uae4a\uc774\ub97c \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\uc591\ud55c \ud568\uc218\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \ud544\ud130 \uae4a\uc774\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ud2b8\ub9ac\uac70 \uc791\ub3d9 \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc804\uc5ed \ud544\ud130 \uae4a\uc774\uac00 5 \ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc9c0\ub9cc b() \ud568\uc218\uc5d0 depth \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud558\uc5ec b() \uc544\ub798 \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uac8c\ub41c\ub2e4. $ uftrace record -D 5 -T 'b@depth=1' ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. trace_on \uacfc trace_off \ud2b8\ub9ac\uac70\ub294 uftrace \uac00 \uc9c0\uc815\ub41c \ud568\uc218\ub97c \uae30\ub85d\ud560\uc9c0 \uc5ec\ubd80\ub97c \uad00\ub9ac\ud55c\ub2e4. \ub610\ud55c, _ \ubb38\uc790 \uc5c6\uc774 traceon \uacfc traceoff \ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. recover \ud2b8\ub9ac\uac70\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \ud638\ucd9c \uc2a4\ud0dd(call stack)\uc5d0 \uc9c1\uc811 \uc811\uadfc\ud558\ub294 \uc77c\ubd80 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4. \uc9c0\uae08\uc73c\ub85c\uc11c\ub294 uftrace\uac00 \ud574\ub2f9 \uc791\uc5c5\uc744 \uc790\ub3d9\uc73c\ub85c \uc218\ud589\ud558\uae30\uc5d0 \ud638\ucd9c\ud560 \ud544\uc694\ub294 \uc5c6\ub2e4. time \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04 \ud544\ud130(time-filter) \uc124\uc815\uc744 \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\ub978 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c \uc11c\ub85c \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130\ub97c \uc801\uc6a9\ud560 \ub584 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. read \ud2b8\ub9ac\uac70\ub294 \uc2e4\ud589 \uc2dc\uc5d0 \uc77c\ubd80 \uc815\ubcf4\ub97c \uc77d\uc744 \uc218 \uc788\ub2e4. \uacb0\uacfc\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc5d0 (\ub0b4\uc7a5) \uc774\ubca4\ud2b8\uc758 \ud615\ud0dc\ub85c \uae30\ub85d\ub41c\ub2e4. \ud604\uc7ac \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\ubca4\ud2b8\uac00 \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. \"proc/statm\": /proc \uc73c\ub85c\ubd80\ud130\uc758 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uc815\ubcf4 \"page-fault\": getrusage(2)\ub97c \uc0ac\uc6a9\ud55c \ud398\uc774\uc9c0 \ud3f4\ud2b8(page fault) \ud69f\uc218 \"pmu-cycle\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c cpu \ud074\ub7ed \uc0ac\uc774\ud074 \ubc0f \uba85\ub839\uc5b4 \uc2e4\ud589 \ud69f\uc218 \"pmu-cache\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c \uce90\uc2dc \ucc38\uc870(reference) \ubc0f \uc2e4\ud328(miss) \"pmu-branch\": Perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \uc0ac\uc6a9\ud55c \ubd84\uae30\uc608\uce21(branch prediction) \ubc0f \uc2e4\ud328(miss) \uacb0\uacfc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc8fc\uc11d\uc758 \ud615\ud0dc\ub85c \uc774\ubca4\ud2b8 \uc815\ubcf4\uac00 \ucd9c\ub825\ub41c\ub2e4. $ uftrace record -T a@read=proc/statm ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ finish \ud2b8\ub9ac\uac70\ub294 \uae30\ub85d(record)\uc744 \uc885\ub8cc\ud560 \ub584 \uc0ac\uc6a9\ud55c\ub2e4. \ub370\ubaac\uacfc \uac19\uc774 \uc885\ub8cc\ub418\uc9c0 \uc54a\ub294 \ud504\ub85c\uc138\uc2a4\ub97c \ucd94\uc801\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub2e4. filter \uc640 notrace \ud2b8\ub9ac\uac70\ub294 \uac01\uac01 -F / --filter \uc640 -N / --notrace \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\ub2e4. \ud2b8\ub9ac\uac70\ub294 \ud604\uc7ac \ucee4\ub110 \ud568\uc218\ub97c \uc81c\uc678\ud55c \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ud2b8\ub9ac\uac70\ub294 \uc2dc\uadf8\ub110\ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 signal \ud2b8\ub9ac\uac70\uc5d0 \uc758\ud574 \uc218\ud589\ub418\uba70 \ud568\uc218 \ud2b8\ub9ac\uac70\uc640 \ube44\uc2b7\ud558\uc9c0\ub9cc \ud604\uc7ac\ub294 \"trace_on\", \"trace_off\" \ubc0f \"finish\" \ud2b8\ub9ac\uac70\ub9cc \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. $ uftrace record --signal 'SIGUSR1@finish' ./some-daemon ARGUMENTS uftrace \ub294 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\uc744 \uac01\uac01 -A / \\--argument \uc640 -R / \\--retval \ub85c \uae30\ub85d\ud560 \uc218 \uc788\ub2e4. \uc774\uc5d0 \ub300\ud55c \ubb38\ubc95\uccb4\uacc4\ub294 \ud2b8\ub9ac\uac70\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\ub2e4. <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> -A / \\--argument \uc635\uc158\uc740 symbol \uc758 \uc774\ub984\uacfc \uadf8\uac83\uc758 spec \ub4e4\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ubc1b\ub294\ub2e4. spec \uc740 argN \uc73c\ub85c \uc2dc\uc791\ub418\ub294\ub370 \uc5ec\uae30\uc11c N \uc740 \uc778\uc790\uc758 \uc778\ub371\uc2a4\uac12\uc774\ub2e4. \uc778\ub371\uc2a4\ub294 1 \ubd80\ud130 \uc2dc\uc791\ub418\uba70, \uc21c\uc11c\ub294 \ud568\uc218\ud638\ucd9c\uaddc\uc57d(calling convention)\uc758 \uc778\uc790 \uc804\ub2ec \uc21c\uc11c\uc640 \ub300\uc751\ub41c\ub2e4. \uc778\uc790\uc758 \uc778\ub371\uc2a4\ub294 \uc815\uc218\ud615 (\ud639\uc740 \ud3ec\uc778\ud130\ud615) \uacfc \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uac01\uac01 \ub530\ub85c \uad00\ub9ac\ub41c\ub2e4\ub294 \uc810, \uadf8\ub9ac\uace0 \uc774\ub4e4\uc740 \ud568\uc218\ud638\ucd9c\uaddc\uc57d\uc5d0 \ub530\ub77c \uac01\uae30 \uac04\uc12d\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\ub77c. argN \uc740 \uc815\uc218\ud615 \uc778\uc790\ub97c, fpargN \uc740 \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uc778\uc790\ub97c \uc704\ud55c \ud45c\uae30\uc774\ub2e4. \"d\" \ud615\uc2dd \ud639\uc740 \uc544\ubb34 \ud615\uc2dd\ub3c4 \uc8fc\uc9c0 \uc54a\uc744 \uacbd\uc6b0, uftrace \ub294 \uc815\uc218\ud615\uc740 'long int'\ud615\uc73c\ub85c \uac04\uc8fc\ud558\uace0 \uc18c\uc218\uc810\ud615\uc5d0 \ub300\ud574\uc11c\ub294 'double'\ud615\uc73c\ub85c \uac04\uc8fc\ud55c\ub2e4. \"i\" \ud615\uc2dd\uc740 signed \uc815\uc218\ud615\uc73c\ub85c, \"u\" \ud615\uc2dd\uc740 unsigned \uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \ub450 \ud615\uc2dd \ubaa8\ub450 10 \uc9c4\uc218\uac00 \ucd9c\ub825\ub418\ub294 \ud55c\ud3b8 \"x\" \ud615\uc2dd\uc740 16 \uc9c4\uc218\ub85c, \"o\" \ud615\uc2dd\uc740 8\uc9c4\uc218\ub85c \ucd9c\ub825\ub418\uac8c \ud55c\ub2e4. \"s\" \ub294 null \uc744 \uc81c\uc678\ud55c \ubb38\uc790\uc5f4 \ucd9c\ub825\uc744 \uc704\ud55c \ud615\uc2dd\uc774\uace0, \"c\" \ub294 \ub2e8\uc77c \ubb38\uc790\ub97c \uc704\ud55c \ud615\uc2dd\uc774\ub2e4. \"f\" \ud615\uc2dd\uc740 \ubd80\ub3d9 \uc18c\uc218\uc810\uc744 \ucd9c\ub825\ud558\ub294\ub370, (\uc77c\ubc18\uc801\uc73c\ub85c) \ubc18\ud658\uac12\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. fpargN \uc740 \ud56d\uc0c1 \uc18c\uc218\uc810 \ubc29\uc2dd\uc774\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub5a4 \ud615\uc2dd \ud544\ub4dc\ub3c4 \uc5c6\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \"S\" \ud615\uc2dd\uc740 std::string \uc744 \uc704\ud55c \ud615\uc2dd\uc774\uc9c0\ub9cc, \uc544\uc9c1\uae4c\uc9c0\ub294 libstdc++ \ub77c\uc774\ube0c\ub7ec\ub9ac\ub9cc \uc9c0\uc6d0\uac00\ub2a5\ud558\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \"p\" \ud615\uc2dd\uc740 \ud568\uc218\ud3ec\uc778\ud130 \ud615\uc2dd\uc774\ub2e4. \ucd94\uc801 \ub300\uc0c1\uc758 \uc8fc\uc18c\uac00 \uae30\ub85d\ub418\uba74, \uc5b8\uc81c\ub098 \ud568\uc218 \uc774\ub984\uc73c\ub85c \ucd9c\ub825\ub41c\ub2e4. \ubb38\uc790\uc5f4 \ud0c0\uc785\uc758 \uc778\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c (\ud3ec\uc778\ud130) \uac12\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ud504\ub85c\uadf8\ub7a8\uc744 \ube44\uc815\uc0c1 \uc885\ub8cc\uc2dc\ud0ac \uc218 \uc788\uc74c\uc5d0 \uc8fc\uc758\ud558\ub77c. \uc0ac\uc2e4 uftrace \ub294 \uc720\ud6a8\ud55c \ud504\ub85c\uc138\uc2a4 \uc8fc\uc18c \uacf5\uac04\uc758 \ubc94\uc704\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \uc810\uac80\ud558\ub824\uace0 \ub178\ub825\ud558\uc9c0\ub9cc, \uba87\uba87\uc758 \uacbd\uc6b0\ub4e4\uc744 \ub193\uce60 \uc218 \uc788\ub2e4. \ub610\ud55c \ud2b9\uc815 \ub808\uc9c0\uc2a4\ud130\uc758 \uc774\ub984\uc774\ub098 \uc2a4\ud0dd \uc624\ud504\uc14b(offset)\uc73c\ub85c\ub3c4 \uc778\uc790\ub85c \uba85\uc2dc\ud560 \uc218 \uc788\ub2e4. (\ubc18\ud658\uac12\uc740 \ubd88\uac00\ud558\ub2e4) \uc544\ub798\ub294 \uc778\uc790\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud130 \uc774\ub984\ub4e4\uc774\ub2e4. x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4. $ uftrace record -A main@arg1/x -R main@retval/i32 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace record -A puts@arg1/s -R puts@retval ./hello Hello world $ uftrace replay # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ \uc774 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc740 \uc2e4\ud589\ud30c\uc77c\uc774 -pg \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ub418\uc5c8\uc744 \ub54c\uc5d0\ub9cc \uae30\ub85d\ub428\uc5d0 \uc720\uc758\ud558\ub77c. -finstrument-functions \ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \uc2e4\ud589\ud30c\uc77c\ub4e4\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubb34\uc2dc\ub41c\ub2e4. \uc778\uc790\uc640 \ubc18\ud658\uac12\uc758 \uae30\ub85d\uc740 \uc544\uc9c1\uae4c\uc9c4 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud568\uc218\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ub9cc\uc77c \ud504\ub85c\uadf8\ub7a8\uc774 DWARF \uc640 \uac19\uc740 \ub514\ubc84\uadf8 \uc815\ubcf4\uc640 \ud568\uaed8 \ube4c\ub4dc\ub418\uc5c8\ub2e4\uba74, (libdw \uc640 \ud568\uaed8 \ube4c\ub4dc\ub41c) uftrace \ub294 \uc790\ub3d9\uc73c\ub85c \uc778\uc790\ub4e4\uc758 \uac2f\uc218\uc640 \uc790\ub8cc\ud615\ub4e4\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub354\ub77c\ub3c4, \uba87\uba87 \uc798 \uc54c\ub824\uc9c4 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ub41c\ub2e4. \uc774 \uacbd\uc6b0 \uc0ac\uc6a9\uc790\ub294 \uc778\uc790\ub4e4\uc758 spec \uacfc \ubc18\ud658\uac12\uc744 \uc218\ub3d9\uc801\uc73c\ub85c \uba85\uc2dc\ud560 \ud544\uc694\uac00 \uc5c6\uc774 \ud568\uc218\uc758 \uc774\ub984 (\ub610\ub294 \ud328\ud134) \ub9cc \uc8fc\ub294 \uac83\uc73c\ub85c\ub3c4 \ucda9\ubd84\ud558\ub2e4. \uc0ac\uc2e4, \uba85\uc2dc\uc801\uc73c\ub85c argspec \uc744 \uc9c0\uc815\ud558\uba74 \uc790\ub3d9 argspec \uc744 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\ub2e4. $ uftrace record -A . -R main ./hello Hello world $ uftrace replay -F main # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ \uc778\uc790 \ud328\ud134 (\".\")\uc740 \ubaa8\ub4e0 \ubb38\uc790\uc5d0 \ub300\uc751\ub418\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\ub4e4\uc774 \uae30\ub85d\ub418\uc5c8\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \uc704\uc5d0\uc11c\ub294 \"main\" \ud568\uc218\uc758 \ub450 \uc778\uc790\ub4e4\uacfc \"puts\" \uc758 \ud55c \ubb38\uc790\uc5f4 \uc778\uc790\ub97c \ubcf4\uc5ec\uc900\ub2e4. \ub9cc\uc77c (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\uc758 \ubaa8\ub4e0 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc744 \ubcf4\uace0 \uc2f6\ub2e4\uba74, -a / \\--auto-args \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub77c. DYNAMIC TRACING FULL DYNAMIC TRACING uftrace \ub294 x86_64, AArch64 \ud658\uacbd\uc758 \ub7f0\ud0c0\uc784 (\uc815\ud655\ud558\uac8c\ub294, \ub85c\ub4dc \ud0c0\uc784) \uc5d0\uc11c \ub3d9\uc801\ucd94\uc801(dynamic tracing)\uc774 \uac00\ub2a5\ud558\ub2e4. \ud568\uc218\ub97c \uae30\ub85d\ud558\uae30 \uc804\uc5d0, \ubcf4\ud1b5 \ud504\ub85c\uadf8\ub7a8\uc744 -pg (\ud639\uc740 -finstrument-functions \uc73c\ub85c) \ube4c\ub4dc\ud574\uc57c \ud558\uace0, \uadf8\ub807\uac8c \ub41c\ub2e4\uba74 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc774 mcount() \ub97c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub290 \uc815\ub3c4 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubc1b\uac8c \ub420 \uac83\uc774\ub2e4. \ub3d9\uc801\ucd94\uc801\uc744 \ud560 \ub54c, -P / --patch \uc635\uc158\uc744 \ud1b5\ud574 \ud2b9\uc815 \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. capstone \ub514\uc2a4\uc5b4\uc148\ube14\ub9ac \uc5d4\uc9c4\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uc704 \uc635\uc158\uc744 \uc9c0\uc815\ud574\uc11c \ud504\ub85c\uadf8\ub7a8\uc744 (\uc7ac)\ucef4\ud30c\uc77c\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4. \uc774\uc81c uftrace \ub294 \uba85\ub839\uc5b4\ub4e4\uc744 \ubd84\uc11d\ud560 \uc218 \uc788\uac8c \ub418\uace0 (\ub9cc\uc57d \uac00\ub2a5\ud558\ub2e4\uba74) \uadf8 \uba85\ub839\uc5b4\ub4e4\uc744 \ub2e4\ub978 \uacf3\uc5d0 \ubcf5\uc0ac\ud558\uc5ec mcount() \ud568\uc218\ub4e4\uc744 \ud638\ucd9c\ud558\uc5ec uftrace \ub85c \ucd94\uc801\ud560 \uc218 \uc788\uac8c \ubc14\uc774\ub108\ub9ac\ub97c \uc870\uc791 \ud560 \uc218 \uc788\ub2e4. \uadf8 \uc774\ud6c4 \uc81c\uc5b4\uad8c\uc740 \ubcf5\uc0ac\ub41c \uba85\ub839\uc5b4\ub85c \ub118\uc5b4\uac00\uac8c \ub418\uace0, \uadf8 \ub2e4\uc74c\uc5d0\uc57c \ub0a8\uc740 \uba85\ub839\uc5b4\ub4e4\ub85c \ubc18\ud658\ud558\uac8c \ub41c\ub2e4. uftrace \ub97c \uc544\ub798\uc758 \uc608\uc81c\uc5d0\uc11c \ud3c9\uc18c\ucc98\ub7fc \uc0ac\uc6a9\ud560\ub54c\uc5d0\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uadf8 \uc774\uc720\ub294 \ubc14\uc774\ub108\ub9ac\uac00 \uc5b4\ub5a4 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub3c4 \ud638\ucd9c\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. $ gcc -o abc tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. \ud558\uc9c0\ub9cc -P a \ud328\uce58 \uc635\uc158\uc744 \uc801\uc6a9\ud55c\ub2e4\uba74, \ub3d9\uc801\uc73c\ub85c a() \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace record --no-libcall -P a abc $ uftrace replay # DURATION TID FUNCTION 0.923 us [19379] | a(); \ucd94\uac00\ub85c, '.'\uc744 \uc774\uc6a9\ud574 (glob\uc740, '*') P \uc635\uc158\uacfc \ud568\uaed8 \uc815\uaddc\ud45c\ud604\uc2dd\uc73c\ub85c \uc4f0\uc778 \ubb38\uc790\uc5d0 \ub300\ud574 \ud558\ub098\ub77c\ub3c4 \ub9e4\uce6d\ub418\ub294 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc801\uc6a9\uc2dc\ud0ac \uc218 \uc788\ub2e4. $ uftrace record --no-libcall -P . abc $ uftrace replay # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ -U \uc635\uc158\uc740 -P \uc635\uc158\uacfc \ubc18\ub300\ub85c \uc791\uc6a9\ud55c\ub2e4. \uc774 \uc635\uc158\ub4e4\uc774 \uac19\uc774 \uc4f0\uc774\uba74 \ub098\uc911\uc5d0 \uc4f0\uc5ec\uc9c4 \uc635\uc158\uc774 \uadf8 \uc774\uc804\uc758 \uc635\uc158\uc744 \ub300\uccb4\ud558\ub294 \ud6a8\uacfc\ub97c \uac16\ub294\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub9cc\uc57d \ub2f9\uc2e0\uc774 'a' \ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \ud568\uc218\ub97c \ucd94\uc801\ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace record --no-libcall -P . -U a abc $ uftrace replay # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ \uc5ec\uae30\uc11c \uc21c\uc11c\uac00 \uc911\uc694\ud55c\ub370 \ub9cc\uc57d \uc21c\uc11c\ub97c -U a -P . \uc640 \uac19\uc774 \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud558\ub294 \uacb0\uacfc\ub97c \ubcf4\uc774\ub294\ub370 \uc774\ub294 -P . \uac00 \ub2e4\ub978 \ubaa8\ub4e0\uac83\uc5d0 \uc6b0\uc120\ud574 \uc791\uc6a9\ud574\uc11c\uc774\ub2e4. GCC FENTRY capstone \uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4\uba74, \ud504\ub85c\uadf8\ub7a8\uc744 \ube4c\ub4dc\ud560 \ub54c \uba87\uba87 \ucef4\ud30c\uc77c\ub7ec (gcc) \uc635\uc158\ub4e4\uc744 \ucd94\uac00\ud574\uc57c \ud560 \uac83\uc774\ub2e4. gcc 5.1 \ubc84\uc804 \uc774\uc0c1\ubd80\ud130\ub294 -mfentry \uc640 -mnop-mcount \uc635\uc158\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc774 \uc635\uc158\ub4e4\uc740 \ud568\uc218 \ub9e8 \uc55e\uc5d0 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uace0 \uadf8 \uba85\ub839\uc5b4\ub97c NOP \uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4. \uadf8\ub807\uac8c \ub418\uba74 \uc77c\ubc18\uc801\uc778 \uc870\uac74\uc5d0\uc11c \uc2e4\ud589\ud560 \ub54c\uc5d0\ub294 \uc131\ub2a5 \uc0c1\uc758 \uc624\ubc84\ud5e4\ub4dc\uac00 \uac70\uc758 \uc5c6\uc5b4\uc9c8 \uac83\uc774\ub2e4. uftrace \ub294 -P \uc635\uc158\uc744 \uc774\uc6a9\ud558\uc5ec \uc120\ud0dd\uc801\uc73c\ub85c mcount() \ud568\uc218\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub3c4\ub85d \uc804\ud658\ud560 \uc218 \uc788\ub2e4. $ gcc -pg -mfentry -mnop-mcount -o abc-fentry tests/s-abc.c $ uftrace record -P . --no-libcall abc-fentry $ uftrace replay # DURATION TID FUNCTION [ 18973] | main() { [ 18973] | a() { [ 18973] | b() { 0.852 us [ 18973] | c(); 2.378 us [ 18973] | } /* b */ 2.909 us [ 18973] | } /* a */ 3.756 us [ 18973] | } /* main */ CLANG XRAY Clang/LLVM 4.0\uc740 X-ray \ub77c\ub294 \uae30\uc220\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\ub294 gcc -mfentry -mnop-mcount \uc640 -finstrument-functions \ub97c \uacb0\ud569\ud55c \uac83\uacfc\ub3c4 \uc720\uc0ac\ud558\ub2e4. uftrace\ub294 X-ray \ub85c \ube4c\ub4dc\ub41c \uc2e4\ud589\ud30c\uc77c\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub3d9\uc801\ucd94\uc801\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 clang \uc73c\ub85c \uc544\ub798\uc758 \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \uadf8\uc640 \ub3d9\uc77c\ud558\uac8c \ub3d9\uc801\ucd94\uc801\uc744 \uc704\ud574 \uc544\ub798\uc640 \uac19\uc774 -P \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc744 \uac83\uc774\ub2e4. $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace record -P main abc-xray $ uftrace replay # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace record -P . abc-xray $ uftrace replay # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */ PATCHABLE FUNCTION ENTRY \ucd5c\uadfc gcc\uc640 clang \ucef4\ud30c\uc77c\ub7ec\ub294 \ubaa8\ub450 -fpatchable-function-entry=N[,M] \ub77c\ub294 \uc720\uc6a9\ud55c \uc635\uc158\uc744 \uc81c\uacf5\ud558\ub294\ub370, \uc774\ub294 \ud568\uc218 \uc9c4\uc785 \uc774\uc804\uc5d0 M NOP\ub97c \uc0dd\uc131\ud558\uace0 \ud568\uc218 \uc9c4\uc785 \uc774\ud6c4\uc5d0 N-M NOP\ub97c \uc0dd\uc131\ud55c\ub2e4. M\uc774 0\uc778 \uacbd\uc6b0 -fpatchable-function-entry=N \ub9cc\uc73c\ub85c\ub3c4 \ucda9\ubd84\ud558\ub2e4. \ub3d9\uc801\ucd94\uc801\uc744 \uc704\ud55c NOP \uc218\ub294 \uc544\ud0a4\ud14d\ucc98\uc5d0 \ub530\ub77c \ub2e4\ub974\uc9c0\ub9cc uftrace \uae30\ub85d\uc744 \uc704\ud574 \ub3d9\uc801\uc73c\ub85c \ud638\ucd9c \uba85\ub839\uc5b4\ub97c \ud328\uce58\ud558\ub824\uba74 x86_64\ub294 5\uac1c\uc758 NOP\ub97c \uc694\uad6c\ud558\uace0 AArch64\ub294 2\uac1c\uc758 NOP\ub97c \uc694\uad6c\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4 x86_64\uc5d0\uc11c\ub294, \uc544\ub798\uc640 \uac19\uc774 \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 \ube4c\ub4dc\ud558\uace0 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. $ gcc -fpatchable-function-entry=5 -o abc-fpatchable tests/s-abc.c $ uftrace record -P . abc-fpatchable $ uftrace replay # DURATION TID FUNCTION [ 6818] | main() { [ 6818] | a() { [ 6818] | b() { [ 6818] | c() { 0.926 us [ 6818] | getpid(); 4.158 us [ 6818] | } /* c */ 4.590 us [ 6818] | } /* b */ 4.957 us [ 6818] | } /* a */ 5.593 us [ 6818] | } /* main */ \uc774 \uae30\ub2a5\uc740 __attribute__ ((patchable_function_entry (N,M))) \ub85c \ud2b9\uc815 \ud568\uc218\uc5d0 \ucef4\ud30c\uc77c\ub7ec \uc18d\uc131\uc744 \ucd94\uac00\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4, 'tests/s-abc.c' \ud504\ub85c\uadf8\ub7a8\uc740 \uc544\ub798\uc640 \uac19\uc774 \uc218\uc815\ub420 \uc218 \uc788\ub2e4. static int c(void) { return 100000; } __attribute__((patchable_function_entry(5))) static int b(void) { return c() + 1; } static int a(void) { return b() - 1; } __attribute__((patchable_function_entry(5))) int main(void) { int ret = 0; ret += a(); return ret ? 0 : 1; } \uc774 \uc18d\uc131\uc740 'main'\uacfc 'b' \ud568\uc218\uc5d0\ub9cc \ucd94\uac00\ub418\uc5c8\uace0 \uc774 \ud504\ub85c\uadf8\ub7a8\uc740 \ub2e4\ub978 \ucd94\uac00\uc801\uc778 \ucef4\ud30c\uc77c\ub7ec \uc635\uc158 \uc5c6\uc774\ub3c4 \uc815\uc0c1\uc801\uc73c\ub85c \ucef4\ud30c\uc77c\ub418\uc9c0\ub9cc, \ucef4\ud30c\uc77c\ub7ec\ub294 \uc18d\uc131\uc744 \uac10\uc9c0\ud558\uace0 'main'\uacfc 'b' \ud568\uc218 \uc9c4\uc785\uc2dc\uc810\uc5d0 5\uac1c\uc758 NOP\ub97c \ucd94\uac00\ud55c\ub2e4. $ gcc -o abc tests/s-patchable-abc.c $ uftrace record -P . abc $ uftrace replay # DURATION TID FUNCTION [ 20803] | main() { 0.342 us [ 20803] | b(); 1.608 us [ 20803] | } /* main */ \uc774\ub7f0 \uc2dd\uc73c\ub85c, uftrace\ub294 \uc0ac\uc6a9\uc790\uac00 \uc6d0\ud558\uc5ec \uba85\uc2dc\uc801\uc73c\ub85c \uc18d\uc131\uc744 \ucd94\uac00\ud55c \ud568\uc218\ub9cc\uc744 \uc120\ubcc4\uc801\uc73c\ub85c \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. \uc774\ub7ec\ud55c \uc811\uadfc\uc740 \ucef4\ud30c\uc77c\ub7ec \ud50c\ub798\uadf8\ub85c \ud65c\uc131\ud654\ub41c \ud568\uc218 \uc804\uccb4\ub97c \ucd94\uc801\ud558\ub294 \ubc29\uc2dd\ubcf4\ub2e4 \ub35c \ubc88\uac70\ub85c\uc6b4 \ubc29\uc2dd\uc73c\ub85c \ucd94\uc801 \uae30\ub85d\uc744 \uc218\uc9d1\ud560 \uc218 \uc788\ub2e4. -fpatchable-function-entry=N[,M] \uc635\uc158\uacfc \uadf8\uac83\uc758 \uc18d\uc131\uc740 gcc-8.1\uacfc clang-10\ubd80\ud130 \uc9c0\uc6d0\ub41c\ub2e4. \uc774 \ub3d9\uc801\ucd94\uc801 \uae30\ub2a5\uc740 \ud604\uc7ac\ub85c\uc11c x86_64\uc640 AArch64 \ubaa8\ub450\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. SCRIPT EXECUTION uftrace \ub294 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\uc774 \uac00\ub2a5\ud558\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \uc2a4\ud06c\ub9bd\ud2b8 \ud0c0\uc785\uc740 Python 2.7, Python 3 \uadf8\ub9ac\uace0 Lua 5.1 \uc774\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ub124 \uac1c\uc758 \ud568\uc218\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4. 'uftrace_entry' \uc640 'uftrace_exit' \uc740 \uac01 \ud568\uc218\uc758 \uc9c4\uc785\uc2dc\uc810\uacfc \ubc18\ud658\uc2dc\uc810\uc5d0 \ud56d\uc0c1 \uc2e4\ud589\ub41c\ub2e4. \ud558\uc9c0\ub9cc 'uftrace_begin' \uacfc 'uftrace_end' \ub294 \ubd84\uc11d \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \ucd08\uae30\ud654\ub418\uace0 \uc885\ub8cc\ub420\ub54c \ud55c \ubc88\uc529\ub9cc \uc2e4\ud589\ub41c\ub2e4. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") \uc704 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc544\ub798\uc640 \uac19\uc774 \uae30\ub85d\ub41c \uc2dc\uac04 \uc21c\uc73c\ub85c \uc2e4\ud589\ub420 \uc218 \uc788\ub2e4: $ uftrace record -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished 'ctx' \ubcc0\uc218\ub294 \uc544\ub798\uc758 \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\ub294 \uc0ac\uc804\ud0c0\uc785(dictionary type)\uc758 \ubcc0\uc218\uc774\ub2e4. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; 'script_context' \uc5d0 \uc788\ub294 \uac01 \ud56d\ubaa9\ub4e4\uc740 \uc2a4\ud06c\ub9bd\ud2b8 \ub0b4\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\ub2e4. \uc2a4\ud06c\ub9bd\ud305\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 uftrace-script (1)\ub97c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. WATCH POINT uftrace \uc758 watch point \ub294 \ud2b9\uc815 \uac12\uc758 \ubcc0\uacbd\uc0ac\ud56d\uc744 \ucd9c\ub825\ud55c\ub2e4. \uac1c\ub150\uc801\uc73c\ub85c\ub294 \uc77c\ubc18\uc801\uc778 \ub514\ubc84\uac70\uc758 watch point \uc640 \uac19\uc9c0\ub9cc, \ud568\uc218\uc758 \uc9c4\uc785\uacfc \uc885\ub8cc\uc5d0\ub9cc \uc801\uc6a9\ub418\uae30 \ub54c\ubb38\uc5d0 \uba87\uba87 \ubcc0\uacbd\uc0ac\ud56d\ub4e4\uc740 \ub193\uce60 \uc218\ub3c4 \uc788\ub2e4. \uc544\uc9c1\uae4c\uc9c0\ub294, \uc544\ub798\uc758 watch point \ub4e4\ub9cc\uc774 \uc9c0\uc6d0\ub41c\ub2e4. \"cpu\" : \ud604\uc7ac \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 cpu \ubc88\ud638 \ud2b8\ub9ac\uac70\ub97c \uc77d\uc744 \ub54c\ucc98\ub7fc, \uacb0\uacfc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc8fc\uc11d \ud615\uc2dd\uc758 \uc774\ubca4\ud2b8\ub85c \ucd9c\ub825\ub41c\ub2e4. $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */ \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-replay (1), uftrace-report (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1) \ubc88\uc5ed\uc790 \uac15\ubbfc\ucca0 tegongkang@gmail.com , \uae40\ud64d\uaddc honggyu.kp@gmail.com","title":"Uftrace record"},{"location":"ko/uftrace-record/#_1","text":"uftrace-record - \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-record/#_2","text":"uftrace record [ options ] COMMAND [ command-options ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-record/#_3","text":"\uc774 \uba85\ub839\uc5b4\ub294 COMMAND \ub85c \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\uace0 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \ud750\ub984\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uacfc\uc815\uc5d0\uc11c \uc544\ubb34\uac83\ub3c4 \ucd9c\ub825\ud558\uc9c0 \uc54a\uace0 uftrace.data \ub514\ub809\ud1a0\ub9ac\uc5d0 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. \uc774 \ub370\uc774\ud130\ub294 \uc774\ud6c4\uc5d0 uftrace replay \ub098 uftrace report \ub4f1\uc744 \ud1b5\ud574 \ubd84\uc11d\ub420 \uc218 \uc788\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-record/#record","text":"-A SPEC , --argument= SPEC : \ud568\uc218\uc758 \uc778\uc790\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --srcline \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. \uc778\uc790\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -R SPEC , --retval= SPEC : \ud568\uc218\ub4e4\uc758 \ubc18\ud658\uac12\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --srcline \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. \ubc18\ud658\uac12\uc5d0 \ub300\ud55c \uc124\uba85\uc740 ARGUMENTS \ub97c \ucc38\uace0\ud55c\ub2e4. -P FUNC , --patch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub97c \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud558\uc5ec \ucd94\uc801\ud558\uace0 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -U FUNC , --unpatch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\uc5d0 \ub300\ud574 \ub3d9\uc801 \ud328\uce58\ub97c \uc801\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \uad00\ub828 \uc124\uba85\uc740 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \ud070 \ud568\uc218\ub4e4\uc744 \ub3d9\uc801\uc73c\ub85c \ud328\uce58\ud55c\ub2e4. \ub3d9\uc801\ucd94\uc801\uc5d0 \ub300\ud574\uc11c\ub294 DYNAMIC TRACING \uc744 \ucc38\uace0\ud55c\ub2e4. -E EVENT , --event= EVENT : \uc774\ubca4\ud2b8 \ucd94\uc801\uc744 \ud65c\uc131\ud654\ud55c\ub2e4. \uc2dc\uc2a4\ud15c \ub0b4\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\uc5ec\uc57c \ud55c\ub2e4. -S SCRIPT_PATH , --script= SCRIPT_PATH : \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc8fc\uc5b4\uc9c4 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ud65c\uc6a9\ud574\uc11c \ucd94\uac00\uc801\uc778 \uc791\uc5c5\uc744 \ud55c\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc5b8\uc5b4 \uc885\ub958\ub294 \ud30c\uc77c\uc758 \ud655\uc7a5\uc790\ub97c \ud1b5\ud574 \uc815\ud574\uc9c0\ub294\ub370 \ud30c\uc774\uc36c\uc758 \uacbd\uc6b0 \".py\" \uc774\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589 \uc124\uba85\uc740 SCRIPT EXECUTION \uc744 \ucc38\uace0\ud55c\ub2e4. -W, --watch= POINT : \ud2b9\uc815\ud55c \uac12\uc774 \ubcc0\uacbd\ub418\uc5c8\uc744 \uacbd\uc6b0 \uc774\ub97c \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud574 watch point \ub97c \ucd94\uac00\ud55c\ub2e4. \uc790\uc138\ud55c \uc0ac\ud56d\uc740 WATCH POINT \ub97c \ucc38\uace0\ud55c\ub2e4. -a, --auto-args : \uc54c\ub824\uc9c4 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\ub4e4\uc744 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ud55c\ub2e4. \ubcf4\ud1b5\uc758 \uacbd\uc6b0 C \uc5b8\uc5b4 \ub610\ub294 \uc2dc\uc2a4\ud15c\uc758 \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc5d0 \ud574\ub2f9\ud558\uc9c0\ub9cc, \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4\uba74 \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\ub3c4 \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. --srcline \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. -l, --nest-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4 \uac04\uc758 \ud568\uc218 \ud638\ucd9c\ub3c4 \ud568\uaed8 \uae30\ub85d\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c uftrace \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \uc9c1\uc811 \ud638\ucd9c\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. -k, --kernel : \uc0ac\uc6a9\uc790 \ud504\ub85c\uadf8\ub7a8\uc758 \ud568\uc218\uc640 \ud568\uaed8 \ucee4\ub110 \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \ucee4\ub110\ub85c\uc758 \uc9c4\uc785 \ubc0f \ubcf5\uadc0 \ud568\uc218\ub9cc \uae30\ub85d\ud55c\ub2e4. \uc774\ub97c \ubcc0\uacbd\ud558\ub824\uba74 --kernel-depth \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. -K DEPTH , --kernel-depth= DEPTH : \ucee4\ub110 \ucd5c\ub300 \ud568\uc218 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. --kernel \uc635\uc158\uc774 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ub41c\ub2e4. --clock= CLOCK : \ud0c0\uc784\uc2a4\ud0ec\ud504\ub97c \uc77d\ub294 \ud074\ub7ed \uc18c\uc2a4\ub97c \uc124\uc815\ud55c\ub2e4. CLOCK \uc740 'mono', 'mono_raw', 'boot' \uc911\uc758 \ud558\ub098\ub85c \uc124\uc815 \uac00\ub2a5\ud558\uace0, \uae30\ubcf8 \uc124\uc815\uc740 'mono' \uc774\ub2e4. --host= HOST : \ud30c\uc77c\uc5d0 \uc4f0\uc9c0 \uc54a\uace0, \uc8fc\uc5b4\uc9c4 \ud638\uc2a4\ud2b8\uc5d0\uac8c \ucd94\uc801 \ub370\uc774\ud130\ub97c \ub124\ud2b8\uc6cc\ud06c \uc0c1\uc73c\ub85c \uc804\uc1a1\ud55c\ub2e4. \ub370\uc774\ud130\ub97c \ubc1b\uae30 \uc704\ud574\uc11c uftrace recv \uba85\ub839\uc5b4\uac00 \ubaa9\uc801\uc9c0\uc5d0\uc11c \uc2e4\ud589\ub418\uc5b4\uc57c \ud55c\ub2e4. --port= PORT : --host \uc635\uc158\uc744 \uc774\uc6a9\ud574\uc11c \ub370\uc774\ud130\ub97c \ub124\ud2b8\uc6cc\ud06c\ub85c \ubcf4\ub0bc \ub54c, \uae30\ubcf8 \ud3ec\ud2b8(8090)\uac00 \uc544\ub2cc \ub2e4\ub978 \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud55c\ub2e4. --signal= TRG : \ud568\uc218\uac00 \uc544\ub2cc \uc120\ud0dd\ud55c \uc2dc\uadf8\ub110\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc81c\ud55c \uc0ac\ud56d\ub4e4\ub85c \uc778\ud558\uc5ec \uc18c\uc218 \ud2b8\ub9ac\uac70 \uae30\ub2a5\ub9cc\uc744 \uc9c0\uc6d0\ud558\uace0 \uc788\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc791\uc5c5: : trace_on, trace_off, finish. \uc774 \uc635\uc158\uc740 \ub450\ubc88 \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70 \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. --nop : \uc5b4\ub5a4 \ud568\uc218\ub3c4 record \ud558\uac70\ub098 replay\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774\ub294 \uc544\ubb34 \uc77c\ub3c4 \ud558\uc9c0 \uc54a\ub294 \uba85\ub839\uc5b4\ub85c, \uc131\ub2a5 \ube44\uad50\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --force : \uc57d\uac04\uc758 \ubb38\uc81c\uac00 \uc788\uc5b4\ub3c4 uftrace \uac00 \uc2e4\ud589\ub41c\ub2e4. uftrace record \ub294 \uc2e4\ud589\ud30c\uc77c\uc5d0\uc11c \ucef4\ud30c\uc77c\ub7ec\uc5d0 \uc758\ud574 \uc0dd\uc131\ub418\ub294 mcount \ub97c \ucc3e\uc744 \uc218 \uc5c6\uc744 \ub54c uftrace \uac00 \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc624\ub958 \uba54\uc2dc\uc9c0\uc640 \ud568\uaed8 \uc885\ub8cc\ub41c\ub2e4. \ub2e8, \uc0ac\uc6a9\uc790\ub294 \ub3d9\uc801\uc73c\ub85c \uc5f0\uacb0\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ub0b4\uc758 \uae30\ub2a5\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uc744 \uc218 \uc788\uc73c\uba70, \uc774 \uacbd\uc6b0 --force \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec uftrace \ub97c \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc788\ub2e4. \ub610\ud55c -A / --argument \ubc0f -R / --retval \uc635\uc158\uc740 -pg \ub85c \ucef4\ud30c\uc77c\ub41c \ubc14\uc774\ub108\ub9ac\uc5d0 \ub300\ud574\uc11c\ub9cc \uc791\ub3d9\ud558\ubbc0\ub85c, uftrace \ub294 \uadf8 \uc635\uc158 \uc5c6\uc774 \ube4c\ub4dc\ub41c \ubc14\uc774\ub108\ub9ac\ub97c \uc2e4\ud589\ud558\ub824\uace0 \ud560 \ub54c\uc5d0\ub3c4 \uc885\ub8cc\ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \uacbd\uace0\ub97c \ubb34\uc2dc\ud558\uace0 \uc778\uc218 \ubc0f \ubc18\ud658 \uac12 \uc5c6\uc774 uftrace \ub97c \uc2e4\ud589\uc2dc\ud0a4\ub3c4\ub85d \ud55c\ub2e4. --time : time(1) \uc2a4\ud0c0\uc77c\ub85c \uc2e4\ud589\uc2dc\uac04\uc744 \ucd9c\ub825\ud55c\ub2e4. -e, --estimate-return : \uac01 \ud568\uc218\uc758 \uc9c4\uc785 \ub370\uc774\ud130\ub9cc\uc744 \uae30\ub85d\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \uc2a4\ud0dd\uc744 \ub2e4\ub8f0 \uacbd\uc6b0 \uc720\uc6a9\ud558\uac8c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace\ub294 \ud568\uc218\uc758 \ubc18\ud658\uac12\uc744 \ud6c4\ud0b9\ud558\uae30 \uc704\ud574 \uc791\uc5c5 \ub300\uc0c1\uc758 \uc2e4\ud589 \uc2a4\ud0dd \ud504\ub808\uc784\uc744 \uc218\uc815\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub294 \ub54c\ub54c\ub85c \ubb38\uc81c\ub97c \ubc1c\uc0dd\uc2dc\ud0a4\uace0 \ubaa8\ub4e0 \uacbd\uc6b0\ub97c \uc81c\ub300\ub85c \ub2e4\ub8e8\uae30 \uc5b4\ub835\ub2e4. \uc774 \uc635\uc158\uc740 uftrace\uac00 \ub9ac\ud134 \uc8fc\uc18c\ub97c \ud6c4\ud0b9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc5ec \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \uc608\ubc29\ud55c\ub2e4. \ubc18\ud658\ub41c \uc2dc\uac04\uc740 \uc5f0\uc18d\ub41c \ub450 \ud568\uc218\ub4e4\uc758 \uc2e4\ud589 \uc2dc\uac04\uc758 \uc808\ubc18\uc73c\ub85c \uc608\uce21\ub41c\ub2e4.","title":"RECORD \uc635\uc158"},{"location":"ko/uftrace-record/#_4","text":"-F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788 \ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815 \uc740 \ubb34\uc2dc\ud55c\ub2e4.) \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801 \uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \uc744 \ucc38\uace0\ud55c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --event \ub97c \ud1b5\ud55c \uba85\uc2dc\uc801\uc778 \uc774\ubca4\ud2b8 \uae30\ub85d \ubc29\uc2dd\uc5d0\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : (\uae30\ubcf8 \uc635\uc158\uc73c\ub85c \ucf1c\uc838\uc788\ub294) \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8 \ub808\ucf54\ub529\uc744 \ud558\uc9c0 \uc54a\ub294\ub2e4. --match= TYPE : TYPE\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8\uc740 regex \uc774\ub2e4. --disable : \ucd94\uc801\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc740 \ucc44\ub85c uftrace\ub97c \uc2dc\uc791\ud55c\ub2e4. \uc774\uac83\uc740 trace_on \ud2b8\ub9ac\uac70\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.","title":"\uacf5\ud1b5 \uc635\uc158"},{"location":"ko/uftrace-record/#record_1","text":"--libmcount-path= PATH : libmcount \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c PATH \uc5d0\uc11c \uba3c\uc800 \ucc3e\ub294\ub2e4. \uc774 \uc635\uc158\uc740 \ub300\ubd80\ubd84 \ud14c\uc2a4\ud2b8 \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub41c\ub2e4. -b SIZE , --buffer= SIZE : \uc800\uc7a5\ud560 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8 \uc0ac\uc774\uc988\ub294 128k \uc774\ub2e4. --kernel-buffer= SIZE : \uc800\uc7a5\ud560 \ucee4\ub110 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. \ucee4\ub110 \ub0b4\ubd80\uc758 \uae30\ubcf8 \uc124\uc815\uc740 1408k \uc774\ub2e4. --no-pltbind : \ub3d9\uc801 \uc2ec\ubcfc \uc8fc\uc18c\ub97c \ubc14\uc778\ub529\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc774 \uc635\uc158\uc740 LD_BIND_NOT \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc2dc\uc801\uc73c\ub85c \ubc1c\uc0dd\ud558\ub294 (\uccab \ubc88\uc9f8) \uc811\uadfc\uc73c\ub85c \uc778\ud574 \ub204\ub77d\ub420 \uc218 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. --no-libcall \uc635\uc158\uacfc \ud568\uaed8 \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc758\ubbf8\uac00 \uc5c6\ub2e4. --max-stack= DEPTH : \ub0b4\ubd80\uc801\uc73c\ub85c \uae30\ub85d\ud558\ub294 \ud568\uc218 \ud638\ucd9c \uc2a4\ud0dd\uc758 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 1024 \uc774\ub2e4. --num-thread= NUM : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 NUM \uac1c\uc758 \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 1/4 \uc73c\ub85c \uc124\uc815\ud55c\ub2e4. (\ud558\uc9c0\ub9cc \ucee4\ub110\uc744 \ud3ec\ud568\ud574 \uc804\uccb4\ub97c \uae30\ub85d\ud558\ub294 \uacbd\uc6b0, \ucd5c\ub300\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c CPU \uc758 \uc218\ub85c \uc124\uc815\ud55c\ub2e4.) --libmcount-single : \ube60\ub978 \ub370\uc774\ud130 \uae30\ub85d\uc744 \uc704\ud574\uc11c libmcount \uc758 \ub2e8\uc77c \uc4f0\ub808\ub4dc \ubc84\uc804\uc744 \uc0ac\uc6a9\ud55c\ub2e4. \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 pthread \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubb34\uc2dc\ub41c\ub2e4. --rt-prio= PRIO : \ub370\uc774\ud130 \uae30\ub85d\uc744 \ud558\ub294 \uc2a4\ub808\ub4dc\ub97c PRIO \ub97c \uc6b0\uc120\uc21c\uc704\ub85c \uac16\ub294 \uc2e4\uc2dc\uac04(FIFO)\ub85c \ud5a5\uc0c1\uc2dc\ud0a8\ub2e4. \uc774 \uc635\uc158\uc740 \ud2b9\ud788 \ub300\uaddc\ubaa8 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\ub294 \uc804\uccb4 \ucee4\ub110 \ucd94\uc801\uacfc \uac19\uc740 \ud658\uacbd\uc5d0\uc11c \uc720\uc6a9\ud558\ub2e4. --keep-pid : \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \ub54c \ub3d9\uc77c\ud55c pid \uac12\uc744 \uc720\uc9c0\ud558\uac8c \ud574\uc900\ub2e4. \uc77c\ubd80 \ub370\ubaac \ud504\ub85c\uc138\uc2a4\uc758 \uacbd\uc6b0 \ubd84\uae30 \ud560 \ub584 \ub3d9\uc77c\ud55c pid \ub97c \uac16\ub294\uac83\uc774 \uc911\uc694\ud558\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c uftrace \ub97c \uc2e4\ud589\ud558\uba74 fork() \ub97c \ub0b4\ubd80\uc801\uc73c\ub85c \ub2e4\uc2dc \ud638\ucd9c\ud558\ubbc0\ub85c pid \uac00 \ubcc0\uacbd\ub41c\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ud130\ubbf8\ub110 \uc124\uc815\uc774 \uc190\uc0c1\ub418\ub294 \uacbd\uc6b0\uac00 \uc788\uae30 \ub584\ubb38\uc5d0 --no-pager \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. --no-randomize-addr : ASLR(Address Space Layout Randomization)\uc744 \ube44\ud65c\uc131\ud654 \ud55c\ub2e4. \uc774\ub294 \ud504\ub85c\uc138\uc2a4\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub85c\ub529 \uc8fc\uc18c\uac00 \ub9e4\ubc88 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c9\uc544\uc900\ub2e4. --srcline : \ub514\ubc84\uadf8 \uc815\ubcf4\uc5d0 \ub808\ucf54\ub4dc\ud55c \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4.","title":"RECORD \uc124\uc815 \uc635\uc158"},{"location":"ko/uftrace-record/#filters","text":"uftrace \ub294 \uad00\uc2ec \uc788\ub294 \ub300\uc0c1\uc774 \uc544\ub2cc \ud568\uc218\ub4e4\uc744 \uac10\ucd94\ub294 \ud544\ud130\ub9c1\uc744 \ud560 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\uc790\ub4e4\uc774 \uad00\uc2ec \uc788\ub294 \ud568\uc218\ub4e4\uc5d0\ub9cc \uc9d1\uc911\ud560 \uc218 \uc788\uac8c \ud558\uace0, \uae30\ub85d\ub418\ub294 \ub370\uc774\ud130\uc758 \ud06c\uae30\ub97c \uc904\uc77c \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ud55c\ub2e4. uftrace \uac00 \ud638\ucd9c\ub418\uba74, \ub450 \uc885\ub958\uc758 \ud568\uc218 \ud544\ud130\ub97c \uac16\uac8c \ub418\ub294\ub370 \uc774\ub4e4\uc740 \ub300\uc0c1 \ud568\uc218\ub97c \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd(opt-in)\uc758 \ud544\ud130\ub85c -F / --filter \uc640 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd(opt-out)\uc758 \ud544\ud130\uc778 -N / --notrace \uac00 \uc788\ub2e4. \uc774 \ud544\ud130\ub4e4\uc740 \uae30\ub85d(record)\ud558\uac70\ub098 \uc7ac\uc0dd(replay)\ud560 \ub54c \ubaa8\ub450 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4. \uccab\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \uc774\uac83\uc740 \uc544\ubb34\uac83\ub3c4 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \uc5b4\ub5a4 \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uba74, \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ucd94\uc801\uc744 \uc2dc\uc791\ud55c\ub2e4. \uadf8\ub7ec\ub2e4\uac00 \uadf8 \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc911\ub2e8\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, a() , b() \uc640 c() \ub97c \ucc28\ub840\ub85c \ud638\ucd9c\ud558\ub294 \uac04\ub2e8\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \uc0dd\uac01\ud574\ubcf4\uc790. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 uftrace \ub294 main() \ubd80\ud130 c() \uae4c\uc9c0\uc758 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace record ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ud558\uc9c0\ub9cc -F b \ud544\ud130 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub294, main() \uacfc a() \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uace0 \uc624\uc9c1 b() \uc640 c() \ub9cc\uc774 \ud3ec\ud568\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc77c\uac83\uc774\ub2e4. $ uftrace record -F b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ \ub450\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \uac83\uc774 \ucd94\uc801\ub418\uc9c0\ub9cc, \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uba48\ucd98\ub2e4. \uc81c\uc678\ub41c \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uc7ac\uac1c\ud55c\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c, b() \ud568\uc218\uc640 \uadf8\uc758 \ubaa8\ub4e0 \ud638\ucd9c\uc740 -N \uc635\uc158\uc73c\ub85c \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. $ uftrace record -N b ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ \ub9cc\uc77c \ud2b9\uc815 \ud568\uc218\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uace0 \uadf8 \ud568\uc218\uac00 \uc5b4\ub5bb\uac8c \ud638\ucd9c\ub418\ub294\uc9c0\ub9cc \uc54c\uace0 \uc2f6\ub2e4\uba74, caller filter \ub97c \uc0ac\uc6a9\ud558\uba74 \ub420 \uac83\uc774\ub2e4. \uadf8 \ud568\uc218\ub97c \ub9c8\uc9c0\ub9c9(leaf) \ub178\ub4dc\ub85c \ub9cc\ub4e4\uace0, \uadf8 \ud568\uc218\uc758 \ubaa8\ub4e0 \ubd80\ubaa8 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace record -C b ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, \ud638\ucd9c \uacbd\ub85c\uc5d0 \uc5c6\ub294 \ud568\uc218\ub4e4\uc744 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, \ud568\uc218 b() \uc758 \uc790\uc2dd \ud568\uc218\uc778 \ud568\uc218 c() \ub610\ud55c \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, -D \uc635\uc158\uc73c\ub85c \ud568\uc218\uc758 \uc911\ucca9 \uae4a\uc774\uc744 \uc81c\ud55c\ud560 \uc218\ub3c4 \uc788\ub2e4. $ uftrace record -D 3 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, uftrace \ub294 \ud568\uc218 \ud638\ucd9c \uae4a\uc774\ub97c \ucd5c\ub300 3 \uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd9c\ub825\ud588\uae30 \ub54c\ubb38\uc5d0, \ub9c8\uc9c0\ub9c9 \ud568\uc218\uc778 c() \ub294 \uc0dd\ub7b5\ub418\uc5c8\ub2e4. -D \uc635\uc158\uc740 -F \uc635\uc158\uacfc \ud568\uaed8 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ub54c\ub85c\ub294, \uc624\ub79c \uc2dc\uac04 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\uc744 \ud2b9\ubcc4\ud558\uac8c \uad00\ucc30\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud558\ub2e4. \uc774\ub294 \uc791\uc740 (\uc2e4\ud589\uc2dc\uac04\uc744 \uac00\uc9c0\ub294) \ud568\uc218\ub4e4 \uc911\uc5d0\ub294 \uad00\uc2ec \ub300\uc0c1\uc774 \uc544\ub2cc \uac83\ub4e4\uc774 \ub9ce\uae30 \ub54c\ubb38\uc774\ub2e4. -t / --time-filter \uc635\uc158\uc740 \uba85\uc2dc\ub41c \uc784\uacc4\uc2dc\uac04\ubcf4\ub2e4 \uc624\ub798 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ubcfc \uc218 \uc788\uac8c \ud558\ub294 \uc2dc\uac04 \uae30\ubc18\uc758 \ud544\ud130\uc774\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c\ub294, \uc0ac\uc6a9\uc790\ub294 \ub300\ubd80\ubd84 \uc544\ub798\uc640 \uac19\uc774 5 \ub9c8\uc774\ud06c\ub85c(us) \ucd08 \uc774\uc0c1 \uac78\ub824\uc11c \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ubcf4\uace0 \uc2f6\uc5b4\ud560 \uac83\uc774\ub2e4. $ uftrace record -t 5us ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ -t / --time-filter \uc635\uc158\uc740 \uc0ac\uc6a9\uc790 \ud568\uc218\uc5d0\uac8c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ucee4\ub110 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc, \uc774\uac83\ub4e4\uc740 replay, report, dump\uc640 -t / --time-filter \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud55c graph \uba85\ub839\uc758 \uacb0\uacfc\uc5d0 \uc228\uaca8\uc838 \uc788\uc744 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\ub41c \ud568\uc218\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4. \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 TRIGGERS \ud56d\ubaa9\uc5d0\uc11c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. \ucee4\ub110 \ud568\uc218 \ucd94\uc801\uc744 \uc124\uc815\ud558\uba74, @kernel \uc2dd\ubcc4\uc790\ub97c \ud1b5\ud574 \ucee4\ub110 \ud568\uc218\uc5d0 \ub300\ud55c \ud544\ud130\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ud558 \uc608\uc2dc\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \ud568\uc218\uc640 (\ucee4\ub110 \ub808\ubca8\uc758) page fault \ud578\ub4e4\ub7ec\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. $ sudo uftrace -k -F '.*page_fault@kernel' ./abc # DURATION TID FUNCTION [14721] | main() { 7.713 us [14721] | __do_page_fault(); 6.600 us [14721] | __do_page_fault(); 6.544 us [14721] | __do_page_fault(); [14721] | a() { [14721] | b() { [14721] | c() { 0.860 us [14721] | getpid(); 2.346 us [14721] | } /* c */ 2.956 us [14721] | } /* b */ 3.340 us [14721] | } /* a */ 79.086 us [14721] | } /* main */","title":"FILTERS"},{"location":"ko/uftrace-record/#triggers","text":"uftrace \ub294 (\ud544\ud130\uac00 \uc788\ub4e0 \uc5c6\ub4e0) \uc120\ud0dd\ub41c \ud568\uc218 \ud638\ucd9c\uacfc \uc2dc\uadf8\ub110\uc5d0 \ub300\ud55c \ud2b8\ub9ac\uac70 \ub3d9\uc791\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \ud2b8\ub9ac\uac70\uc640 \uc0ac\uc591\uc5d0 \ub300\ud55c BNF \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"trace\" | \"trace_on\" | \"trace_off\" | \"time=\"<time_spec> | \"size=\"<num> | \"read=\"<read_spec> | \"finish\" | \"filter\" | \"notrace\" | \"recover\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" <read_spec> := \"proc/statm\" | \"page-fault\" | \"pmu-cycle\" | \"pmu-cache\" | \"pmu-branch\" depth \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud544\ud130\uc758 \uae4a\uc774\ub97c \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\uc591\ud55c \ud568\uc218\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \ud544\ud130 \uae4a\uc774\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ud2b8\ub9ac\uac70 \uc791\ub3d9 \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc804\uc5ed \ud544\ud130 \uae4a\uc774\uac00 5 \ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc9c0\ub9cc b() \ud568\uc218\uc5d0 depth \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud558\uc5ec b() \uc544\ub798 \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uac8c\ub41c\ub2e4. $ uftrace record -D 5 -T 'b@depth=1' ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. trace_on \uacfc trace_off \ud2b8\ub9ac\uac70\ub294 uftrace \uac00 \uc9c0\uc815\ub41c \ud568\uc218\ub97c \uae30\ub85d\ud560\uc9c0 \uc5ec\ubd80\ub97c \uad00\ub9ac\ud55c\ub2e4. \ub610\ud55c, _ \ubb38\uc790 \uc5c6\uc774 traceon \uacfc traceoff \ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. recover \ud2b8\ub9ac\uac70\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \ud638\ucd9c \uc2a4\ud0dd(call stack)\uc5d0 \uc9c1\uc811 \uc811\uadfc\ud558\ub294 \uc77c\ubd80 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4. \uc9c0\uae08\uc73c\ub85c\uc11c\ub294 uftrace\uac00 \ud574\ub2f9 \uc791\uc5c5\uc744 \uc790\ub3d9\uc73c\ub85c \uc218\ud589\ud558\uae30\uc5d0 \ud638\ucd9c\ud560 \ud544\uc694\ub294 \uc5c6\ub2e4. time \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04 \ud544\ud130(time-filter) \uc124\uc815\uc744 \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\ub978 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c \uc11c\ub85c \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130\ub97c \uc801\uc6a9\ud560 \ub584 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. read \ud2b8\ub9ac\uac70\ub294 \uc2e4\ud589 \uc2dc\uc5d0 \uc77c\ubd80 \uc815\ubcf4\ub97c \uc77d\uc744 \uc218 \uc788\ub2e4. \uacb0\uacfc\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc5d0 (\ub0b4\uc7a5) \uc774\ubca4\ud2b8\uc758 \ud615\ud0dc\ub85c \uae30\ub85d\ub41c\ub2e4. \ud604\uc7ac \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\ubca4\ud2b8\uac00 \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. \"proc/statm\": /proc \uc73c\ub85c\ubd80\ud130\uc758 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uc815\ubcf4 \"page-fault\": getrusage(2)\ub97c \uc0ac\uc6a9\ud55c \ud398\uc774\uc9c0 \ud3f4\ud2b8(page fault) \ud69f\uc218 \"pmu-cycle\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c cpu \ud074\ub7ed \uc0ac\uc774\ud074 \ubc0f \uba85\ub839\uc5b4 \uc2e4\ud589 \ud69f\uc218 \"pmu-cache\": perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \ud1b5\ud55c \uce90\uc2dc \ucc38\uc870(reference) \ubc0f \uc2e4\ud328(miss) \"pmu-branch\": Perf-event \uc2dc\uc2a4\ud15c\ucf5c\uc744 \uc0ac\uc6a9\ud55c \ubd84\uae30\uc608\uce21(branch prediction) \ubc0f \uc2e4\ud328(miss) \uacb0\uacfc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc8fc\uc11d\uc758 \ud615\ud0dc\ub85c \uc774\ubca4\ud2b8 \uc815\ubcf4\uac00 \ucd9c\ub825\ub41c\ub2e4. $ uftrace record -T a@read=proc/statm ./abc $ uftrace replay # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { [ 1234] | /* read:proc/statm (size=6808KB, rss=776KB, shared=712KB) */ [ 1234] | b() { [ 1234] | c() { 1.448 us [ 1234] | getpid(); 10.270 us [ 1234] | } /* c */ 11.250 us [ 1234] | } /* b */ [ 1234] | /* diff:proc/statm (size=+4KB, rss=+0KB, shared=+0KB) */ 18.380 us [ 1234] | } /* a */ 19.537 us [ 1234] | } /* main */ finish \ud2b8\ub9ac\uac70\ub294 \uae30\ub85d(record)\uc744 \uc885\ub8cc\ud560 \ub584 \uc0ac\uc6a9\ud55c\ub2e4. \ub370\ubaac\uacfc \uac19\uc774 \uc885\ub8cc\ub418\uc9c0 \uc54a\ub294 \ud504\ub85c\uc138\uc2a4\ub97c \ucd94\uc801\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub2e4. filter \uc640 notrace \ud2b8\ub9ac\uac70\ub294 \uac01\uac01 -F / --filter \uc640 -N / --notrace \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\ub2e4. \ud2b8\ub9ac\uac70\ub294 \ud604\uc7ac \ucee4\ub110 \ud568\uc218\ub97c \uc81c\uc678\ud55c \uc0ac\uc6a9\uc790 \ud568\uc218\ub4e4\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ud2b8\ub9ac\uac70\ub294 \uc2dc\uadf8\ub110\ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 signal \ud2b8\ub9ac\uac70\uc5d0 \uc758\ud574 \uc218\ud589\ub418\uba70 \ud568\uc218 \ud2b8\ub9ac\uac70\uc640 \ube44\uc2b7\ud558\uc9c0\ub9cc \ud604\uc7ac\ub294 \"trace_on\", \"trace_off\" \ubc0f \"finish\" \ud2b8\ub9ac\uac70\ub9cc \uc9c0\uc6d0\ub418\uace0 \uc788\ub2e4. $ uftrace record --signal 'SIGUSR1@finish' ./some-daemon","title":"TRIGGERS"},{"location":"ko/uftrace-record/#arguments","text":"uftrace \ub294 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\uc744 \uac01\uac01 -A / \\--argument \uc640 -R / \\--retval \ub85c \uae30\ub85d\ud560 \uc218 \uc788\ub2e4. \uc774\uc5d0 \ub300\ud55c \ubb38\ubc95\uccb4\uacc4\ub294 \ud2b8\ub9ac\uac70\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\ub2e4. <argument> := <symbol> [ \"@\" <specs> ] <specs> := <spec> | <spec> \",\" <spec> <spec> := ( <int_spec> | <float_spec> | <ret_spec> ) <int_spec> := \"arg\" N [ \"/\" <format> [ <size> ] ] [ \"%\" ( <reg> | <stack> ) ] <float_spec> := \"fparg\" N [ \"/\" ( <size> | \"80\" ) ] [ \"%\" ( <reg> | <stack> ) ] <ret_spec> := \"retval\" [ \"/\" <format> [ <size> ] ] <format> := \"d\" | \"i\" | \"u\" | \"x\" | \"o\" | \"s\" | \"c\" | \"f\" | \"S\" | \"p\" <size> := \"8\" | \"16\" | \"32\" | \"64\" <reg> := <arch-specific register name> # \"rdi\", \"xmm0\", \"r0\", ... <stack> := \"stack\" [ \"+\" ] <offset> -A / \\--argument \uc635\uc158\uc740 symbol \uc758 \uc774\ub984\uacfc \uadf8\uac83\uc758 spec \ub4e4\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ubc1b\ub294\ub2e4. spec \uc740 argN \uc73c\ub85c \uc2dc\uc791\ub418\ub294\ub370 \uc5ec\uae30\uc11c N \uc740 \uc778\uc790\uc758 \uc778\ub371\uc2a4\uac12\uc774\ub2e4. \uc778\ub371\uc2a4\ub294 1 \ubd80\ud130 \uc2dc\uc791\ub418\uba70, \uc21c\uc11c\ub294 \ud568\uc218\ud638\ucd9c\uaddc\uc57d(calling convention)\uc758 \uc778\uc790 \uc804\ub2ec \uc21c\uc11c\uc640 \ub300\uc751\ub41c\ub2e4. \uc778\uc790\uc758 \uc778\ub371\uc2a4\ub294 \uc815\uc218\ud615 (\ud639\uc740 \ud3ec\uc778\ud130\ud615) \uacfc \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uac01\uac01 \ub530\ub85c \uad00\ub9ac\ub41c\ub2e4\ub294 \uc810, \uadf8\ub9ac\uace0 \uc774\ub4e4\uc740 \ud568\uc218\ud638\ucd9c\uaddc\uc57d\uc5d0 \ub530\ub77c \uac01\uae30 \uac04\uc12d\uc744 \uc77c\uc73c\ud0ac \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\ub77c. argN \uc740 \uc815\uc218\ud615 \uc778\uc790\ub97c, fpargN \uc740 \ubd80\ub3d9\uc18c\uc218\uc810\ud615 \uc778\uc790\ub97c \uc704\ud55c \ud45c\uae30\uc774\ub2e4. \"d\" \ud615\uc2dd \ud639\uc740 \uc544\ubb34 \ud615\uc2dd\ub3c4 \uc8fc\uc9c0 \uc54a\uc744 \uacbd\uc6b0, uftrace \ub294 \uc815\uc218\ud615\uc740 'long int'\ud615\uc73c\ub85c \uac04\uc8fc\ud558\uace0 \uc18c\uc218\uc810\ud615\uc5d0 \ub300\ud574\uc11c\ub294 'double'\ud615\uc73c\ub85c \uac04\uc8fc\ud55c\ub2e4. \"i\" \ud615\uc2dd\uc740 signed \uc815\uc218\ud615\uc73c\ub85c, \"u\" \ud615\uc2dd\uc740 unsigned \uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \ub450 \ud615\uc2dd \ubaa8\ub450 10 \uc9c4\uc218\uac00 \ucd9c\ub825\ub418\ub294 \ud55c\ud3b8 \"x\" \ud615\uc2dd\uc740 16 \uc9c4\uc218\ub85c, \"o\" \ud615\uc2dd\uc740 8\uc9c4\uc218\ub85c \ucd9c\ub825\ub418\uac8c \ud55c\ub2e4. \"s\" \ub294 null \uc744 \uc81c\uc678\ud55c \ubb38\uc790\uc5f4 \ucd9c\ub825\uc744 \uc704\ud55c \ud615\uc2dd\uc774\uace0, \"c\" \ub294 \ub2e8\uc77c \ubb38\uc790\ub97c \uc704\ud55c \ud615\uc2dd\uc774\ub2e4. \"f\" \ud615\uc2dd\uc740 \ubd80\ub3d9 \uc18c\uc218\uc810\uc744 \ucd9c\ub825\ud558\ub294\ub370, (\uc77c\ubc18\uc801\uc73c\ub85c) \ubc18\ud658\uac12\uc5d0\uc11c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. fpargN \uc740 \ud56d\uc0c1 \uc18c\uc218\uc810 \ubc29\uc2dd\uc774\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub5a4 \ud615\uc2dd \ud544\ub4dc\ub3c4 \uc5c6\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \"S\" \ud615\uc2dd\uc740 std::string \uc744 \uc704\ud55c \ud615\uc2dd\uc774\uc9c0\ub9cc, \uc544\uc9c1\uae4c\uc9c0\ub294 libstdc++ \ub77c\uc774\ube0c\ub7ec\ub9ac\ub9cc \uc9c0\uc6d0\uac00\ub2a5\ud558\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \"p\" \ud615\uc2dd\uc740 \ud568\uc218\ud3ec\uc778\ud130 \ud615\uc2dd\uc774\ub2e4. \ucd94\uc801 \ub300\uc0c1\uc758 \uc8fc\uc18c\uac00 \uae30\ub85d\ub418\uba74, \uc5b8\uc81c\ub098 \ud568\uc218 \uc774\ub984\uc73c\ub85c \ucd9c\ub825\ub41c\ub2e4. \ubb38\uc790\uc5f4 \ud0c0\uc785\uc758 \uc778\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c (\ud3ec\uc778\ud130) \uac12\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ud504\ub85c\uadf8\ub7a8\uc744 \ube44\uc815\uc0c1 \uc885\ub8cc\uc2dc\ud0ac \uc218 \uc788\uc74c\uc5d0 \uc8fc\uc758\ud558\ub77c. \uc0ac\uc2e4 uftrace \ub294 \uc720\ud6a8\ud55c \ud504\ub85c\uc138\uc2a4 \uc8fc\uc18c \uacf5\uac04\uc758 \ubc94\uc704\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \uc810\uac80\ud558\ub824\uace0 \ub178\ub825\ud558\uc9c0\ub9cc, \uba87\uba87\uc758 \uacbd\uc6b0\ub4e4\uc744 \ub193\uce60 \uc218 \uc788\ub2e4. \ub610\ud55c \ud2b9\uc815 \ub808\uc9c0\uc2a4\ud130\uc758 \uc774\ub984\uc774\ub098 \uc2a4\ud0dd \uc624\ud504\uc14b(offset)\uc73c\ub85c\ub3c4 \uc778\uc790\ub85c \uba85\uc2dc\ud560 \uc218 \uc788\ub2e4. (\ubc18\ud658\uac12\uc740 \ubd88\uac00\ud558\ub2e4) \uc544\ub798\ub294 \uc778\uc790\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 \ub808\uc9c0\uc2a4\ud130 \uc774\ub984\ub4e4\uc774\ub2e4. x86: rdi, rsi, rdx, rcx, r8, r9 (for integer), xmm[0-7] (for floating-point) arm: r[0-3] (for integer), s[0-15] or d[0-7] (for floating-point) \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4. $ uftrace record -A main@arg1/x -R main@retval/i32 ./abc $ uftrace replay # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main(0x1) { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } = 0; /* main */ $ uftrace record -A puts@arg1/s -R puts@retval ./hello Hello world $ uftrace replay # DURATION TID FUNCTION 1.457 us [21534] | __monstartup(); 0.997 us [21534] | __cxa_atexit(); [21534] | main() { 7.226 us [21534] | puts(\"Hello world\") = 12; 8.708 us [21534] | } /* main */ \uc774 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc740 \uc2e4\ud589\ud30c\uc77c\uc774 -pg \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ub418\uc5c8\uc744 \ub54c\uc5d0\ub9cc \uae30\ub85d\ub428\uc5d0 \uc720\uc758\ud558\ub77c. -finstrument-functions \ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \uc2e4\ud589\ud30c\uc77c\ub4e4\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \uc81c\uc678\ud558\uace0\ub294 \ubb34\uc2dc\ub41c\ub2e4. \uc778\uc790\uc640 \ubc18\ud658\uac12\uc758 \uae30\ub85d\uc740 \uc544\uc9c1\uae4c\uc9c4 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud568\uc218\uc5d0\uc11c\ub9cc \ub3d9\uc791\ud55c\ub2e4. \ub9cc\uc77c \ud504\ub85c\uadf8\ub7a8\uc774 DWARF \uc640 \uac19\uc740 \ub514\ubc84\uadf8 \uc815\ubcf4\uc640 \ud568\uaed8 \ube4c\ub4dc\ub418\uc5c8\ub2e4\uba74, (libdw \uc640 \ud568\uaed8 \ube4c\ub4dc\ub41c) uftrace \ub294 \uc790\ub3d9\uc73c\ub85c \uc778\uc790\ub4e4\uc758 \uac2f\uc218\uc640 \uc790\ub8cc\ud615\ub4e4\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c \ub514\ubc84\uadf8 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub354\ub77c\ub3c4, \uba87\uba87 \uc798 \uc54c\ub824\uc9c4 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218\ub4e4\uc758 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ub41c\ub2e4. \uc774 \uacbd\uc6b0 \uc0ac\uc6a9\uc790\ub294 \uc778\uc790\ub4e4\uc758 spec \uacfc \ubc18\ud658\uac12\uc744 \uc218\ub3d9\uc801\uc73c\ub85c \uba85\uc2dc\ud560 \ud544\uc694\uac00 \uc5c6\uc774 \ud568\uc218\uc758 \uc774\ub984 (\ub610\ub294 \ud328\ud134) \ub9cc \uc8fc\ub294 \uac83\uc73c\ub85c\ub3c4 \ucda9\ubd84\ud558\ub2e4. \uc0ac\uc2e4, \uba85\uc2dc\uc801\uc73c\ub85c argspec \uc744 \uc9c0\uc815\ud558\uba74 \uc790\ub3d9 argspec \uc744 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\ub2e4. $ uftrace record -A . -R main ./hello Hello world $ uftrace replay -F main # DURATION TID FUNCTION [ 18948] | main(1, 0x7ffeeb7590b8) { 7.183 us [ 18948] | puts(\"Hello world\"); 9.832 us [ 18948] | } = 0; /* main */ \uc778\uc790 \ud328\ud134 (\".\")\uc740 \ubaa8\ub4e0 \ubb38\uc790\uc5d0 \ub300\uc751\ub418\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\ub4e4\uc774 \uae30\ub85d\ub418\uc5c8\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. \uc704\uc5d0\uc11c\ub294 \"main\" \ud568\uc218\uc758 \ub450 \uc778\uc790\ub4e4\uacfc \"puts\" \uc758 \ud55c \ubb38\uc790\uc5f4 \uc778\uc790\ub97c \ubcf4\uc5ec\uc900\ub2e4. \ub9cc\uc77c (\uc9c0\uc6d0\ub418\ub294) \ud568\uc218\uc758 \ubaa8\ub4e0 \uc778\uc790\ub4e4\uacfc \ubc18\ud658\uac12\ub4e4\uc744 \ubcf4\uace0 \uc2f6\ub2e4\uba74, -a / \\--auto-args \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub77c.","title":"ARGUMENTS"},{"location":"ko/uftrace-record/#dynamic-tracing","text":"","title":"DYNAMIC TRACING"},{"location":"ko/uftrace-record/#full-dynamic-tracing","text":"uftrace \ub294 x86_64, AArch64 \ud658\uacbd\uc758 \ub7f0\ud0c0\uc784 (\uc815\ud655\ud558\uac8c\ub294, \ub85c\ub4dc \ud0c0\uc784) \uc5d0\uc11c \ub3d9\uc801\ucd94\uc801(dynamic tracing)\uc774 \uac00\ub2a5\ud558\ub2e4. \ud568\uc218\ub97c \uae30\ub85d\ud558\uae30 \uc804\uc5d0, \ubcf4\ud1b5 \ud504\ub85c\uadf8\ub7a8\uc744 -pg (\ud639\uc740 -finstrument-functions \uc73c\ub85c) \ube4c\ub4dc\ud574\uc57c \ud558\uace0, \uadf8\ub807\uac8c \ub41c\ub2e4\uba74 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc774 mcount() \ub97c \ud638\ucd9c\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5b4\ub290 \uc815\ub3c4 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubc1b\uac8c \ub420 \uac83\uc774\ub2e4. \ub3d9\uc801\ucd94\uc801\uc744 \ud560 \ub54c, -P / --patch \uc635\uc158\uc744 \ud1b5\ud574 \ud2b9\uc815 \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. capstone \ub514\uc2a4\uc5b4\uc148\ube14\ub9ac \uc5d4\uc9c4\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uc704 \uc635\uc158\uc744 \uc9c0\uc815\ud574\uc11c \ud504\ub85c\uadf8\ub7a8\uc744 (\uc7ac)\ucef4\ud30c\uc77c\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4. \uc774\uc81c uftrace \ub294 \uba85\ub839\uc5b4\ub4e4\uc744 \ubd84\uc11d\ud560 \uc218 \uc788\uac8c \ub418\uace0 (\ub9cc\uc57d \uac00\ub2a5\ud558\ub2e4\uba74) \uadf8 \uba85\ub839\uc5b4\ub4e4\uc744 \ub2e4\ub978 \uacf3\uc5d0 \ubcf5\uc0ac\ud558\uc5ec mcount() \ud568\uc218\ub4e4\uc744 \ud638\ucd9c\ud558\uc5ec uftrace \ub85c \ucd94\uc801\ud560 \uc218 \uc788\uac8c \ubc14\uc774\ub108\ub9ac\ub97c \uc870\uc791 \ud560 \uc218 \uc788\ub2e4. \uadf8 \uc774\ud6c4 \uc81c\uc5b4\uad8c\uc740 \ubcf5\uc0ac\ub41c \uba85\ub839\uc5b4\ub85c \ub118\uc5b4\uac00\uac8c \ub418\uace0, \uadf8 \ub2e4\uc74c\uc5d0\uc57c \ub0a8\uc740 \uba85\ub839\uc5b4\ub4e4\ub85c \ubc18\ud658\ud558\uac8c \ub41c\ub2e4. uftrace \ub97c \uc544\ub798\uc758 \uc608\uc81c\uc5d0\uc11c \ud3c9\uc18c\ucc98\ub7fc \uc0ac\uc6a9\ud560\ub54c\uc5d0\ub294 \uc5d0\ub7ec \uba54\uc138\uc9c0\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uadf8 \uc774\uc720\ub294 \ubc14\uc774\ub108\ub9ac\uac00 \uc5b4\ub5a4 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub3c4 \ud638\ucd9c\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. $ gcc -o abc tests/s-abc.c $ uftrace abc uftrace: /home/namhyung/project/uftrace/cmd-record.c:1305:check_binary ERROR: Can't find 'mcount' symbol in the 'abc'. It seems not to be compiled with -pg or -finstrument-functions flag which generates traceable code. Please check your binary file. \ud558\uc9c0\ub9cc -P a \ud328\uce58 \uc635\uc158\uc744 \uc801\uc6a9\ud55c\ub2e4\uba74, \ub3d9\uc801\uc73c\ub85c a() \ud568\uc218\ub9cc\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace record --no-libcall -P a abc $ uftrace replay # DURATION TID FUNCTION 0.923 us [19379] | a(); \ucd94\uac00\ub85c, '.'\uc744 \uc774\uc6a9\ud574 (glob\uc740, '*') P \uc635\uc158\uacfc \ud568\uaed8 \uc815\uaddc\ud45c\ud604\uc2dd\uc73c\ub85c \uc4f0\uc778 \ubb38\uc790\uc5d0 \ub300\ud574 \ud558\ub098\ub77c\ub3c4 \ub9e4\uce6d\ub418\ub294 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc801\uc6a9\uc2dc\ud0ac \uc218 \uc788\ub2e4. $ uftrace record --no-libcall -P . abc $ uftrace replay # DURATION TID FUNCTION [19387] | main() { [19387] | a() { [19387] | b() { 0.940 us [19387] | c(); 2.030 us [19387] | } /* b */ 2.451 us [19387] | } /* a */ 3.289 us [19387] | } /* main */ -U \uc635\uc158\uc740 -P \uc635\uc158\uacfc \ubc18\ub300\ub85c \uc791\uc6a9\ud55c\ub2e4. \uc774 \uc635\uc158\ub4e4\uc774 \uac19\uc774 \uc4f0\uc774\uba74 \ub098\uc911\uc5d0 \uc4f0\uc5ec\uc9c4 \uc635\uc158\uc774 \uadf8 \uc774\uc804\uc758 \uc635\uc158\uc744 \ub300\uccb4\ud558\ub294 \ud6a8\uacfc\ub97c \uac16\ub294\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub9cc\uc57d \ub2f9\uc2e0\uc774 'a' \ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \ud568\uc218\ub97c \ucd94\uc801\ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace record --no-libcall -P . -U a abc $ uftrace replay # DURATION TID FUNCTION [19390] | main() { [19390] | b() { 0.983 us [19390] | c(); 2.012 us [19390] | } /* b */ 3.373 us [19390] | } /* main */ \uc5ec\uae30\uc11c \uc21c\uc11c\uac00 \uc911\uc694\ud55c\ub370 \ub9cc\uc57d \uc21c\uc11c\ub97c -U a -P . \uc640 \uac19\uc774 \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud558\ub294 \uacb0\uacfc\ub97c \ubcf4\uc774\ub294\ub370 \uc774\ub294 -P . \uac00 \ub2e4\ub978 \ubaa8\ub4e0\uac83\uc5d0 \uc6b0\uc120\ud574 \uc791\uc6a9\ud574\uc11c\uc774\ub2e4.","title":"FULL DYNAMIC TRACING"},{"location":"ko/uftrace-record/#gcc-fentry","text":"capstone \uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4\uba74, \ud504\ub85c\uadf8\ub7a8\uc744 \ube4c\ub4dc\ud560 \ub54c \uba87\uba87 \ucef4\ud30c\uc77c\ub7ec (gcc) \uc635\uc158\ub4e4\uc744 \ucd94\uac00\ud574\uc57c \ud560 \uac83\uc774\ub2e4. gcc 5.1 \ubc84\uc804 \uc774\uc0c1\ubd80\ud130\ub294 -mfentry \uc640 -mnop-mcount \uc635\uc158\uc744 \uc81c\uacf5\ud558\ub294\ub370 \uc774 \uc635\uc158\ub4e4\uc740 \ud568\uc218 \ub9e8 \uc55e\uc5d0 mcount() \uc640 \uac19\uc740 \ud568\uc218 \ucd94\uc801\uc744 \uc704\ud55c \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\uace0 \uadf8 \uba85\ub839\uc5b4\ub97c NOP \uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4. \uadf8\ub807\uac8c \ub418\uba74 \uc77c\ubc18\uc801\uc778 \uc870\uac74\uc5d0\uc11c \uc2e4\ud589\ud560 \ub54c\uc5d0\ub294 \uc131\ub2a5 \uc0c1\uc758 \uc624\ubc84\ud5e4\ub4dc\uac00 \uac70\uc758 \uc5c6\uc5b4\uc9c8 \uac83\uc774\ub2e4. uftrace \ub294 -P \uc635\uc158\uc744 \uc774\uc6a9\ud558\uc5ec \uc120\ud0dd\uc801\uc73c\ub85c mcount() \ud568\uc218\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub3c4\ub85d \uc804\ud658\ud560 \uc218 \uc788\ub2e4. $ gcc -pg -mfentry -mnop-mcount -o abc-fentry tests/s-abc.c $ uftrace record -P . --no-libcall abc-fentry $ uftrace replay # DURATION TID FUNCTION [ 18973] | main() { [ 18973] | a() { [ 18973] | b() { 0.852 us [ 18973] | c(); 2.378 us [ 18973] | } /* b */ 2.909 us [ 18973] | } /* a */ 3.756 us [ 18973] | } /* main */","title":"GCC FENTRY"},{"location":"ko/uftrace-record/#clang-xray","text":"Clang/LLVM 4.0\uc740 X-ray \ub77c\ub294 \uae30\uc220\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\ub294 gcc -mfentry -mnop-mcount \uc640 -finstrument-functions \ub97c \uacb0\ud569\ud55c \uac83\uacfc\ub3c4 \uc720\uc0ac\ud558\ub2e4. uftrace\ub294 X-ray \ub85c \ube4c\ub4dc\ub41c \uc2e4\ud589\ud30c\uc77c\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub3d9\uc801\ucd94\uc801\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 clang \uc73c\ub85c \uc544\ub798\uc758 \uc635\uc158\uc73c\ub85c \ube4c\ub4dc\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \uadf8\uc640 \ub3d9\uc77c\ud558\uac8c \ub3d9\uc801\ucd94\uc801\uc744 \uc704\ud574 \uc544\ub798\uc640 \uac19\uc774 -P \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc744 \uac83\uc774\ub2e4. $ clang -fxray-instrument -fxray-instruction-threshold=1 -o abc-xray tests/s-abc.c $ uftrace record -P main abc-xray $ uftrace replay # DURATION TID FUNCTION [11093] | main() { 1.659 us [11093] | getpid(); 5.963 us [11093] | } /* main */ $ uftrace record -P . abc-xray $ uftrace replay # DURATION TID FUNCTION [11098] | main() { [11098] | a() { [11098] | b() { [11098] | c() { 0.753 us [11098] | getpid(); 1.430 us [11098] | } /* c */ 1.915 us [11098] | } /* b */ 2.405 us [11098] | } /* a */ 3.005 us [11098] | } /* main */","title":"CLANG XRAY"},{"location":"ko/uftrace-record/#patchable-function-entry","text":"\ucd5c\uadfc gcc\uc640 clang \ucef4\ud30c\uc77c\ub7ec\ub294 \ubaa8\ub450 -fpatchable-function-entry=N[,M] \ub77c\ub294 \uc720\uc6a9\ud55c \uc635\uc158\uc744 \uc81c\uacf5\ud558\ub294\ub370, \uc774\ub294 \ud568\uc218 \uc9c4\uc785 \uc774\uc804\uc5d0 M NOP\ub97c \uc0dd\uc131\ud558\uace0 \ud568\uc218 \uc9c4\uc785 \uc774\ud6c4\uc5d0 N-M NOP\ub97c \uc0dd\uc131\ud55c\ub2e4. M\uc774 0\uc778 \uacbd\uc6b0 -fpatchable-function-entry=N \ub9cc\uc73c\ub85c\ub3c4 \ucda9\ubd84\ud558\ub2e4. \ub3d9\uc801\ucd94\uc801\uc744 \uc704\ud55c NOP \uc218\ub294 \uc544\ud0a4\ud14d\ucc98\uc5d0 \ub530\ub77c \ub2e4\ub974\uc9c0\ub9cc uftrace \uae30\ub85d\uc744 \uc704\ud574 \ub3d9\uc801\uc73c\ub85c \ud638\ucd9c \uba85\ub839\uc5b4\ub97c \ud328\uce58\ud558\ub824\uba74 x86_64\ub294 5\uac1c\uc758 NOP\ub97c \uc694\uad6c\ud558\uace0 AArch64\ub294 2\uac1c\uc758 NOP\ub97c \uc694\uad6c\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4 x86_64\uc5d0\uc11c\ub294, \uc544\ub798\uc640 \uac19\uc774 \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc744 \ube4c\ub4dc\ud558\uace0 \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. $ gcc -fpatchable-function-entry=5 -o abc-fpatchable tests/s-abc.c $ uftrace record -P . abc-fpatchable $ uftrace replay # DURATION TID FUNCTION [ 6818] | main() { [ 6818] | a() { [ 6818] | b() { [ 6818] | c() { 0.926 us [ 6818] | getpid(); 4.158 us [ 6818] | } /* c */ 4.590 us [ 6818] | } /* b */ 4.957 us [ 6818] | } /* a */ 5.593 us [ 6818] | } /* main */ \uc774 \uae30\ub2a5\uc740 __attribute__ ((patchable_function_entry (N,M))) \ub85c \ud2b9\uc815 \ud568\uc218\uc5d0 \ucef4\ud30c\uc77c\ub7ec \uc18d\uc131\uc744 \ucd94\uac00\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4, 'tests/s-abc.c' \ud504\ub85c\uadf8\ub7a8\uc740 \uc544\ub798\uc640 \uac19\uc774 \uc218\uc815\ub420 \uc218 \uc788\ub2e4. static int c(void) { return 100000; } __attribute__((patchable_function_entry(5))) static int b(void) { return c() + 1; } static int a(void) { return b() - 1; } __attribute__((patchable_function_entry(5))) int main(void) { int ret = 0; ret += a(); return ret ? 0 : 1; } \uc774 \uc18d\uc131\uc740 'main'\uacfc 'b' \ud568\uc218\uc5d0\ub9cc \ucd94\uac00\ub418\uc5c8\uace0 \uc774 \ud504\ub85c\uadf8\ub7a8\uc740 \ub2e4\ub978 \ucd94\uac00\uc801\uc778 \ucef4\ud30c\uc77c\ub7ec \uc635\uc158 \uc5c6\uc774\ub3c4 \uc815\uc0c1\uc801\uc73c\ub85c \ucef4\ud30c\uc77c\ub418\uc9c0\ub9cc, \ucef4\ud30c\uc77c\ub7ec\ub294 \uc18d\uc131\uc744 \uac10\uc9c0\ud558\uace0 'main'\uacfc 'b' \ud568\uc218 \uc9c4\uc785\uc2dc\uc810\uc5d0 5\uac1c\uc758 NOP\ub97c \ucd94\uac00\ud55c\ub2e4. $ gcc -o abc tests/s-patchable-abc.c $ uftrace record -P . abc $ uftrace replay # DURATION TID FUNCTION [ 20803] | main() { 0.342 us [ 20803] | b(); 1.608 us [ 20803] | } /* main */ \uc774\ub7f0 \uc2dd\uc73c\ub85c, uftrace\ub294 \uc0ac\uc6a9\uc790\uac00 \uc6d0\ud558\uc5ec \uba85\uc2dc\uc801\uc73c\ub85c \uc18d\uc131\uc744 \ucd94\uac00\ud55c \ud568\uc218\ub9cc\uc744 \uc120\ubcc4\uc801\uc73c\ub85c \ucd94\uc801\ud560 \uc218 \uc788\ub2e4. \uc774\ub7ec\ud55c \uc811\uadfc\uc740 \ucef4\ud30c\uc77c\ub7ec \ud50c\ub798\uadf8\ub85c \ud65c\uc131\ud654\ub41c \ud568\uc218 \uc804\uccb4\ub97c \ucd94\uc801\ud558\ub294 \ubc29\uc2dd\ubcf4\ub2e4 \ub35c \ubc88\uac70\ub85c\uc6b4 \ubc29\uc2dd\uc73c\ub85c \ucd94\uc801 \uae30\ub85d\uc744 \uc218\uc9d1\ud560 \uc218 \uc788\ub2e4. -fpatchable-function-entry=N[,M] \uc635\uc158\uacfc \uadf8\uac83\uc758 \uc18d\uc131\uc740 gcc-8.1\uacfc clang-10\ubd80\ud130 \uc9c0\uc6d0\ub41c\ub2e4. \uc774 \ub3d9\uc801\ucd94\uc801 \uae30\ub2a5\uc740 \ud604\uc7ac\ub85c\uc11c x86_64\uc640 AArch64 \ubaa8\ub450\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4.","title":"PATCHABLE FUNCTION ENTRY"},{"location":"ko/uftrace-record/#script-execution","text":"uftrace \ub294 \ud568\uc218\uc758 \uc9c4\uc785\uacfc \ubc18\ud658 \uc2dc\uc810\uc5d0 \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\uc774 \uac00\ub2a5\ud558\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \uc2a4\ud06c\ub9bd\ud2b8 \ud0c0\uc785\uc740 Python 2.7, Python 3 \uadf8\ub9ac\uace0 Lua 5.1 \uc774\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ub124 \uac1c\uc758 \ud568\uc218\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4. 'uftrace_entry' \uc640 'uftrace_exit' \uc740 \uac01 \ud568\uc218\uc758 \uc9c4\uc785\uc2dc\uc810\uacfc \ubc18\ud658\uc2dc\uc810\uc5d0 \ud56d\uc0c1 \uc2e4\ud589\ub41c\ub2e4. \ud558\uc9c0\ub9cc 'uftrace_begin' \uacfc 'uftrace_end' \ub294 \ubd84\uc11d \ub300\uc0c1 \ud504\ub85c\uadf8\ub7a8\uc774 \ucd08\uae30\ud654\ub418\uace0 \uc885\ub8cc\ub420\ub54c \ud55c \ubc88\uc529\ub9cc \uc2e4\ud589\ub41c\ub2e4. $ cat scripts/simple.py def uftrace_begin(ctx): print(\"program begins...\") def uftrace_entry(ctx): func = ctx[\"name\"] print(\"entry : \" + func + \"()\") def uftrace_exit(ctx): func = ctx[\"name\"] print(\"exit : \" + func + \"()\") def uftrace_end(): print(\"program is finished\") \uc704 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc544\ub798\uc640 \uac19\uc774 \uae30\ub85d\ub41c \uc2dc\uac04 \uc21c\uc73c\ub85c \uc2e4\ud589\ub420 \uc218 \uc788\ub2e4: $ uftrace record -S scripts/simple.py -F main tests/t-abc program begins... entry : main() entry : a() entry : b() entry : c() entry : getpid() exit : getpid() exit : c() exit : b() exit : a() exit : main() program is finished 'ctx' \ubcc0\uc218\ub294 \uc544\ub798\uc758 \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\ub294 \uc0ac\uc804\ud0c0\uc785(dictionary type)\uc758 \ubcc0\uc218\uc774\ub2e4. /* context information passed to uftrace_entry(ctx) and uftrace_exit(ctx) */ script_context = { int tid; int depth; long timestamp; long duration; # exit only long address; string name; list args; # entry only (if available) value retval; # exit only (if available) }; /* context information passed to uftrace_begin(ctx) */ script_context = { bool record; # True if it runs at record time, otherwise False string version; # uftrace version info list cmds; # execution commands }; 'script_context' \uc5d0 \uc788\ub294 \uac01 \ud56d\ubaa9\ub4e4\uc740 \uc2a4\ud06c\ub9bd\ud2b8 \ub0b4\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\ub2e4. \uc2a4\ud06c\ub9bd\ud305\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 uftrace-script (1)\ub97c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4.","title":"SCRIPT EXECUTION"},{"location":"ko/uftrace-record/#watch-point","text":"uftrace \uc758 watch point \ub294 \ud2b9\uc815 \uac12\uc758 \ubcc0\uacbd\uc0ac\ud56d\uc744 \ucd9c\ub825\ud55c\ub2e4. \uac1c\ub150\uc801\uc73c\ub85c\ub294 \uc77c\ubc18\uc801\uc778 \ub514\ubc84\uac70\uc758 watch point \uc640 \uac19\uc9c0\ub9cc, \ud568\uc218\uc758 \uc9c4\uc785\uacfc \uc885\ub8cc\uc5d0\ub9cc \uc801\uc6a9\ub418\uae30 \ub54c\ubb38\uc5d0 \uba87\uba87 \ubcc0\uacbd\uc0ac\ud56d\ub4e4\uc740 \ub193\uce60 \uc218\ub3c4 \uc788\ub2e4. \uc544\uc9c1\uae4c\uc9c0\ub294, \uc544\ub798\uc758 watch point \ub4e4\ub9cc\uc774 \uc9c0\uc6d0\ub41c\ub2e4. \"cpu\" : \ud604\uc7ac \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 cpu \ubc88\ud638 \ud2b8\ub9ac\uac70\ub97c \uc77d\uc744 \ub54c\ucc98\ub7fc, \uacb0\uacfc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc8fc\uc11d \ud615\uc2dd\uc758 \uc774\ubca4\ud2b8\ub85c \ucd9c\ub825\ub41c\ub2e4. $ uftrace -W cpu tests/t-abc # DURATION TID FUNCTION [ 19060] | main() { [ 19060] | /* watch:cpu (cpu=8) */ [ 19060] | a() { [ 19060] | b() { [ 19060] | c() { 2.365 us [ 19060] | getpid(); 8.002 us [ 19060] | } /* c */ 8.690 us [ 19060] | } /* b */ 9.350 us [ 19060] | } /* a */ 12.479 us [ 19060] | } /* main */","title":"WATCH POINT"},{"location":"ko/uftrace-record/#_5","text":"uftrace (1), uftrace-replay (1), uftrace-report (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-record/#_6","text":"\uac15\ubbfc\ucca0 tegongkang@gmail.com , \uae40\ud64d\uaddc honggyu.kp@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-recv/","text":"% UFTRACE-RECV(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-recv - \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud558\uace0 \ud30c\uc77c\ub85c \uc800\uc7a5\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace recv [ \uc635\uc158 ] \uc124\uba85 uftrace recv \uba85\ub839\uc5b4\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud558\uace0 \ud30c\uc77c\ub85c \uc800\uc7a5\ud55c\ub2e4. \ub370\uc774\ud130\ub294 uftrace-record \uba85\ub839\uc5b4\uc640 --host \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc1a1\ub41c\ub2e4. \uc635\uc158 -d DATA , --data= DATA : \uc218\uc2e0\ub41c \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \ub514\ub809\ud130\ub9ac \uc774\ub984\uc744 \uc9c0\uc815\ud55c\ub2e4. --port= PORT : \uae30\ubcf8 \ud3ec\ud2b8(8090) \ub300\uc2e0 \uc0ac\uc6a9\ud560 \ud3ec\ud2b8 \ubc88\ud638\ub97c \uc9c0\uc815\ud55c\ub2e4. --run-cmd= COMMAND : \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud55c \ub2e4\uc74c\uc5d0 \uc8fc\uc5b4\uc9c4(\uc258) \uba85\ub839\uc5b4\ub97c \ubc14\ub85c \uc2e4\ud589\ud55c\ub2e4. \uc608\ub97c \ub4e4\uba74, \uc218\uc2e0\ub41c \ub370\uc774\ud130\uc5d0 \ub300\ud574 uftrace replay\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub2e4. \uc608\uc81c uftrace recv \uba85\ub839\uc740 uftrace-record \uba85\ub839\uc5b4\ub85c \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\uae30 \uc804\uc5d0 \uba3c\uc800 \uc2e4\ud589\ub418\uc5b4\uc57c \ud55c\ub2e4. # \ud638\uc2a4\ud2b8 $ uftrace recv -d recv_data --port 1234 \uc704\uc758 \uba85\ub839\uc5b4\ub294 -d \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \ub514\ub809\ud130\ub9ac \uc774\ub984\uc744 \uc9c0\uc815\ud558\uace0 \ud3ec\ud2b8 1234 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uc218\uc2e0\uc744 \ub300\uae30\ud55c\ub2e4. # \ud074\ub77c\uc774\uc5b8\ud2b8 $ uftrace record -d example_data --host localhost --port 1234 example \uc704\uc758 \uba85\ub839\uc5b4\ub294 example \ud504\ub85c\uadf8\ub7a8\uc758 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud55c \ub2e4\uc74c -d \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec example_data \ub514\ub809\ud130\ub9ac\uc5d0 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uace0 --host \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc2e0\ud560 \ud638\uc2a4\ud2b8\ub97c \uc124\uc815\ud558\uace0 \uc804\uc1a1\ud55c\ub2e4. \ucd5c\uc885\uc801\uc73c\ub85c, \uc704\uc758 \uba85\ub839\uc5b4\uc758 \ud638\uc2a4\ud2b8\ub294 localhost \uc774\uace0 \ud3ec\ud2b8\ubc88\ud638\ub294 1234 \uc774\uba70, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ud638\uc2a4\ud2b8\ub85c \uc804\uc1a1\ub420 \ub370\uc774\ud130\uc758 \ub514\ub809\ud130\ub9ac \uc774\ub984\uc740 example_data \uc774 \ub41c\ub2e4. # HOST : Check received data $ uftrace replay -d recv_data/example_data # DURATION TID FUNCTION [17308] | main() { [17308] | a() { [17308] | b() { [17308] | c() { 1.058 us [17308] | getpid(); 4.356 us [17308] | } /* c */ 4.664 us [17308] | } /* b */ 4.845 us [17308] | } /* a */ 5.076 us [17308] | } /* main */ \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc9c0\uc815\ud55c recv_data \ub514\ub809\ud130\ub9ac\uc758 \ud558\uc704 \ub514\ub809\ud130\ub9ac\uc5d0\uc11c example_data \ub370\uc774\ud130\ub97c \ucc3e\uc744 \uc218 \uc788\ub2e4. \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-record (1) \ubc88\uc5ed\uc790 \uae40\uad00\uc601 gy741.kim@gmail.com","title":"Uftrace recv"},{"location":"ko/uftrace-recv/#_1","text":"uftrace-recv - \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud558\uace0 \ud30c\uc77c\ub85c \uc800\uc7a5\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-recv/#_2","text":"uftrace recv [ \uc635\uc158 ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-recv/#_3","text":"uftrace recv \uba85\ub839\uc5b4\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud558\uace0 \ud30c\uc77c\ub85c \uc800\uc7a5\ud55c\ub2e4. \ub370\uc774\ud130\ub294 uftrace-record \uba85\ub839\uc5b4\uc640 --host \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804\uc1a1\ub41c\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-recv/#_4","text":"-d DATA , --data= DATA : \uc218\uc2e0\ub41c \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \ub514\ub809\ud130\ub9ac \uc774\ub984\uc744 \uc9c0\uc815\ud55c\ub2e4. --port= PORT : \uae30\ubcf8 \ud3ec\ud2b8(8090) \ub300\uc2e0 \uc0ac\uc6a9\ud560 \ud3ec\ud2b8 \ubc88\ud638\ub97c \uc9c0\uc815\ud55c\ub2e4. --run-cmd= COMMAND : \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud55c \ub2e4\uc74c\uc5d0 \uc8fc\uc5b4\uc9c4(\uc258) \uba85\ub839\uc5b4\ub97c \ubc14\ub85c \uc2e4\ud589\ud55c\ub2e4. \uc608\ub97c \ub4e4\uba74, \uc218\uc2e0\ub41c \ub370\uc774\ud130\uc5d0 \ub300\ud574 uftrace replay\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub2e4.","title":"\uc635\uc158"},{"location":"ko/uftrace-recv/#_5","text":"uftrace recv \uba85\ub839\uc740 uftrace-record \uba85\ub839\uc5b4\ub85c \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\uae30 \uc804\uc5d0 \uba3c\uc800 \uc2e4\ud589\ub418\uc5b4\uc57c \ud55c\ub2e4. # \ud638\uc2a4\ud2b8 $ uftrace recv -d recv_data --port 1234 \uc704\uc758 \uba85\ub839\uc5b4\ub294 -d \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \ub514\ub809\ud130\ub9ac \uc774\ub984\uc744 \uc9c0\uc815\ud558\uace0 \ud3ec\ud2b8 1234 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uc218\uc2e0\uc744 \ub300\uae30\ud55c\ub2e4. # \ud074\ub77c\uc774\uc5b8\ud2b8 $ uftrace record -d example_data --host localhost --port 1234 example \uc704\uc758 \uba85\ub839\uc5b4\ub294 example \ud504\ub85c\uadf8\ub7a8\uc758 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud55c \ub2e4\uc74c -d \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec example_data \ub514\ub809\ud130\ub9ac\uc5d0 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uace0 --host \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc218\uc2e0\ud560 \ud638\uc2a4\ud2b8\ub97c \uc124\uc815\ud558\uace0 \uc804\uc1a1\ud55c\ub2e4. \ucd5c\uc885\uc801\uc73c\ub85c, \uc704\uc758 \uba85\ub839\uc5b4\uc758 \ud638\uc2a4\ud2b8\ub294 localhost \uc774\uace0 \ud3ec\ud2b8\ubc88\ud638\ub294 1234 \uc774\uba70, \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \ud638\uc2a4\ud2b8\ub85c \uc804\uc1a1\ub420 \ub370\uc774\ud130\uc758 \ub514\ub809\ud130\ub9ac \uc774\ub984\uc740 example_data \uc774 \ub41c\ub2e4. # HOST : Check received data $ uftrace replay -d recv_data/example_data # DURATION TID FUNCTION [17308] | main() { [17308] | a() { [17308] | b() { [17308] | c() { 1.058 us [17308] | getpid(); 4.356 us [17308] | } /* c */ 4.664 us [17308] | } /* b */ 4.845 us [17308] | } /* a */ 5.076 us [17308] | } /* main */ \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc9c0\uc815\ud55c recv_data \ub514\ub809\ud130\ub9ac\uc758 \ud558\uc704 \ub514\ub809\ud130\ub9ac\uc5d0\uc11c example_data \ub370\uc774\ud130\ub97c \ucc3e\uc744 \uc218 \uc788\ub2e4.","title":"\uc608\uc81c"},{"location":"ko/uftrace-recv/#_6","text":"uftrace (1), uftrace-record (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-recv/#_7","text":"\uae40\uad00\uc601 gy741.kim@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-replay/","text":"% UFTRACE-REPLAY(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-replay - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace replay [ options ] \uc124\uba85 \uc774 \uba85\ub839\uc5b4\ub294 uftrace-record (1) \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4. \ucd9c\ub825\ub418\ub294 \ud568\uc218\ub4e4\uc740 C \ud504\ub85c\uadf8\ub7a8\uacfc \uc720\uc0ac\ud55c \ud615\uc2dd\uc73c\ub85c \uc2dc\uac04 \uc21c\uc11c\ub300\ub85c \ucd9c\ub825\ub41c\ub2e4. REPLAY \uc635\uc158 -f FIELD , --output-fields= FIELD : \uacb0\uacfc\ub85c \ubcf4\uc5ec\uc9c0\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294 duration, tid, time, delta, elapsed, addr \uac00 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'duration,tid' \uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. --flat : C \uc640 \uac19\uc774 \ud638\ucd9c \uae4a\uc774\uac00 \ubcf4\uc774\ub294 \ubc29\uc2dd\uc774 \uc544\ub2cc \ud3c9\ud3c9\ud55c(flat) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \uc8fc\ub85c \ub514\ubc84\uae45\uc774\ub098 \ud14c\uc2a4\ud2b8 \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub41c\ub2e4. --column-view : \uc5f4(column) \ubcc4\ub85c \ubd84\ub9ac\ud558\uc5ec \uac01\uac01\uc758 \ud0dc\uc2a4\ud06c\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc11c\ub85c \ub2e4\ub978 \ud0dc\uc2a4\ud06c\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ud568\uc218\uc758 \uad6c\ubd84\uc744 \uc27d\uac8c\ud55c\ub2e4. --column-offset= DEPTH : --column-view \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c, \uc774 \uc635\uc158\uc740 \uac01 \ud0dc\uc2a4\ud06c \uc0ac\uc774\uc758 \uac04\uaca9(offset) \ud06c\uae30\ub97c \uba85\uc2dc\ud55c\ub2e4. \uae30\ubcf8 \uac04\uaca9\uc740 8 \uc774\ub2e4. --task-newline : \ud0dc\uc2a4\ud06c\uac00 \ubcc0\uacbd\ub418\uba74 \ube48 \uacf5\ubc31 \ud55c\uc904\uc744 \ucd94\uac00\ud55c\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5ec\ub7ec \ud0dc\uc2a4\ud06c\uc5d0\uc11c \ub3d9\uc791\ud558\ub294 \ud568\uc218\ub4e4\uc744 \uc27d\uac8c \uad6c\ubcc4 \ud560 \uc218 \uc788\ub2e4. --no-comment : \ud568\uc218\uac00 \ubc18\ud658\ub418\ub294 \uacf3\uc5d0 \uc8fc\uc11d\uc744 \ucd9c\ub825\ud558\uc9c0 \uc54a\ub294\ub2e4. --libname : \ud568\uc218 \uc774\ub984\uacfc \ud568\uaed8 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4. --format= TYPE : \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud604\uc7ac\ub294 'normal' \uacfc 'html' \ud615\uc2dd\uc774 \uc9c0\uc6d0\ub41c\ub2e4. \uacf5\ud1b5 \uc635\uc158 -F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \uc744 \ucc38\uace0\ud55c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --disable : uftrace \ub97c \uc2dc\uc791\ud560\ub54c \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\uace0 \uc2dc\uc791\ud55c\ub2e4. \uc774\uac83\uc740 trace_on \ud2b8\ub9ac\uac70\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. \uacf5\ud1b5 \ubd84\uc11d \uc635\uc158 -H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. FILTERS uftrace \ub294 \uad00\uc2ec \uc788\ub294 \ub300\uc0c1\uc774 \uc544\ub2cc \ud568\uc218\ub4e4\uc744 \uac10\ucd94\ub294 \ud544\ud130\ub9c1\uc744 \ud560 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\uc790\ub4e4\uc774 \uad00\uc2ec \uc788\ub294 \ud568\uc218\ub4e4\uc5d0\ub9cc \uc9d1\uc911\ud560 \uc218 \uc788\uac8c \ud558\uace0, \uae30\ub85d\ub418\ub294 \ub370\uc774\ud130\uc758 \ud06c\uae30\ub97c \uc904\uc77c \uc218 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ud55c\ub2e4. uftrace \uac00 \ud638\ucd9c\ub418\uba74, \ub450 \uc885\ub958\uc758 \ud568\uc218 \ud544\ud130\ub97c \uac16\uac8c \ub418\ub294\ub370 \uc774\ub4e4\uc740 \ub300\uc0c1 \ud568\uc218\ub97c \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd(opt-in)\uc758 \ud544\ud130\ub85c -F / --filter \uc640 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd(opt-out)\uc758 \ud544\ud130\uc778 -N / --notrace \uac00 \uc788\ub2e4. \uc774 \ud544\ud130\ub4e4\uc740 \uae30\ub85d(record)\ud558\uac70\ub098 \uc7ac\uc0dd(replay)\ud560 \ub54c \ubaa8\ub450 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4. \uccab\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \uc774\uac83\uc740 \uc544\ubb34\uac83\ub3c4 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \uc5b4\ub5a4 \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uba74, \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ucd94\uc801\uc744 \uc2dc\uc791\ud55c\ub2e4. \uadf8\ub7ec\ub2e4\uac00 \uadf8 \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc911\ub2e8\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, a() , b() \uc640 c() \ub97c \ucc28\ub840\ub85c \ud638\ucd9c\ud558\ub294 \uac04\ub2e8\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \uc0dd\uac01\ud574\ubcf4\uc790. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 uftrace \ub294 main() \ubd80\ud130 c() \uae4c\uc9c0\uc758 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ud558\uc9c0\ub9cc -F b \ud544\ud130 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub294, main() \uacfc a() \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uace0 \uc624\uc9c1 b() \uc640 c() \ub9cc\uc774 \ud3ec\ud568\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc77c\uac83\uc774\ub2e4. \uc544\ub798\uc758 \uc608\ub294 \ud544\ud130\uac00 uftrace replay \ub97c \ud560\ub54c \uc801\uc6a9\ub418\uc5c8\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. $ uftrace record ./abc $ uftrace replay -F b # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ \ub450\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \uac83\uc774 \ucd94\uc801\ub418\uc9c0\ub9cc, \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uba48\ucd98\ub2e4. \uc81c\uc678\ub41c \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uc7ac\uac1c\ud55c\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c, b() \ud568\uc218\uc640 \uadf8\uc758 \ubaa8\ub4e0 \ud558\uc704 \ud568\uc218\ub4e4\uc758 \ud638\ucd9c\uc740 -N \uc635\uc158\uc73c\ub85c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. $ uftrace record ./abc $ uftrace replay -N b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ b() \ud568\uc218\ub9cc\uc744 \uc228\uae30\uace0 \uadf8\uc758 \ud558\uc704 \ud568\uc218\ub4e4\uc740 \uadf8\ub300\ub85c \ubcf4\uace0 \uc2f6\uc73c\uba74 -H \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace record ./abc $ uftrace replay -H b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704\uc758 -H \uc635\uc158\uc740 \ud2b9\ud788 C++ \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c -H ^std:: \uc640 \uac19\uc774 \uc0ac\uc6a9\ud574\uc11c std \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud638\ucd9c\ub4e4\uc744 \uc228\uae38\ub54c \uc720\uc6a9\ud558\ub2e4. \ub9cc\uc77c \ud2b9\uc815 \ud568\uc218\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uace0 \uadf8 \ud568\uc218\uac00 \uc5b4\ub5bb\uac8c \ud638\ucd9c\ub418\ub294\uc9c0\ub9cc \uc54c\uace0 \uc2f6\ub2e4\uba74, caller filter \ub97c \uc0ac\uc6a9\ud558\uba74 \ub420 \uac83\uc774\ub2e4. \uadf8 \ud568\uc218\ub97c \ub9c8\uc9c0\ub9c9(leaf) \ub178\ub4dc\ub85c \ub9cc\ub4e4\uace0, \uadf8 \ud568\uc218\uc758 \ubaa8\ub4e0 \ubd80\ubaa8 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace record ./abc $ uftrace replay -C b # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, \ud638\ucd9c \uacbd\ub85c\uc5d0 \uc5c6\ub294 \ud568\uc218\ub4e4\uc744 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, \ud568\uc218 b() \uc758 \uc790\uc2dd \ud568\uc218\uc778 \ud568\uc218 c() \ub610\ud55c \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, -D \uc635\uc158\uc73c\ub85c \ud568\uc218\uc758 \uc911\ucca9 \uae4a\uc774\uc744 \uc81c\ud55c\ud560 \uc218\ub3c4 \uc788\ub2e4. $ uftrace record ./abc $ uftrace replay -D 3 # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, uftrace \ub294 \ud568\uc218 \ud638\ucd9c \uae4a\uc774\ub97c \ucd5c\ub300 3 \uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd9c\ub825\ud588\uae30 \ub54c\ubb38\uc5d0, \ub9c8\uc9c0\ub9c9 \ud568\uc218\uc778 c() \ub294 \uc0dd\ub7b5\ub418\uc5c8\ub2e4. -D \uc635\uc158\uc740 -F \uc635\uc158\uacfc \ud568\uaed8 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ub54c\ub85c\ub294, \uc624\ub79c \uc2dc\uac04 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\uc744 \ud2b9\ubcc4\ud558\uac8c \uad00\ucc30\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud558\ub2e4. \uc774\ub294 \uc791\uc740 (\uc2e4\ud589\uc2dc\uac04\uc744 \uac00\uc9c0\ub294) \ud568\uc218\ub4e4 \uc911\uc5d0\ub294 \uad00\uc2ec \ub300\uc0c1\uc774 \uc544\ub2cc \uac83\ub4e4\uc774 \ub9ce\uae30 \ub54c\ubb38\uc774\ub2e4. -t / --time-filter \uc635\uc158\uc740 \uba85\uc2dc\ub41c \uc784\uacc4\uc2dc\uac04\ubcf4\ub2e4 \uc624\ub798 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ubcfc \uc218 \uc788\uac8c \ud558\ub294 \uc2dc\uac04 \uae30\ubc18\uc758 \ud544\ud130\uc774\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c\ub294, \uc0ac\uc6a9\uc790\ub294 \ub300\ubd80\ubd84 \uc544\ub798\uc640 \uac19\uc774 5 \ub9c8\uc774\ud06c\ub85c(us) \ucd08 \uc774\uc0c1 \uac78\ub824\uc11c \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ubcf4\uace0 \uc2f6\uc5b4\ud560 \uac83\uc774\ub2e4. $ uftrace record ./abc $ uftrace replay -t 5us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ub3d9\uc77c\ud55c \ub370\uc774\ud130\uc5d0 \ub300\ud574 \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130 \uac12\uc744 \uc124\uc815\ud574 replay \uacb0\uacfc\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4. $ uftrace replay -t 6us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ \ub610\ud55c, -r \uc635\uc158\uc740 \uc8fc\uc5b4\uc9c4 \uc2dc\uac04 \ubc94\uc704 \ub3d9\uc548 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c, \uacb0\uacfc\uac12\uc744 TIMESTAMP, ELAPSED, DURATION, TID \ud544\ub4dc\ub4e4\uacfc \ud568\uaed8 \ubcfc \uc218 \uc788\ub2e4. $ uftrace replay -r 502716.387320101~502716.387322389 # TIMESTAMP DURATION TID FUNCTION 502716.387320101 0.289 us [ 6126] | fgets(); 502716.387320584 [ 6126] | get_values_from() { 502716.387320709 0.245 us [ 6126] | strdup(); 502716.387321172 0.144 us [ 6126] | strsep(); 502716.387321542 0.223 us [ 6126] | atoi(); 502716.387321983 0.239 us [ 6126] | atoi(); 502716.387322389 1.805 us [ 6126] | } /* get_values_from */ $ uftrace replay -r 40us~ | head -10 # ELAPSED DURATION TID FUNCTION 40.141 us [ 6126] | get_values_from() { 40.269 us 0.249 us [ 6126] | strdup(); 40.756 us 0.149 us [ 6126] | strsep(); 41.119 us 0.235 us [ 6126] | atoi(); 41.578 us 0.211 us [ 6126] | atoi(); 41.957 us 1.816 us [ 6126] | } /* get_values_from */ 42.124 us 0.220 us [ 6126] | fgets(); 42.529 us [ 6126] | get_values_from() { 42.645 us 0.236 us [ 6126] | strdup(); \ud544\ud130\ub9c1\ub41c \ud568\uc218\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4. \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 TRIGGERS \ud56d\ubaa9\uc5d0\uc11c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4. TRIGGERS uftrace \ub294 (\ud544\ud130\uac00 \uc788\ub4e0 \uc5c6\ub4e0) \uc120\ud0dd\ub41c \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ud2b8\ub9ac\uac70 \ub3d9\uc791\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \ud2b8\ub9ac\uac70\uc640 \uc0ac\uc591\uc5d0 \ub300\ud55c BNF \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace_on\" | \"trace_off\" | \"color=\"<color> | \"time=\"<time_spec> | \"size=\"<num> | \"filter\" | \"notrace\" | \"hide\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" depth \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud544\ud130\uc758 \uae4a\uc774\ub97c \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\uc591\ud55c \ud568\uc218\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \ud544\ud130 \uae4a\uc774\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. \uadf8\ub9ac\uace0 backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc2dc \uc2a4\ud0dd \ubc31\ud2b8\ub808\uc774\uc2a4\ub97c \ucd9c\ub825\ud55c\ub2e4. color \ud2b8\ub9ac\uac70\ub294 \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud55c\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc0c9\uc0c1\uc740 red , green , blue , yellow , magenta , cyan , bold , gray \uac00 \uc788\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ud2b8\ub9ac\uac70\uc758 \uc791\ub3d9 \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud568\uc218 b() \uc5d0 backtrace action \uc744 \ub123\uace0 \ud544\ud130 \uae4a\uc774\ub97c 2 \ub85c \uc124\uc815\ud55c\ub2e4. $ uftrace record ./abc $ uftrace replay -T 'b@filter,backtrace,depth=2' # DURATION TID FUNCTION backtrace [ 1234] | /* [ 0] main */ backtrace [ 1234] | /* [ 1] a */ [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ trace_on \uacfc trace_off \ud2b8\ub9ac\uac70\ub294 uftrace \uac00 \uc9c0\uc815\ub41c \ud568\uc218\ub97c \uae30\ub85d\ud560\uc9c0 \uc5ec\ubd80\ub97c \uad00\ub9ac\ud55c\ub2e4. \ub610\ud55c, _ \ubb38\uc790 \uc5c6\uc774 traceon \uacfc traceoff \ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. time \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04 \ud544\ud130(time-filter) \uc124\uc815\uc744 \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\ub978 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c \uc11c\ub85c \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130\ub97c \uc801\uc6a9\ud560 \ub584 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. filter \uc640 notrace \ud2b8\ub9ac\uac70\ub294 \uac01\uac01 -F / --filter \uc640 -N / --notrace \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\ub2e4. hide \ud2b8\ub9ac\uac70\ub294 \ud2b9\uc815 \ud568\uc218\ub97c \ubcf4\uc774\uc9c0 \uc54a\uac8c \ud558\ub294 -H / --hide \uc635\uc158\uacfc \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\uc5b4\uc11c notrace \uc640 \ub2e4\ub974\uac8c \ud558\uc704 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4. FIELDS uftrace \uc0ac\uc6a9\uc790\ub294 replay \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uc5ec\uae30\uc11c \ud544\ub4dc\ub780 \ud30c\uc774\ud504 \ubb38\uc790 (|) \uc67c\ucabd\uc5d0 \ub098\ud0c0\ub098\ub294 \uc815\ubcf4\ub97c \ub73b\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc9c0\uc18d\uc2dc\uac04 duration \uacfc tid \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace replay -f time,delta,duration,addr # TIMESTAMP TIMEDELTA DURATION ADDRESS FUNCTION 74469.340757350 1.583 us 4004d0 | __monstartup(); 74469.340762221 4.871 us 0.766 us 4004f0 | __cxa_atexit(); 74469.340764847 2.626 us 4006b1 | main() { 74469.340765061 0.214 us 400656 | a() { 74469.340765195 0.134 us 400669 | b() { 74469.340765344 0.149 us 40067c | c() { 74469.340765524 0.180 us 0.742 us 4004b0 | getpid(); 74469.340766935 1.411 us 1.591 us 40067c | } /* c */ 74469.340767195 0.260 us 2.000 us 400669 | } /* b */ 74469.340767372 0.177 us 2.311 us 400656 | } /* a */ 74469.340767541 0.169 us 2.694 us 4006b1 | } /* main */ \uac01 \ud544\ub4dc\ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. tid: task id (gettid(2)\ub85c \uc5bb\uc744 \uc218 \uc788\ub2e4.) duration: \ud568\uc218 \uc2e4\ud589 \uc2dc\uac04 time: \ud0c0\uc784\uc2a4\ud0ec\ud504 \uc815\ubcf4 delta: \uc5b4\ub5a4 \uc791\uc5c5 \ub0b4 \ub450 \ud0c0\uc784\uc2a4\ud0ec\ud504\uc758 \ucc28\uc774 elapsed: \uccab \ud0c0\uc784\uc2a4\ud0ec\ud504\ub85c\ubd80\ud130\uc758 \uacbd\uacfc \uc2dc\uac04 addr: \ud574\ub2f9 \ud568\uc218\uc758 \uc8fc\uc18c task: \ud0dc\uc2a4\ud06c \uc774\ub984 (comm) module: \ub77c\uc774\ube0c\ub7ec\ub9ac \ud639\uc740 \uc2e4\ud589 \uac00\ub2a5\ud55c \ud568\uc218\uc758 \uc774\ub984 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'duration,tid'\uc774\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ub41c\ub2e4\uba74, \uadf8 \ud544\ub4dc\ub294 \uae30\ubcf8 \ud544\ub4dc\uac12\uc5d0 \ucd94\uac00\ub420 \uac83\uc774\ub2e4. \uc989, \"-f +time\" \ub294 \"-f duration,tid,time\" \uc640 \uac19\uc740 \uac83\uc774\ub2e4. \ub610\ud55c 'none'\uc774\ub77c\ub294 \ud2b9\ubcc4\ud55c \ud544\ub4dc\ub3c4 \ubc1b\uc744 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ud544\ub4dc \ucd9c\ub825\uc744 \ud558\uc9c0 \uc54a\uace0 \uc624\uc9c1 \ud568\uc218 \uc2e4\ud589 \uacb0\uacfc\ub9cc\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-record (1), uftrace-report (1), uftrace-info (1) \ubc88\uc5ed\uc790 \uac15\ubbfc\ucca0 tegongkang@gmail.com , \uae40\ud64d\uaddc honggyu.kp@gmail.com","title":"Uftrace replay"},{"location":"ko/uftrace-replay/#_1","text":"uftrace-replay - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-replay/#_2","text":"uftrace replay [ options ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-replay/#_3","text":"\uc774 \uba85\ub839\uc5b4\ub294 uftrace-record (1) \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud568\uc218 \uc2e4\ud589 \ud750\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4. \ucd9c\ub825\ub418\ub294 \ud568\uc218\ub4e4\uc740 C \ud504\ub85c\uadf8\ub7a8\uacfc \uc720\uc0ac\ud55c \ud615\uc2dd\uc73c\ub85c \uc2dc\uac04 \uc21c\uc11c\ub300\ub85c \ucd9c\ub825\ub41c\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-replay/#replay","text":"-f FIELD , --output-fields= FIELD : \uacb0\uacfc\ub85c \ubcf4\uc5ec\uc9c0\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294 duration, tid, time, delta, elapsed, addr \uac00 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'duration,tid' \uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. --flat : C \uc640 \uac19\uc774 \ud638\ucd9c \uae4a\uc774\uac00 \ubcf4\uc774\ub294 \ubc29\uc2dd\uc774 \uc544\ub2cc \ud3c9\ud3c9\ud55c(flat) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \uc8fc\ub85c \ub514\ubc84\uae45\uc774\ub098 \ud14c\uc2a4\ud2b8 \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub41c\ub2e4. --column-view : \uc5f4(column) \ubcc4\ub85c \ubd84\ub9ac\ud558\uc5ec \uac01\uac01\uc758 \ud0dc\uc2a4\ud06c\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc11c\ub85c \ub2e4\ub978 \ud0dc\uc2a4\ud06c\uc5d0\uc11c \uc2e4\ud589\ud558\ub294 \ud568\uc218\uc758 \uad6c\ubd84\uc744 \uc27d\uac8c\ud55c\ub2e4. --column-offset= DEPTH : --column-view \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c, \uc774 \uc635\uc158\uc740 \uac01 \ud0dc\uc2a4\ud06c \uc0ac\uc774\uc758 \uac04\uaca9(offset) \ud06c\uae30\ub97c \uba85\uc2dc\ud55c\ub2e4. \uae30\ubcf8 \uac04\uaca9\uc740 8 \uc774\ub2e4. --task-newline : \ud0dc\uc2a4\ud06c\uac00 \ubcc0\uacbd\ub418\uba74 \ube48 \uacf5\ubc31 \ud55c\uc904\uc744 \ucd94\uac00\ud55c\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc5ec\ub7ec \ud0dc\uc2a4\ud06c\uc5d0\uc11c \ub3d9\uc791\ud558\ub294 \ud568\uc218\ub4e4\uc744 \uc27d\uac8c \uad6c\ubcc4 \ud560 \uc218 \uc788\ub2e4. --no-comment : \ud568\uc218\uac00 \ubc18\ud658\ub418\ub294 \uacf3\uc5d0 \uc8fc\uc11d\uc744 \ucd9c\ub825\ud558\uc9c0 \uc54a\ub294\ub2e4. --libname : \ud568\uc218 \uc774\ub984\uacfc \ud568\uaed8 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4. --format= TYPE : \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud604\uc7ac\ub294 'normal' \uacfc 'html' \ud615\uc2dd\uc774 \uc9c0\uc6d0\ub41c\ub2e4.","title":"REPLAY \uc635\uc158"},{"location":"ko/uftrace-replay/#_4","text":"-F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 TRIGGERS \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth= DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \ub97c \ucc38\uace0\ud55c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 FILTERS \uc744 \ucc38\uace0\ud55c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --disable : uftrace \ub97c \uc2dc\uc791\ud560\ub54c \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\uace0 \uc2dc\uc791\ud55c\ub2e4. \uc774\uac83\uc740 trace_on \ud2b8\ub9ac\uac70\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub9cc \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.","title":"\uacf5\ud1b5 \uc635\uc158"},{"location":"ko/uftrace-replay/#_5","text":"-H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"\uacf5\ud1b5 \ubd84\uc11d \uc635\uc158"},{"location":"ko/uftrace-replay/#filters","text":"uftrace \ub294 \uad00\uc2ec \uc788\ub294 \ub300\uc0c1\uc774 \uc544\ub2cc \ud568\uc218\ub4e4\uc744 \uac10\ucd94\ub294 \ud544\ud130\ub9c1\uc744 \ud560 \uc218 \uc788\ub2e4. \ud544\ud130\ub9c1\uc740 \uc0ac\uc6a9\uc790\ub4e4\uc774 \uad00\uc2ec \uc788\ub294 \ud568\uc218\ub4e4\uc5d0\ub9cc \uc9d1\uc911\ud560 \uc218 \uc788\uac8c \ud558\uace0, \uae30\ub85d\ub418\ub294 \ub370\uc774\ud130\uc758 \ud06c\uae30\ub97c \uc904\uc77c \uc218 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ud55c\ub2e4. uftrace \uac00 \ud638\ucd9c\ub418\uba74, \ub450 \uc885\ub958\uc758 \ud568\uc218 \ud544\ud130\ub97c \uac16\uac8c \ub418\ub294\ub370 \uc774\ub4e4\uc740 \ub300\uc0c1 \ud568\uc218\ub97c \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd(opt-in)\uc758 \ud544\ud130\ub85c -F / --filter \uc640 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd(opt-out)\uc758 \ud544\ud130\uc778 -N / --notrace \uac00 \uc788\ub2e4. \uc774 \ud544\ud130\ub4e4\uc740 \uae30\ub85d(record)\ud558\uac70\ub098 \uc7ac\uc0dd(replay)\ud560 \ub54c \ubaa8\ub450 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4. \uccab\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \uc774\uac83\uc740 \uc544\ubb34\uac83\ub3c4 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \uc5b4\ub5a4 \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uba74, \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ucd94\uc801\uc744 \uc2dc\uc791\ud55c\ub2e4. \uadf8\ub7ec\ub2e4\uac00 \uadf8 \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ud568\uc218 \ud638\ucd9c \ucd94\uc801\uc744 \uc911\ub2e8\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, a() , b() \uc640 c() \ub97c \ucc28\ub840\ub85c \ud638\ucd9c\ud558\ub294 \uac04\ub2e8\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \uc0dd\uac01\ud574\ubcf4\uc790. $ cat abc.c void c(void) { /* do nothing */ } void b(void) { c(); } void a(void) { b(); } int main(void) { a(); return 0; } $ gcc -pg -o abc abc.c \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 uftrace \ub294 main() \ubd80\ud130 c() \uae4c\uc9c0\uc758 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc744 \ucd94\uc801\ud560 \uac83\uc774\ub2e4. $ uftrace ./abc # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ud558\uc9c0\ub9cc -F b \ud544\ud130 \uc635\uc158\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc744 \ub54c\ub294, main() \uacfc a() \ud568\uc218\ub294 \ubcf4\uc774\uc9c0 \uc54a\uace0 \uc624\uc9c1 b() \uc640 c() \ub9cc\uc774 \ud3ec\ud568\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc77c\uac83\uc774\ub2e4. \uc544\ub798\uc758 \uc608\ub294 \ud544\ud130\uac00 uftrace replay \ub97c \ud560\ub54c \uc801\uc6a9\ub418\uc5c8\uc74c\uc5d0 \uc720\uc758\ud558\ub77c. $ uftrace record ./abc $ uftrace replay -F b # DURATION TID FUNCTION [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ \ub450\ubc88\uc9f8 \ud544\ud130 \uc885\ub958\ub294 \uc120\ud0dd\ud558\uc9c0 \uc54a\ub294 \ubc29\uc2dd\uc758 \ud544\ud130\uc774\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \uac83\uc774 \ucd94\uc801\ub418\uc9c0\ub9cc, \uba85\uc2dc\ub41c \ud568\uc218\uc5d0 \uc9c4\uc785\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uba48\ucd98\ub2e4. \uc81c\uc678\ub41c \ud568\uc218\uac00 \ubc18\ud658\ud558\uac8c \ub418\uba74, \ucd94\uc801\uc744 \uc7ac\uac1c\ud55c\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c, b() \ud568\uc218\uc640 \uadf8\uc758 \ubaa8\ub4e0 \ud558\uc704 \ud568\uc218\ub4e4\uc758 \ud638\ucd9c\uc740 -N \uc635\uc158\uc73c\ub85c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. $ uftrace record ./abc $ uftrace replay -N b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ b() \ud568\uc218\ub9cc\uc744 \uc228\uae30\uace0 \uadf8\uc758 \ud558\uc704 \ud568\uc218\ub4e4\uc740 \uadf8\ub300\ub85c \ubcf4\uace0 \uc2f6\uc73c\uba74 -H \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. $ uftrace record ./abc $ uftrace replay -H b # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 3.880 us [ 1234] | c(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704\uc758 -H \uc635\uc158\uc740 \ud2b9\ud788 C++ \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c -H ^std:: \uc640 \uac19\uc774 \uc0ac\uc6a9\ud574\uc11c std \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud638\ucd9c\ub4e4\uc744 \uc228\uae38\ub54c \uc720\uc6a9\ud558\ub2e4. \ub9cc\uc77c \ud2b9\uc815 \ud568\uc218\uc5d0\ub9cc \uad00\uc2ec\uc774 \uc788\uace0 \uadf8 \ud568\uc218\uac00 \uc5b4\ub5bb\uac8c \ud638\ucd9c\ub418\ub294\uc9c0\ub9cc \uc54c\uace0 \uc2f6\ub2e4\uba74, caller filter \ub97c \uc0ac\uc6a9\ud558\uba74 \ub420 \uac83\uc774\ub2e4. \uadf8 \ud568\uc218\ub97c \ub9c8\uc9c0\ub9c9(leaf) \ub178\ub4dc\ub85c \ub9cc\ub4e4\uace0, \uadf8 \ud568\uc218\uc758 \ubaa8\ub4e0 \ubd80\ubaa8 \ud568\uc218\ub4e4\uc744 \uae30\ub85d\ud55c\ub2e4. $ uftrace record ./abc $ uftrace replay -C b # DURATION TID FUNCTION [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, \ud638\ucd9c \uacbd\ub85c\uc5d0 \uc5c6\ub294 \ud568\uc218\ub4e4\uc744 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, \ud568\uc218 b() \uc758 \uc790\uc2dd \ud568\uc218\uc778 \ud568\uc218 c() \ub610\ud55c \ucd9c\ub825\ub418\uc9c0 \uc54a\uc558\ub2e4. \ub610\ud55c, -D \uc635\uc158\uc73c\ub85c \ud568\uc218\uc758 \uc911\ucca9 \uae4a\uc774\uc744 \uc81c\ud55c\ud560 \uc218\ub3c4 \uc788\ub2e4. $ uftrace record ./abc $ uftrace replay -D 3 # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \uc704 \uc608\uc2dc\uc5d0\uc11c, uftrace \ub294 \ud568\uc218 \ud638\ucd9c \uae4a\uc774\ub97c \ucd5c\ub300 3 \uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd9c\ub825\ud588\uae30 \ub54c\ubb38\uc5d0, \ub9c8\uc9c0\ub9c9 \ud568\uc218\uc778 c() \ub294 \uc0dd\ub7b5\ub418\uc5c8\ub2e4. -D \uc635\uc158\uc740 -F \uc635\uc158\uacfc \ud568\uaed8 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ub54c\ub85c\ub294, \uc624\ub79c \uc2dc\uac04 \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub4e4\uc744 \ud2b9\ubcc4\ud558\uac8c \uad00\ucc30\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud558\ub2e4. \uc774\ub294 \uc791\uc740 (\uc2e4\ud589\uc2dc\uac04\uc744 \uac00\uc9c0\ub294) \ud568\uc218\ub4e4 \uc911\uc5d0\ub294 \uad00\uc2ec \ub300\uc0c1\uc774 \uc544\ub2cc \uac83\ub4e4\uc774 \ub9ce\uae30 \ub54c\ubb38\uc774\ub2e4. -t / --time-filter \uc635\uc158\uc740 \uba85\uc2dc\ub41c \uc784\uacc4\uc2dc\uac04\ubcf4\ub2e4 \uc624\ub798 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ubcfc \uc218 \uc788\uac8c \ud558\ub294 \uc2dc\uac04 \uae30\ubc18\uc758 \ud544\ud130\uc774\ub2e4. \uc704 \uc608\uc2dc\uc5d0\uc11c\ub294, \uc0ac\uc6a9\uc790\ub294 \ub300\ubd80\ubd84 \uc544\ub798\uc640 \uac19\uc774 5 \ub9c8\uc774\ud06c\ub85c(us) \ucd08 \uc774\uc0c1 \uac78\ub824\uc11c \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ubcf4\uace0 \uc2f6\uc5b4\ud560 \uac83\uc774\ub2e4. $ uftrace record ./abc $ uftrace replay -t 5us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { [ 1234] | a() { 5.475 us [ 1234] | b(); 6.448 us [ 1234] | } /* a */ 8.631 us [ 1234] | } /* main */ \ub3d9\uc77c\ud55c \ub370\uc774\ud130\uc5d0 \ub300\ud574 \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130 \uac12\uc744 \uc124\uc815\ud574 replay \uacb0\uacfc\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4. $ uftrace replay -t 6us # DURATION TID FUNCTION 138.494 us [ 1234] | __cxa_atexit(); [ 1234] | main() { 6.448 us [ 1234] | a(); 8.631 us [ 1234] | } /* main */ \ub610\ud55c, -r \uc635\uc158\uc740 \uc8fc\uc5b4\uc9c4 \uc2dc\uac04 \ubc94\uc704 \ub3d9\uc548 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c, \uacb0\uacfc\uac12\uc744 TIMESTAMP, ELAPSED, DURATION, TID \ud544\ub4dc\ub4e4\uacfc \ud568\uaed8 \ubcfc \uc218 \uc788\ub2e4. $ uftrace replay -r 502716.387320101~502716.387322389 # TIMESTAMP DURATION TID FUNCTION 502716.387320101 0.289 us [ 6126] | fgets(); 502716.387320584 [ 6126] | get_values_from() { 502716.387320709 0.245 us [ 6126] | strdup(); 502716.387321172 0.144 us [ 6126] | strsep(); 502716.387321542 0.223 us [ 6126] | atoi(); 502716.387321983 0.239 us [ 6126] | atoi(); 502716.387322389 1.805 us [ 6126] | } /* get_values_from */ $ uftrace replay -r 40us~ | head -10 # ELAPSED DURATION TID FUNCTION 40.141 us [ 6126] | get_values_from() { 40.269 us 0.249 us [ 6126] | strdup(); 40.756 us 0.149 us [ 6126] | strsep(); 41.119 us 0.235 us [ 6126] | atoi(); 41.578 us 0.211 us [ 6126] | atoi(); 41.957 us 1.816 us [ 6126] | } /* get_values_from */ 42.124 us 0.220 us [ 6126] | fgets(); 42.529 us [ 6126] | get_values_from() { 42.645 us 0.236 us [ 6126] | strdup(); \ud544\ud130\ub9c1\ub41c \ud568\uc218\uc5d0 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4. \ub354 \ub9ce\uc740 \uc815\ubcf4\ub294 TRIGGERS \ud56d\ubaa9\uc5d0\uc11c \ucc38\uace0\ud560 \uc218 \uc788\ub2e4.","title":"FILTERS"},{"location":"ko/uftrace-replay/#triggers","text":"uftrace \ub294 (\ud544\ud130\uac00 \uc788\ub4e0 \uc5c6\ub4e0) \uc120\ud0dd\ub41c \ud568\uc218 \ud638\ucd9c\uc5d0 \ub300\ud55c \ud2b8\ub9ac\uac70 \ub3d9\uc791\uc744 \uc9c0\uc6d0\ud55c\ub2e4. \ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \ud2b8\ub9ac\uac70\uc640 \uc0ac\uc591\uc5d0 \ub300\ud55c BNF \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. <trigger> := <symbol> \"@\" <actions> <actions> := <action> | <action> \",\" <actions> <action> := \"depth=\"<num> | \"backtrace\" | \"trace_on\" | \"trace_off\" | \"color=\"<color> | \"time=\"<time_spec> | \"size=\"<num> | \"filter\" | \"notrace\" | \"hide\" <time_spec> := <num> [ <time_unit> ] <time_unit> := \"ns\" | \"nsec\" | \"us\" | \"usec\" | \"ms\" | \"msec\" | \"s\" | \"sec\" | \"m\" | \"min\" depth \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \ud544\ud130\uc758 \uae4a\uc774\ub97c \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\uc591\ud55c \ud568\uc218\uc5d0 \ub300\ud574 \uc11c\ub85c \ub2e4\ub978 \ud544\ud130 \uae4a\uc774\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. \uadf8\ub9ac\uace0 backtrace \ud2b8\ub9ac\uac70\ub294 replay \uc2dc \uc2a4\ud0dd \ubc31\ud2b8\ub808\uc774\uc2a4\ub97c \ucd9c\ub825\ud55c\ub2e4. color \ud2b8\ub9ac\uac70\ub294 \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud55c\ub2e4. \uc9c0\uc6d0\ub418\ub294 \uc0c9\uc0c1\uc740 red , green , blue , yellow , magenta , cyan , bold , gray \uac00 \uc788\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ud2b8\ub9ac\uac70\uc758 \uc791\ub3d9 \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud568\uc218 b() \uc5d0 backtrace action \uc744 \ub123\uace0 \ud544\ud130 \uae4a\uc774\ub97c 2 \ub85c \uc124\uc815\ud55c\ub2e4. $ uftrace record ./abc $ uftrace replay -T 'b@filter,backtrace,depth=2' # DURATION TID FUNCTION backtrace [ 1234] | /* [ 0] main */ backtrace [ 1234] | /* [ 1] a */ [ 1234] | b() { 3.880 us [ 1234] | c(); 5.475 us [ 1234] | } /* b */ trace_on \uacfc trace_off \ud2b8\ub9ac\uac70\ub294 uftrace \uac00 \uc9c0\uc815\ub41c \ud568\uc218\ub97c \uae30\ub85d\ud560\uc9c0 \uc5ec\ubd80\ub97c \uad00\ub9ac\ud55c\ub2e4. \ub610\ud55c, _ \ubb38\uc790 \uc5c6\uc774 traceon \uacfc traceoff \ub85c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. time \ud2b8\ub9ac\uac70\ub294 \ud568\uc218\ub97c \uc2e4\ud589\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04 \ud544\ud130(time-filter) \uc124\uc815\uc744 \ubcc0\uacbd\ud55c\ub2e4. \ub2e4\ub978 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c \uc11c\ub85c \ub2e4\ub978 \uc2dc\uac04 \ud544\ud130\ub97c \uc801\uc6a9\ud560 \ub584 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. filter \uc640 notrace \ud2b8\ub9ac\uac70\ub294 \uac01\uac01 -F / --filter \uc640 -N / --notrace \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\ub2e4. hide \ud2b8\ub9ac\uac70\ub294 \ud2b9\uc815 \ud568\uc218\ub97c \ubcf4\uc774\uc9c0 \uc54a\uac8c \ud558\ub294 -H / --hide \uc635\uc158\uacfc \uac19\uc740 \ud6a8\uacfc\uac00 \uc788\uc5b4\uc11c notrace \uc640 \ub2e4\ub974\uac8c \ud558\uc704 \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4.","title":"TRIGGERS"},{"location":"ko/uftrace-replay/#fields","text":"uftrace \uc0ac\uc6a9\uc790\ub294 replay \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uc5ec\uae30\uc11c \ud544\ub4dc\ub780 \ud30c\uc774\ud504 \ubb38\uc790 (|) \uc67c\ucabd\uc5d0 \ub098\ud0c0\ub098\ub294 \uc815\ubcf4\ub97c \ub73b\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc9c0\uc18d\uc2dc\uac04 duration \uacfc tid \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace replay -f time,delta,duration,addr # TIMESTAMP TIMEDELTA DURATION ADDRESS FUNCTION 74469.340757350 1.583 us 4004d0 | __monstartup(); 74469.340762221 4.871 us 0.766 us 4004f0 | __cxa_atexit(); 74469.340764847 2.626 us 4006b1 | main() { 74469.340765061 0.214 us 400656 | a() { 74469.340765195 0.134 us 400669 | b() { 74469.340765344 0.149 us 40067c | c() { 74469.340765524 0.180 us 0.742 us 4004b0 | getpid(); 74469.340766935 1.411 us 1.591 us 40067c | } /* c */ 74469.340767195 0.260 us 2.000 us 400669 | } /* b */ 74469.340767372 0.177 us 2.311 us 400656 | } /* a */ 74469.340767541 0.169 us 2.694 us 4006b1 | } /* main */ \uac01 \ud544\ub4dc\ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\ub97c \uac00\uc9c4\ub2e4. tid: task id (gettid(2)\ub85c \uc5bb\uc744 \uc218 \uc788\ub2e4.) duration: \ud568\uc218 \uc2e4\ud589 \uc2dc\uac04 time: \ud0c0\uc784\uc2a4\ud0ec\ud504 \uc815\ubcf4 delta: \uc5b4\ub5a4 \uc791\uc5c5 \ub0b4 \ub450 \ud0c0\uc784\uc2a4\ud0ec\ud504\uc758 \ucc28\uc774 elapsed: \uccab \ud0c0\uc784\uc2a4\ud0ec\ud504\ub85c\ubd80\ud130\uc758 \uacbd\uacfc \uc2dc\uac04 addr: \ud574\ub2f9 \ud568\uc218\uc758 \uc8fc\uc18c task: \ud0dc\uc2a4\ud06c \uc774\ub984 (comm) module: \ub77c\uc774\ube0c\ub7ec\ub9ac \ud639\uc740 \uc2e4\ud589 \uac00\ub2a5\ud55c \ud568\uc218\uc758 \uc774\ub984 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'duration,tid'\uc774\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ub41c\ub2e4\uba74, \uadf8 \ud544\ub4dc\ub294 \uae30\ubcf8 \ud544\ub4dc\uac12\uc5d0 \ucd94\uac00\ub420 \uac83\uc774\ub2e4. \uc989, \"-f +time\" \ub294 \"-f duration,tid,time\" \uc640 \uac19\uc740 \uac83\uc774\ub2e4. \ub610\ud55c 'none'\uc774\ub77c\ub294 \ud2b9\ubcc4\ud55c \ud544\ub4dc\ub3c4 \ubc1b\uc744 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ud544\ub4dc \ucd9c\ub825\uc744 \ud558\uc9c0 \uc54a\uace0 \uc624\uc9c1 \ud568\uc218 \uc2e4\ud589 \uacb0\uacfc\ub9cc\uc744 \ubcf4\uc5ec\uc900\ub2e4.","title":"FIELDS"},{"location":"ko/uftrace-replay/#_6","text":"uftrace (1), uftrace-record (1), uftrace-report (1), uftrace-info (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-replay/#_7","text":"\uac15\ubbfc\ucca0 tegongkang@gmail.com , \uae40\ud64d\uaddc honggyu.kp@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-report/","text":"% UFTRACE-REPORT(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-report - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud1b5\uacc4\uc640 \uc694\uc57d \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace report [ options ] \uc124\uba85 \uc774 \uba85\ub839\uc5b4\ub294 \uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130 \ud30c\uc77c\uc758 \ub370\uc774\ud130\ub97c \ubaa8\uc73c\uace0 \uadf8 \uc694\uc57d \uc815\ubcf4\uc640 \ud1b5\uacc4 \uc790\ub8cc\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ud568\uc218\uc790\ub8cc\ub4e4\uc744 \ubcf4\uc5ec\uc8fc\ub294\ub370, --task \uc635\uc158\uc744 \ud1b5\ud574 \uc2e4\ud589\ud55c \ud0dc\uc2a4\ud06c \ub2e8\uc704\uc758 \ud1b5\uacc4\uc790\ub8cc\ub97c \ubcfc \uc218 \uc788\uace0, --diff \uc635\uc158\uc740 \ucd94\uac00 \uc778\uc790\ub85c \ub370\uc774\ud130\ub97c \uc785\ub825\ud558\uba74, \uadf8 \ub370\uc774\ud130\uc640 \uc6d0\ubcf8 \ub370\uc774\ud130 \uac04\uc758 \ucc28\uc774\uc810\uc744 \ubcf4\uc5ec\uc900\ub2e4. REPORT \uc635\uc158 -f FIELD , --output-fields= FIELD : \uacb0\uacfc\ub85c \ubcf4\uc5ec\uc9c0\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294 total , total-avg , total-min , total-max , self , self-avg , self-min , self-max , size \uadf8\ub9ac\uace0 call \uc774 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'total,self,call' \uc774 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : \uc8fc\uc5b4\uc9c4 \ud0a4\ub97c \uae30\ubc18\uc73c\ub85c \ud568\uc218\ub4e4\uc744 \uc815\ub82c\ud55c\ub2e4. \uc5ec\ub7ec \ud0a4\ub4e4\uc744 \uc801\uc6a9\ud560 \uacbd\uc6b0, \ud0a4\ub4e4\uc744 \uc27c\ud45c(,)\ub85c \ub098\ub204\uc5b4 \ud45c\ud604\ud55c\ub2e4. total (time), total-avg , total-min , total-max , self (time), self-avg , self-min , self-max , size , call , func \ub97c \ud0a4\ub85c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uadf8\ub7ec\ub098 --avg-total \ub610\ub294 --avg-self \uc635\uc158\uc774 \uc0ac\uc6a9\ub41c \uacbd\uc6b0, \ucd1d \uc2dc\uac04(total time) \ub610\ub294 \uc790\uccb4 \uc2dc\uac04(self time\uc5d0)\uc5d0 \uc801\uc6a9\ub418\ub294 avg , min , max \ub97c \ud0a4\ub85c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. --avg-total : \uac01 \ud568\uc218\uc758 \ucd1d \uc2dc\uac04(total time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. --avg-self : \uac01 \ud568\uc218\uc758 \uc790\uccb4 \uc2dc\uac04(self time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. --task : \ud568\uc218\uc758 \ud1b5\uacc4\uc790\ub8cc\uac00 \uc544\ub2cc \ud0dc\uc2a4\ud06c\ub97c \uc694\uc57d\ud574\uc11c \ubcf4\uace0\ud55c\ub2e4. -f \uc635\uc158\uc744 \uc774\uc6a9\ud574 \ucd9c\ub825 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud560 \uc218 \uc788\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294: total , self , func \uadf8\ub9ac\uace0 tid \uac00 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'total,self,func,tid' \uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. --diff= DATA : \uc785\ub825\ud55c \ucd94\uc801 \ub370\uc774\ud130\uc640 \uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130\uc758 \ucc28\uc774\uc810\uc744 \ubcf4\uace0\ud55c\ub2e4. \ub450 \ub370\uc774\ud130\ub294 uftrace \ub85c record \ud55c \ub370\uc774\ud130\uc774\uba70, \ub370\uc774\ud130\ub97c \ub2f4\uc740 \ub514\ub809\ud1a0\ub9ac\ub97c \uc778\uc790\ub85c \ub118\uaca8\uc57c\ud55c\ub2e4. --diff-policy= POLICY : --diff \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c, \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c diff \uc815\ucc45\uc744 \uc801\uc6a9\ud55c\ub2e4. \uc0ac\uc6a9\uac00\ub2a5\ud55c \uac12\uc73c\ub85c\ub294 \"abs\", \"no-abs\", \"percent\", \"no-percent\", \"compact\" \"full\"\uc774 \uc788\ub2e4. \"abs\"\ub294 \uc808\ub300\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec diff \uacb0\uacfc\ub97c \uc815\ub82c\ud558\uba70 \uc591\uc218\uc640 \uc74c\uc218 \ud56d\ubaa9\uc744 \ud568\uaed8 \ud45c\uc2dc\ud560 \uc218 \uc788\ub2e4. \"no-abs\"\ub294 \uba3c\uc800 \uc591\uc218 \ud56d\ubaa9\uc744 \ud45c\uc2dc\ud55c \ub2e4\uc74c \uc74c\uc218 \ud56d\ubaa9\uc744 \ud45c\uc2dc\ud55c\ub2e4. \"percent\"\ub294 diff\ub97c \ubc31\ubd84\uc728\ub85c \ud45c\uc2dc\ud558\uace0 \"no-percent\"\ub294 \uac12\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. \"full\"\uc740 \uae30\uc900, \uc0c8 \ub370\uc774\ud130, \ucc28\uc774\uc810 \uc774 \uc138 \uc5f4\uc744 \ubaa8\ub450 \ud45c\uc2dc\ud558\ub294 \ubc18\uba74 \"compact\"\ub294 \ucc28\uc774\uc810\ub9cc \ud45c\uc2dc\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 \"abs\", \"compact\", \"no-percent\"\ub2e4. --sort-column= IDX : --diff \ub97c \"full\" \uc815\ucc45\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \ub54c, \ucd1d \uc2dc\uac04, \uc790\uccb4 \uc2dc\uac04, \ud638\ucd9c \ud69f\uc218 \uc774 3\uac1c\uc758 \uc5f4\uc774 \ud45c\uc2dc\ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \uc815\ub82c \ud0a4\ub85c \uc0ac\uc6a9\ud560 \uc5f4 \uc778\ub371\uc2a4\ub97c \uc120\ud0dd\ud55c\ub2e4. \uc778\ub371\uc2a4 0\uc740 --data \uc635\uc158\uc73c\ub85c \uc81c\uacf5\ub418\ub294 \uc6d0\ubcf8 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uac83\uc774\uace0, \uc778\ub371\uc2a4 1\uc740 --diff \uc635\uc158\uc73c\ub85c \uc81c\uacf5\ub418\ub294 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uac83, \uc778\ub371\uc2a4 2\ub294 \ub450 \ub370\uc774\ud130 \uac04\uc758 (\ubc31\ubd84\uc728) \ucc28\uc774\uc5d0 \ub300\ud55c \uac83\uc774\ub2e4. --srcline : \uac00\ub2a5\ud55c \uac01 \ud568\uc218\ub4e4\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4. --format= TYPE : \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud604\uc7ac\ub294 'normal' \uacfc 'html' \ud615\uc2dd\uc774 \uc9c0\uc6d0\ub41c\ub2e4. \uacf5\ud1b5 \uc635\uc158 -F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. \uacf5\ud1b5 \ubd84\uc11d \uc635\uc158 -H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc608\uc81c \uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uc815\ubcf4\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. $ uftrace record abc $ uftrace report Total time Self time Calls Function ========== ========== ========== ==================== 150.829 us 150.829 us 1 __cxa_atexit 27.289 us 1.243 us 1 main 26.046 us 0.939 us 1 a 25.107 us 0.934 us 1 b 24.173 us 1.715 us 1 c 22.458 us 22.458 us 1 getpid $ uftrace report -s call,self Total time Self time Calls Function ========== ========== ========== ==================== 150.829 us 150.829 us 1 __cxa_atexit 22.458 us 22.458 us 1 getpid 24.173 us 1.715 us 1 c 27.289 us 1.243 us 1 main 26.046 us 0.939 us 1 a 25.107 us 0.934 us 1 b $ uftrace report --avg-self Avg self Min self Max self Function ========== ========== ========== ==================== 150.829 us 150.829 us 150.829 us __cxa_atexit 22.458 us 22.458 us 22.458 us getpid 1.715 us 1.715 us 1.715 us c 1.243 us 1.243 us 1.243 us main 0.939 us 0.939 us 0.939 us a 0.934 us 0.934 us 0.934 us b $ uftrace report --task Total time Self time Num funcs TID Task name ========== ========== ========== ====== ================ 22.178 us 22.178 us 7 29955 t-abc $ uftrace record --srcline abc $ uftrace report --srcline Total time Self time Calls Function [Source] ========== ========== ========== ==================== 17.508 us 2.199 us 1 main [./tests/s-abc.c:26] 15.309 us 2.384 us 1 a [./tests/s-abc.c:11] 12.925 us 2.633 us 1 b [./tests/s-abc.c:16] 10.292 us 5.159 us 1 c [./tests/s-abc.c:21] 5.133 us 5.133 us 1 getpid 3.437 us 3.437 us 1 __monstartup 1.959 us 1.959 us 1 __cxa_atexit \ub450 \ub370\uc774\ud130\uc758 \ucc28\uc774\uc810\uc744 \ubcf4\ub824\uba74: $ uftrace record abc $ uftrace report --diff uftrace.data.old # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.263 us -0.070 us +0 a -0.193 us -0.042 us +0 b -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit -0.061 us -0.061 us +0 getpid \uc704\uc758 \uc608\uc81c\ub294 \ucd1d \uc2dc\uac04\uc758 \uc808\ub300\uac12\uc73c\ub85c \uc815\ub82c\ud55c \ub450 \ub370\uc774\ud130\uc758 \ucc28\uc774\uc810\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc544\ub798\uc758 \uc608\uc81c\ub294 \uc790\uccb4 \uc2dc\uac04\uc758 (\ubd80\ud638\uac00 \uc788\ub294) \uac12\uc744 \uc774\uc6a9\ud574 \uc815\ub82c\ud588\ub2e4. $ uftrace report --diff uftrace.data.old -s self --diff-policy no-abs # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.193 us -0.042 us +0 b -0.061 us -0.061 us +0 getpid -0.263 us -0.070 us +0 a -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit \"full\" \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uba74 \uc0ac\uc6a9\uc790\ub294 \uc544\ub798\uc640 \uac19\uc740 \uc6d0\uc2dc(raw) \ub370\uc774\ud130\ub97c \ubcfc \uc218 \uc788\ub2e4. \ub610\ud55c (\uc6d0\uc2dc \ub370\uc774\ud130\uc758 \uacbd\uc6b0) \ub2e4\ub978 \uc5f4\ub85c \uc815\ub82c\ub3c4 \uac00\ub2a5\ud558\ub2e4. \ubc11\uc758 \uc608\uc81c\ub294 base \ub370\uc774\ud130\uc758 \ucd1d \uc2dc\uac04\uc744 \uae30\uc900\uc73c\ub85c \uacb0\uacfc\ub97c \uc815\ub82c\ud55c\ub2e4. $ uftrace report --diff uftrace.data.old --sort-column 0 --diff-policy full,percent # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time (diff) Self time (diff) Nr. called (diff) Function ================================ ================================ ================================ ==================== 2.812 us 2.511 us -10.70% 0.403 us 0.365 us -9.43% 1 1 +0 main 2.409 us 2.146 us -10.92% 0.342 us 0.272 us -20.47% 1 1 +0 a 2.067 us 1.874 us -9.34% 0.410 us 0.368 us -10.24% 1 1 +0 b 1.657 us 1.506 us -9.11% 0.890 us 0.800 us -10.11% 1 1 +0 c 0.920 us 0.789 us -14.24% 0.920 us 0.789 us -14.24% 1 1 +0 __cxa_atexit 0.767 us 0.706 us -7.95% 0.767 us 0.706 us -7.95% 1 1 +0 getpid FIELDS uftrace \uc0ac\uc6a9\uc790\ub294 report \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c total, self\uc640 call \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace report -f total,total-max,self-min,call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 46.806 us 46.806 us 3.290 us 1 main 43.516 us 43.516 us 7.483 us 1 foo 32.010 us 20.847 us 9.684 us 2 lib_c \uac01 \ud544\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc815\ub82c \ud0a4\ub85c\ub3c4 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. $ uftrace report -f total,total-max,self-min,call -s call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 32.010 us 20.847 us 9.684 us 2 lib_c 43.516 us 43.516 us 7.483 us 1 foo 46.806 us 46.806 us 3.290 us 1 main $ uftrace report -f total,total-max,self-min,total-min,call -s self-min,total-min Total time Total max Self min Total min Calls Function ========== ========== ========== ========== ========== ==================== 32.010 us 20.847 us 9.684 us 11.163 us 2 lib_c 43.516 us 43.516 us 7.483 us 43.516 us 1 foo 46.806 us 46.806 us 3.290 us 46.806 us 1 main 50.552 us 26.690 us 2.828 us 23.862 us 2 lib_b 97.234 us 36.033 us 1.073 us 27.763 us 3 lib_a \uac01 \ud544\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc774 --diff \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. $ uftrace report --diff uftrace.data.old -f total,total-min # # uftrace diff # [0] base: uftrace.data (from uftrace record test/t-lib) # [1] diff: uftrace.data.old (from uftrace record test/t-lib) # Total time Total min Function =========== =========== ==================== +34.560 us +9.884 us lib_a +18.086 us +8.517 us lib_b +16.887 us +16.887 us main +15.479 us +15.479 us foo +10.600 us +3.127 us lib_c $ uftrace report --diff uftrace.data.old -f total,total-min,self-avg --diff-policy full # # uftrace diff # [0] base: uftrace.data (from uftrace record --srcline test/t-lib) # [1] diff: uftrace.data.old (from uftrace record --srcline test/t-lib) # Total time (diff) Total min (diff) Self avg (diff) Function =================================== =================================== =================================== ==================== 14.616 us 13.796 us +0.820 us 4.146 us 3.823 us +0.323 us 0.443 us 0.459 us -0.016 us lib_a 6.529 us 5.957 us +0.572 us 6.529 us 5.957 us +0.572 us 0.436 us 0.356 us +0.080 us main 7.700 us 7.173 us +0.527 us 3.677 us 3.426 us +0.251 us 0.365 us 0.363 us +0.002 us lib_b 6.093 us 5.601 us +0.492 us 6.093 us 5.601 us +0.492 us 0.741 us 0.476 us +0.265 us foo 5.638 us 5.208 us +0.430 us 2.346 us 2.187 us +0.159 us 1.646 us 1.510 us +0.136 us lib_c \uac01 \ud544\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\uac00 \uc788\ub2e4. total: \ud568\uc218\uc758 \uc804\uccb4 \uc2e4\ud589 \uc2dc\uac04 total-avg: \uac01 \ud568\uc218\ub4e4\uc758 \ucd1d\ud569 \uc2dc\uac04\uc758 \ud3c9\uade0\uac12. total-min: \uac01 \ud568\uc218\ub4e4\uc758 \ucd1d\ud569 \uc2dc\uac04\uc758 \ucd5c\uc18c\uac12. total-max: \uac01 \ud568\uc218\ub4e4\uc758 \ucd1d\ud569 \uc2dc\uac04\uc758 \ucd5c\ub300\uac12. self: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04. self-avg: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04\uc758 \ud3c9\uade0\uac12. self-min: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04\uc758 \ucd5c\uc18c\uac12. self-max: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04\uc758 \ucd5c\ub300\uac12. call: \uac01 \ud568\uc218\ub4e4\uc774 \ud638\ucd9c\ub41c \ud69f\uc218. \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'total,self,call'\uc774\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ub41c\ub2e4\uba74, \uadf8 \ud544\ub4dc\ub294 \uae30\ubcf8 \ud544\ub4dc\uac12\uc5d0 \ucd94\uac00\ub420 \uac83\uc774\ub2e4. \uc989, \"-f +total-avg\" \ub294 \"-f total,self,call,total-avg\" \uc640 \uac19\uc740 \uac83\uc774\ub2e4. \ub610\ud55c 'none'\uc774\ub77c\ub294 \ud2b9\ubcc4\ud55c \ud544\ub4dc\ub3c4 \ubc1b\uc744 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ud544\ub4dc \ucd9c\ub825\uc744 \ud558\uc9c0 \uc54a\uace0 \uc624\uc9c1 \ud568\uc218 \uc2e4\ud589 \uacb0\uacfc\ub9cc\uc744 \ubcf4\uc5ec\uc900\ub2e4. TASK FIELDS total: \uac01 \uc791\uc5c5\uc758 \ucd1d \uc18c\uc694 \uc2dc\uac04. self: \uac01 \uc791\uc5c5\ubcc4 \uc18c\uc694 \uc2dc\uac04. func: \uc791\uc5c5 \ub0b4\uc758 \ud568\uc218 \uac2f\uc218. tid: \uc791\uc5c5 ID. \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'total,self,func,tid'\uc774\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1) \ubc88\uc5ed\uc790 \uae40\uc11c\uc601 gegiraffe@gmail.com , \uac15\ubbfc\ucca0 tegongkang@gmail.com","title":"Uftrace report"},{"location":"ko/uftrace-report/#_1","text":"uftrace-report - \uae30\ub85d\ub41c \ub370\uc774\ud130\uc758 \ud1b5\uacc4\uc640 \uc694\uc57d \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-report/#_2","text":"uftrace report [ options ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-report/#_3","text":"\uc774 \uba85\ub839\uc5b4\ub294 \uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130 \ud30c\uc77c\uc758 \ub370\uc774\ud130\ub97c \ubaa8\uc73c\uace0 \uadf8 \uc694\uc57d \uc815\ubcf4\uc640 \ud1b5\uacc4 \uc790\ub8cc\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ud568\uc218\uc790\ub8cc\ub4e4\uc744 \ubcf4\uc5ec\uc8fc\ub294\ub370, --task \uc635\uc158\uc744 \ud1b5\ud574 \uc2e4\ud589\ud55c \ud0dc\uc2a4\ud06c \ub2e8\uc704\uc758 \ud1b5\uacc4\uc790\ub8cc\ub97c \ubcfc \uc218 \uc788\uace0, --diff \uc635\uc158\uc740 \ucd94\uac00 \uc778\uc790\ub85c \ub370\uc774\ud130\ub97c \uc785\ub825\ud558\uba74, \uadf8 \ub370\uc774\ud130\uc640 \uc6d0\ubcf8 \ub370\uc774\ud130 \uac04\uc758 \ucc28\uc774\uc810\uc744 \ubcf4\uc5ec\uc900\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-report/#report","text":"-f FIELD , --output-fields= FIELD : \uacb0\uacfc\ub85c \ubcf4\uc5ec\uc9c0\ub294 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294 total , total-avg , total-min , total-max , self , self-avg , self-min , self-max , size \uadf8\ub9ac\uace0 call \uc774 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'total,self,call' \uc774 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : \uc8fc\uc5b4\uc9c4 \ud0a4\ub97c \uae30\ubc18\uc73c\ub85c \ud568\uc218\ub4e4\uc744 \uc815\ub82c\ud55c\ub2e4. \uc5ec\ub7ec \ud0a4\ub4e4\uc744 \uc801\uc6a9\ud560 \uacbd\uc6b0, \ud0a4\ub4e4\uc744 \uc27c\ud45c(,)\ub85c \ub098\ub204\uc5b4 \ud45c\ud604\ud55c\ub2e4. total (time), total-avg , total-min , total-max , self (time), self-avg , self-min , self-max , size , call , func \ub97c \ud0a4\ub85c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uadf8\ub7ec\ub098 --avg-total \ub610\ub294 --avg-self \uc635\uc158\uc774 \uc0ac\uc6a9\ub41c \uacbd\uc6b0, \ucd1d \uc2dc\uac04(total time) \ub610\ub294 \uc790\uccb4 \uc2dc\uac04(self time\uc5d0)\uc5d0 \uc801\uc6a9\ub418\ub294 avg , min , max \ub97c \ud0a4\ub85c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. --avg-total : \uac01 \ud568\uc218\uc758 \ucd1d \uc2dc\uac04(total time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. --avg-self : \uac01 \ud568\uc218\uc758 \uc790\uccb4 \uc2dc\uac04(self time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. --task : \ud568\uc218\uc758 \ud1b5\uacc4\uc790\ub8cc\uac00 \uc544\ub2cc \ud0dc\uc2a4\ud06c\ub97c \uc694\uc57d\ud574\uc11c \ubcf4\uace0\ud55c\ub2e4. -f \uc635\uc158\uc744 \uc774\uc6a9\ud574 \ucd9c\ub825 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud560 \uc218 \uc788\ub2e4. \uac00\ub2a5\ud55c \uac12\ub4e4\ub85c\ub294: total , self , func \uadf8\ub9ac\uace0 tid \uac00 \uc788\ub2e4. \uc5ec\ub7ec \ud544\ub4dc\ub97c \uac16\ub294 \uacbd\uc6b0 \ucf64\ub9c8\ub85c \uad6c\ubd84\ub41c\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uac10\ucd94\uae30 \uc704\ud55c (\ub2e8\uc77c\ud558\uac8c \uc0ac\uc6a9\ub418\ub294) 'none' \ud2b9\uc218 \ud544\ub4dc\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 'total,self,func,tid' \uac00 \uc0ac\uc6a9\ub41c\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4. --diff= DATA : \uc785\ub825\ud55c \ucd94\uc801 \ub370\uc774\ud130\uc640 \uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130\uc758 \ucc28\uc774\uc810\uc744 \ubcf4\uace0\ud55c\ub2e4. \ub450 \ub370\uc774\ud130\ub294 uftrace \ub85c record \ud55c \ub370\uc774\ud130\uc774\uba70, \ub370\uc774\ud130\ub97c \ub2f4\uc740 \ub514\ub809\ud1a0\ub9ac\ub97c \uc778\uc790\ub85c \ub118\uaca8\uc57c\ud55c\ub2e4. --diff-policy= POLICY : --diff \uc635\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c, \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c diff \uc815\ucc45\uc744 \uc801\uc6a9\ud55c\ub2e4. \uc0ac\uc6a9\uac00\ub2a5\ud55c \uac12\uc73c\ub85c\ub294 \"abs\", \"no-abs\", \"percent\", \"no-percent\", \"compact\" \"full\"\uc774 \uc788\ub2e4. \"abs\"\ub294 \uc808\ub300\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec diff \uacb0\uacfc\ub97c \uc815\ub82c\ud558\uba70 \uc591\uc218\uc640 \uc74c\uc218 \ud56d\ubaa9\uc744 \ud568\uaed8 \ud45c\uc2dc\ud560 \uc218 \uc788\ub2e4. \"no-abs\"\ub294 \uba3c\uc800 \uc591\uc218 \ud56d\ubaa9\uc744 \ud45c\uc2dc\ud55c \ub2e4\uc74c \uc74c\uc218 \ud56d\ubaa9\uc744 \ud45c\uc2dc\ud55c\ub2e4. \"percent\"\ub294 diff\ub97c \ubc31\ubd84\uc728\ub85c \ud45c\uc2dc\ud558\uace0 \"no-percent\"\ub294 \uac12\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. \"full\"\uc740 \uae30\uc900, \uc0c8 \ub370\uc774\ud130, \ucc28\uc774\uc810 \uc774 \uc138 \uc5f4\uc744 \ubaa8\ub450 \ud45c\uc2dc\ud558\ub294 \ubc18\uba74 \"compact\"\ub294 \ucc28\uc774\uc810\ub9cc \ud45c\uc2dc\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 \"abs\", \"compact\", \"no-percent\"\ub2e4. --sort-column= IDX : --diff \ub97c \"full\" \uc815\ucc45\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \ub54c, \ucd1d \uc2dc\uac04, \uc790\uccb4 \uc2dc\uac04, \ud638\ucd9c \ud69f\uc218 \uc774 3\uac1c\uc758 \uc5f4\uc774 \ud45c\uc2dc\ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \uc815\ub82c \ud0a4\ub85c \uc0ac\uc6a9\ud560 \uc5f4 \uc778\ub371\uc2a4\ub97c \uc120\ud0dd\ud55c\ub2e4. \uc778\ub371\uc2a4 0\uc740 --data \uc635\uc158\uc73c\ub85c \uc81c\uacf5\ub418\ub294 \uc6d0\ubcf8 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uac83\uc774\uace0, \uc778\ub371\uc2a4 1\uc740 --diff \uc635\uc158\uc73c\ub85c \uc81c\uacf5\ub418\ub294 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uac83, \uc778\ub371\uc2a4 2\ub294 \ub450 \ub370\uc774\ud130 \uac04\uc758 (\ubc31\ubd84\uc728) \ucc28\uc774\uc5d0 \ub300\ud55c \uac83\uc774\ub2e4. --srcline : \uac00\ub2a5\ud55c \uac01 \ud568\uc218\ub4e4\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4. --format= TYPE : \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ud604\uc7ac\ub294 'normal' \uacfc 'html' \ud615\uc2dd\uc774 \uc9c0\uc6d0\ub41c\ub2e4.","title":"REPORT \uc635\uc158"},{"location":"ko/uftrace-report/#_4","text":"-F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.","title":"\uacf5\ud1b5 \uc635\uc158"},{"location":"ko/uftrace-report/#_5","text":"-H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"\uacf5\ud1b5 \ubd84\uc11d \uc635\uc158"},{"location":"ko/uftrace-report/#_6","text":"\uc774 \uba85\ub839\uc5b4\ub294 \uc544\ub798\uc640 \uac19\uc740 \uc815\ubcf4\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. $ uftrace record abc $ uftrace report Total time Self time Calls Function ========== ========== ========== ==================== 150.829 us 150.829 us 1 __cxa_atexit 27.289 us 1.243 us 1 main 26.046 us 0.939 us 1 a 25.107 us 0.934 us 1 b 24.173 us 1.715 us 1 c 22.458 us 22.458 us 1 getpid $ uftrace report -s call,self Total time Self time Calls Function ========== ========== ========== ==================== 150.829 us 150.829 us 1 __cxa_atexit 22.458 us 22.458 us 1 getpid 24.173 us 1.715 us 1 c 27.289 us 1.243 us 1 main 26.046 us 0.939 us 1 a 25.107 us 0.934 us 1 b $ uftrace report --avg-self Avg self Min self Max self Function ========== ========== ========== ==================== 150.829 us 150.829 us 150.829 us __cxa_atexit 22.458 us 22.458 us 22.458 us getpid 1.715 us 1.715 us 1.715 us c 1.243 us 1.243 us 1.243 us main 0.939 us 0.939 us 0.939 us a 0.934 us 0.934 us 0.934 us b $ uftrace report --task Total time Self time Num funcs TID Task name ========== ========== ========== ====== ================ 22.178 us 22.178 us 7 29955 t-abc $ uftrace record --srcline abc $ uftrace report --srcline Total time Self time Calls Function [Source] ========== ========== ========== ==================== 17.508 us 2.199 us 1 main [./tests/s-abc.c:26] 15.309 us 2.384 us 1 a [./tests/s-abc.c:11] 12.925 us 2.633 us 1 b [./tests/s-abc.c:16] 10.292 us 5.159 us 1 c [./tests/s-abc.c:21] 5.133 us 5.133 us 1 getpid 3.437 us 3.437 us 1 __monstartup 1.959 us 1.959 us 1 __cxa_atexit \ub450 \ub370\uc774\ud130\uc758 \ucc28\uc774\uc810\uc744 \ubcf4\ub824\uba74: $ uftrace record abc $ uftrace report --diff uftrace.data.old # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.263 us -0.070 us +0 a -0.193 us -0.042 us +0 b -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit -0.061 us -0.061 us +0 getpid \uc704\uc758 \uc608\uc81c\ub294 \ucd1d \uc2dc\uac04\uc758 \uc808\ub300\uac12\uc73c\ub85c \uc815\ub82c\ud55c \ub450 \ub370\uc774\ud130\uc758 \ucc28\uc774\uc810\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uc544\ub798\uc758 \uc608\uc81c\ub294 \uc790\uccb4 \uc2dc\uac04\uc758 (\ubd80\ud638\uac00 \uc788\ub294) \uac12\uc744 \uc774\uc6a9\ud574 \uc815\ub82c\ud588\ub2e4. $ uftrace report --diff uftrace.data.old -s self --diff-policy no-abs # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time Self time Calls Function ========== ========== ========== ==================== -0.301 us -0.038 us +0 main -0.193 us -0.042 us +0 b -0.061 us -0.061 us +0 getpid -0.263 us -0.070 us +0 a -0.151 us -0.090 us +0 c -0.131 us -0.131 us +0 __cxa_atexit \"full\" \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uba74 \uc0ac\uc6a9\uc790\ub294 \uc544\ub798\uc640 \uac19\uc740 \uc6d0\uc2dc(raw) \ub370\uc774\ud130\ub97c \ubcfc \uc218 \uc788\ub2e4. \ub610\ud55c (\uc6d0\uc2dc \ub370\uc774\ud130\uc758 \uacbd\uc6b0) \ub2e4\ub978 \uc5f4\ub85c \uc815\ub82c\ub3c4 \uac00\ub2a5\ud558\ub2e4. \ubc11\uc758 \uc608\uc81c\ub294 base \ub370\uc774\ud130\uc758 \ucd1d \uc2dc\uac04\uc744 \uae30\uc900\uc73c\ub85c \uacb0\uacfc\ub97c \uc815\ub82c\ud55c\ub2e4. $ uftrace report --diff uftrace.data.old --sort-column 0 --diff-policy full,percent # # uftrace diff # [0] base: uftrace.data (from uftrace record abc ) # [1] diff: uftrace.data.old (from uftrace record abc ) # Total time (diff) Self time (diff) Nr. called (diff) Function ================================ ================================ ================================ ==================== 2.812 us 2.511 us -10.70% 0.403 us 0.365 us -9.43% 1 1 +0 main 2.409 us 2.146 us -10.92% 0.342 us 0.272 us -20.47% 1 1 +0 a 2.067 us 1.874 us -9.34% 0.410 us 0.368 us -10.24% 1 1 +0 b 1.657 us 1.506 us -9.11% 0.890 us 0.800 us -10.11% 1 1 +0 c 0.920 us 0.789 us -14.24% 0.920 us 0.789 us -14.24% 1 1 +0 __cxa_atexit 0.767 us 0.706 us -7.95% 0.767 us 0.706 us -7.95% 1 1 +0 getpid","title":"\uc608\uc81c"},{"location":"ko/uftrace-report/#fields","text":"uftrace \uc0ac\uc6a9\uc790\ub294 report \uacb0\uacfc\ub97c \uba87\uba87\uc758 \ud544\ub4dc\ub85c \uc6d0\ud558\ub294 \ubc29\uc2dd\ub300\ub85c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c total, self\uc640 call \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \ub2e4\ub978 \ud544\ub4dc\ub4e4\ub3c4 \ub2e4\uc74c\uacfc \uac19\uc774 \uc784\uc758\uc758 \uc21c\uc11c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4. $ uftrace report -f total,total-max,self-min,call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 46.806 us 46.806 us 3.290 us 1 main 43.516 us 43.516 us 7.483 us 1 foo 32.010 us 20.847 us 9.684 us 2 lib_c \uac01 \ud544\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc815\ub82c \ud0a4\ub85c\ub3c4 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. $ uftrace report -f total,total-max,self-min,call -s call Total time Total max Self min Calls Function ========== ========== ========== ========== ==================== 97.234 us 36.033 us 1.073 us 3 lib_a 50.552 us 26.690 us 2.828 us 2 lib_b 32.010 us 20.847 us 9.684 us 2 lib_c 43.516 us 43.516 us 7.483 us 1 foo 46.806 us 46.806 us 3.290 us 1 main $ uftrace report -f total,total-max,self-min,total-min,call -s self-min,total-min Total time Total max Self min Total min Calls Function ========== ========== ========== ========== ========== ==================== 32.010 us 20.847 us 9.684 us 11.163 us 2 lib_c 43.516 us 43.516 us 7.483 us 43.516 us 1 foo 46.806 us 46.806 us 3.290 us 46.806 us 1 main 50.552 us 26.690 us 2.828 us 23.862 us 2 lib_b 97.234 us 36.033 us 1.073 us 27.763 us 3 lib_a \uac01 \ud544\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc774 --diff \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. $ uftrace report --diff uftrace.data.old -f total,total-min # # uftrace diff # [0] base: uftrace.data (from uftrace record test/t-lib) # [1] diff: uftrace.data.old (from uftrace record test/t-lib) # Total time Total min Function =========== =========== ==================== +34.560 us +9.884 us lib_a +18.086 us +8.517 us lib_b +16.887 us +16.887 us main +15.479 us +15.479 us foo +10.600 us +3.127 us lib_c $ uftrace report --diff uftrace.data.old -f total,total-min,self-avg --diff-policy full # # uftrace diff # [0] base: uftrace.data (from uftrace record --srcline test/t-lib) # [1] diff: uftrace.data.old (from uftrace record --srcline test/t-lib) # Total time (diff) Total min (diff) Self avg (diff) Function =================================== =================================== =================================== ==================== 14.616 us 13.796 us +0.820 us 4.146 us 3.823 us +0.323 us 0.443 us 0.459 us -0.016 us lib_a 6.529 us 5.957 us +0.572 us 6.529 us 5.957 us +0.572 us 0.436 us 0.356 us +0.080 us main 7.700 us 7.173 us +0.527 us 3.677 us 3.426 us +0.251 us 0.365 us 0.363 us +0.002 us lib_b 6.093 us 5.601 us +0.492 us 6.093 us 5.601 us +0.492 us 0.741 us 0.476 us +0.265 us foo 5.638 us 5.208 us +0.430 us 2.346 us 2.187 us +0.159 us 1.646 us 1.510 us +0.136 us lib_c \uac01 \ud544\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\uac00 \uc788\ub2e4. total: \ud568\uc218\uc758 \uc804\uccb4 \uc2e4\ud589 \uc2dc\uac04 total-avg: \uac01 \ud568\uc218\ub4e4\uc758 \ucd1d\ud569 \uc2dc\uac04\uc758 \ud3c9\uade0\uac12. total-min: \uac01 \ud568\uc218\ub4e4\uc758 \ucd1d\ud569 \uc2dc\uac04\uc758 \ucd5c\uc18c\uac12. total-max: \uac01 \ud568\uc218\ub4e4\uc758 \ucd1d\ud569 \uc2dc\uac04\uc758 \ucd5c\ub300\uac12. self: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04. self-avg: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04\uc758 \ud3c9\uade0\uac12. self-min: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04\uc758 \ucd5c\uc18c\uac12. self-max: \uac01 \ud568\uc218\ubcc4 \uc18c\uc694 \uc2dc\uac04\uc758 \ucd5c\ub300\uac12. call: \uac01 \ud568\uc218\ub4e4\uc774 \ud638\ucd9c\ub41c \ud69f\uc218. \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'total,self,call'\uc774\ub2e4. \ub9cc\uc57d \uc8fc\uc5b4\uc9c4 \ud544\ub4dc\uc758 \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ub41c\ub2e4\uba74, \uadf8 \ud544\ub4dc\ub294 \uae30\ubcf8 \ud544\ub4dc\uac12\uc5d0 \ucd94\uac00\ub420 \uac83\uc774\ub2e4. \uc989, \"-f +total-avg\" \ub294 \"-f total,self,call,total-avg\" \uc640 \uac19\uc740 \uac83\uc774\ub2e4. \ub610\ud55c 'none'\uc774\ub77c\ub294 \ud2b9\ubcc4\ud55c \ud544\ub4dc\ub3c4 \ubc1b\uc744 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ud544\ub4dc \ucd9c\ub825\uc744 \ud558\uc9c0 \uc54a\uace0 \uc624\uc9c1 \ud568\uc218 \uc2e4\ud589 \uacb0\uacfc\ub9cc\uc744 \ubcf4\uc5ec\uc900\ub2e4.","title":"FIELDS"},{"location":"ko/uftrace-report/#task-fields","text":"total: \uac01 \uc791\uc5c5\uc758 \ucd1d \uc18c\uc694 \uc2dc\uac04. self: \uac01 \uc791\uc5c5\ubcc4 \uc18c\uc694 \uc2dc\uac04. func: \uc791\uc5c5 \ub0b4\uc758 \ud568\uc218 \uac2f\uc218. tid: \uc791\uc5c5 ID. \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uc815\ub41c \ud544\ub4dc\uac12\uc740 'total,self,func,tid'\uc774\ub2e4. \uc0c1\uc138\ud55c \uc124\uba85\uc740 FIELDS \ub97c \ucc38\uace0\ud55c\ub2e4.","title":"TASK FIELDS"},{"location":"ko/uftrace-report/#_7","text":"uftrace (1), uftrace-record (1), uftrace-replay (1), uftrace-tui (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-report/#_8","text":"\uae40\uc11c\uc601 gegiraffe@gmail.com , \uac15\ubbfc\ucca0 tegongkang@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace-script/","text":"% UFTRACE-SCRIPT(1) Uftrace User Manuals % Honggyu Kim honggyu.kp@gmail.com , Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace-script - \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ub300\uc0c1\uc73c\ub85c \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud55c\ub2e4. \uc0ac\uc6a9\ubc95 uftrace script (-S|--script)","title":"Uftrace script"},{"location":"ko/uftrace-script/#_1","text":"uftrace-script - \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c \ub300\uc0c1\uc73c\ub85c \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud55c\ub2e4.","title":"\uc774\ub984"},{"location":"ko/uftrace-script/#_2","text":"uftrace script (-S|--script)","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-tui/","text":"% UFTRACE-TUI(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Jun, 2018 NAME uftrace-tui - (Interactive) Text-based User Interface \uc0ac\uc6a9\ubc95 uftrace tui [ options ] \uc124\uba85 \uc774 \uba85\ub839\uc5b4\ub294 graph, report \ubc0f info \uba85\ub839\uc5b4\uc640 \uac19\uc740 \ub3d9\uc77c\ud55c \ucd9c\ub825\uc744 \ud45c\uc2dc\ud560 \uc218 \uc788\ub294 \ud130\ubbf8\ub110\uc5d0\uc11c \ub300\ud654\ucc3d\uc744 \uc2dc\uc791\ud55c\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ud0a4\ub97c \uc0ac\uc6a9\ud574\uc11c \uacb0\uacfc\ub97c \uc27d\uac8c \ud0d0\uc0c9\ud560 \uc218 \uc788\ub2e4. \ucd94\uac00\uc801\uc778 \uc635\uc158\ub4e4\uc740 \ucd08\uae30 \ub370\uc774\ud130 \ub85c\ub529\uc744 \uc81c\ud55c\ud558\ub294\ub370 \uc0ac\uc6a9\ub41c\ub2e4. TUI \uc635\uc158 -f FIELD , --output-fields= FIELD : \ucd9c\ub825 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790 \uc9c0\uc815\uc73c\ub85c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \uae30\ubcf8\uc801\uc73c\ub85c graph \ud544\ub4dc\ub97c \ub098\ud0c0\ub0b8\ub2e4. \uc124\uc815 \uac00\ub2a5\ud55c \uac12\uc740 total, self, addr \uc774\uace0, \uae30\ubcf8 \uc124\uc815\uac12\uc740 total \uc774\ub2e4. \uadf8\ub7f0\ub370 \uc774 \uc635\uc158\uc774 --report \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4\uba74, \uc774 \uc635\uc158\uc740 report \ud544\ub4dc\ub97c \ub098\ud0c0\ub0b8\ub2e4. \uc124\uc815 \uac00\ub2a5\ud55c \uac12\uc740 total, total-avg, total-min, total-max, self, self-avg, self-min, self-max, call, size \uc774\uace0, \uae30\ubcf8 \uc124\uc815\uac12\uc740 'total,self,call'\uc774\ub2e4. \uc27c\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ud544\ub4dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\uace0, \uc8fc\uc5b4\uc9c4 \ud544\ub4dc \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ud560 \uacbd\uc6b0, \uae30\ubcf8 \uc124\uc815\uac12\uc5d0 \ucd94\uac00\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \ud544\ub4dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. 'none' \uacfc \uac19\uc740 \ud2b9\uc218 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc228\uae38 \uc218 \uc788\ub2e4. \ud544\ub4dc\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-graph (1) \ub610\ub294 uftrace-report (1)\ub97c \ucc38\uace0\ud55c\ub2e4. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : \uc8fc\uc5b4\uc9c4 \ud0a4\ub97c \uae30\ubc18\uc73c\ub85c \ud568\uc218\ub4e4\uc744 \uc815\ub82c\ud55c\ub2e4. \uc5ec\ub7ec \ud0a4\ub4e4\uc744 \uc801\uc6a9\ud560 \uacbd\uc6b0, \ud0a4\ub4e4\uc744 \uc27c\ud45c(,)\ub85c \ub098\ub204\uc5b4 \ud45c\ud604\ud55c\ub2e4. total (time), total-avg, total-min, total-max, self (time), self-avg, self-min, self-max, call, func, size\ub97c \ud0a4\ub85c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ubc18\ub4dc\uc2dc --report \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4. \uacf5\ud1b5 \uc635\uc158 -F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. \uacf5\ud1b5 \ubd84\uc11d \uc635\uc158 -H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. OUTLINE \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 \uc804\uccb4\uc801\uc73c\ub85c \ud558\ub098\uc758 \uc138\uc158\ub9cc \uc788\ub2e4\uba74 \uadf8\ub798\ud504 \ubaa8\ub4dc\ub85c \uc2dc\uc791\ud574\uc11c \uc138\uc158\uc758 \uc804\uccb4 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc774\ud6c4\uc5d0 \uc0ac\uc6a9\uc790 \ud0a4\ub4e4\uc744 \uc0ac\uc6a9\ud574\uc11c \ub2e4\ub978 \ubaa8\ub4dc\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\uc73c\uba70 'h' \ud0a4\ub97c \uc0ac\uc6a9\ud574 \ub3c4\uc6c0\ub9d0\uc744 \ud655\uc778\ud574 \ubcfc \uc218 \uc788\ub2e4. \ud604\uc7ac \ub77c\uc778\uc740 '>' \uc640 \ud568\uaed8 \ubc18\uc804\ub41c \uc0c9\uc0c1\uc73c\ub85c \ubcf4\uc5ec\uc9c0\uba70 \ud654\uc0b4\ud45c \ud0a4\ub97c \uc0ac\uc6a9\ud574 \ub2e4\ub978 \uc704\uce58\ub85c \uc774\ub3d9\ud560 \uc218 \uc788\ub2e4. TOTAL TIME : FUNCTION > 7.548 us : (1) t-abc 1.811 us : \u251c\u2500(1) __monstartup : \u2502 1.266 us : \u251c\u2500(1) __cxa_atexit : \u2502 4.471 us : \u2514\u2500(1) main 3.743 us : (1) a 3.194 us : (1) b 2.454 us : (1) c 1.000 us : (1) getpid uftrace graph: session 2a22812ebbd06f40 (/tmp/uftrace/tests/t-abc) \uc138\uc158\uc774 \ub450\uac1c \uc774\uc0c1 \uc788\ub2e4\uba74, \ucc98\uc74c\uc5d0 \uc138\uc158 \uc120\ud0dd \ubaa8\ub4dc\ub85c \uc2dc\uc791\ud558\uac8c \ub41c\ub2e4. \uadf8\ub798\ud504 \ubaa8\ub4dc\uc758 \uc815\ubcf4\ub294 \uac01 \uc138\uc158\uc744 \ubd84\ub9ac\ud574\uc11c \ubcf4\uc5ec\uc9c0\uc9c0\ub9cc \ub9ac\ud3ec\ud2b8 \ubaa8\ub4dc\ub294 \uc804\uccb4 \uc138\uc158\uc758 \uacb0\uacfc\ub97c \ud1b5\ud569\ud574\uc11c \ubcf4\uc5ec\uc900\ub2e4. Key uftrace command > G call Graph for session #1: t-forkexec call Graph for session #2: t-abc R Report functions I uftrace Info h Help message q quit session a27acff69aec5c9c: exe image: /tmp/uftrace/tests/t-forkexec \uc0ac\uc6a9\uc790 \ud0a4 TUI \ucc3d\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \ud0a4\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c: Up , Down : \ucee4\uc11c\ub97c \uc704/\uc544\ub798\ub85c \uc6c0\uc9c1\uc784 PageUp , PageDown : \ud398\uc774\uc9c0\ub97c \uc704/\uc544\ub798\ub85c \uc6c0\uc9c1\uc784 Home , End : \uccab\ubc88\uc9f8/\ub9c8\uc9c0\ub9c9 \ud56d\ubaa9\uc73c\ub85c \uc774\ub3d9 Enter : \uadf8\ub798\ud504 \uc811\uae30/\ud3b4\uae30 \ub610\ub294 \uc138\uc158 \uc120\ud0dd G : \ud604\uc7ac \uc138\uc158\uc758 \uc804\uccb4 \uadf8\ub798\ud504 \ucc3d\uc73c\ub85c \uc804\ud658 g : \ud604\uc7ac \ud568\uc218\uc758 \ubc31\ud2b8\ub808\uc774\uc2a4\uc640 \ubd80\ubd84 \ud638\ucd9c \uadf8\ub798\ud504 \ucc3d\uc73c\ub85c \uc804\ud658 R : uftrace report \ucc3d\uc73c\ub85c \uc804\ud658 r : \ud604\uc7ac \ud568\uc218\ub97c \uae30\uc900\uc73c\ub85c uftrace report \ucc3d\uc73c\ub85c \uc804\ud658 s : \ub2e4\uc74c \uc5f4\uc758 \ud56d\ubaa9\uc73c\ub85c \uc815\ub82c (report \ubaa8\ub4dc\uc5d0\uc11c) I : uftrace info \ucc3d\uc73c\ub85c \uc804\ud658 S : \uc138\uc158 \ubaa9\ub85d \ucc3d\uc73c\ub85c \uc804\ud658 O : \ud604\uc7ac \ud568\uc218\uc5d0 \ub300\ud55c \ud3b8\uc9d1\uae30 \uc5f4\uae30 c / e : \uc9c1\uc811 \uc790\uc2dd \uadf8\ub798\ud504 \ub178\ub4dc \ucd95\uc18c/\ud655\uc7a5 C / E : \ubaa8\ub4e0 \uc790\uc2dd\ub4e4\uc758 \uadf8\ub798\ud504 \ub178\ub4dc \ucd95\uc18c/\ud655\uc7a5 n / p : \uac19\uc740 \ub192\uc774\uc758 \ub2e4\uc74c/\uc774\uc804 \ud56d\ubaa9\uc73c\ub85c \uc774\ub3d9 (\uadf8\ub798\ud504 \ubaa8\ub4dc\uc5d0\uc11c) u : \ubd80\ubaa8 \ub178\ub4dc\ub85c \uc774\ub3d9 (\uadf8\ub798\ud504 \ubaa8\ub4dc\uc5d0\uc11c) l : \uac00\uc7a5 \uae34 \uc2e4\ud589 \uc2dc\uac04\uc744 \uac16\ub294 \uc790\uc2dd \ub178\ub4dc\ub85c \uc774\ub3d9 (\uadf8\ub798\ud504 \ubaa8\ub4dc\uc5d0\uc11c) j / k : \ucee4\uc11c\ub97c \uc704/\uc544\ub798\ub85c \uc6c0\uc9c1\uc784 (vi \uae30\ub2a5\uacfc \uac19\uc774) z : \ud604\uc7ac \uc704\uce58\ub97c \ud654\uba74 \uc911\uc559\uc5d0 \uc815\ub82c / : \ud0d0\uc0c9 \uc2dc\uc791 < / P : \uc774\uc804 \uc77c\uce58 \uac80\uc0c9 > / N : \ub2e4\uc74c \uc77c\uce58 \uac80\uc0c9 v : \ub514\ubc84\uadf8 \uc815\ubcf4 \ud45c\uc2dc f : graph \ud639\uc740 report \ubaa8\ub4dc\uc5d0\uc11c \ud544\ub4dc \ub9de\ucda4 \uc124\uc815 h / ? : \ub3c4\uc6c0\ub9d0 \ucc3d \ud45c\uc2dc q : \uc885\ub8cc \ud568\uaed8 \ubcf4\uae30 uftrace (1), uftrace-graph (1), uftrace-report (1), uftrace-info (1), uftrace-replay (1) \ubc88\uc5ed\uc790 \uc804\ud558\uc740 myjhe0608@gmail.com , \ubbfc\uc9c0\uc218 kuongee@gmail.com","title":"Uftrace tui"},{"location":"ko/uftrace-tui/#name","text":"uftrace-tui - (Interactive) Text-based User Interface","title":"NAME"},{"location":"ko/uftrace-tui/#_1","text":"uftrace tui [ options ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace-tui/#_2","text":"\uc774 \uba85\ub839\uc5b4\ub294 graph, report \ubc0f info \uba85\ub839\uc5b4\uc640 \uac19\uc740 \ub3d9\uc77c\ud55c \ucd9c\ub825\uc744 \ud45c\uc2dc\ud560 \uc218 \uc788\ub294 \ud130\ubbf8\ub110\uc5d0\uc11c \ub300\ud654\ucc3d\uc744 \uc2dc\uc791\ud55c\ub2e4. \uc0ac\uc6a9\uc790\ub294 \ud0a4\ub97c \uc0ac\uc6a9\ud574\uc11c \uacb0\uacfc\ub97c \uc27d\uac8c \ud0d0\uc0c9\ud560 \uc218 \uc788\ub2e4. \ucd94\uac00\uc801\uc778 \uc635\uc158\ub4e4\uc740 \ucd08\uae30 \ub370\uc774\ud130 \ub85c\ub529\uc744 \uc81c\ud55c\ud558\ub294\ub370 \uc0ac\uc6a9\ub41c\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace-tui/#tui","text":"-f FIELD , --output-fields= FIELD : \ucd9c\ub825 \ud544\ub4dc\ub97c \uc0ac\uc6a9\uc790 \uc9c0\uc815\uc73c\ub85c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \uae30\ubcf8\uc801\uc73c\ub85c graph \ud544\ub4dc\ub97c \ub098\ud0c0\ub0b8\ub2e4. \uc124\uc815 \uac00\ub2a5\ud55c \uac12\uc740 total, self, addr \uc774\uace0, \uae30\ubcf8 \uc124\uc815\uac12\uc740 total \uc774\ub2e4. \uadf8\ub7f0\ub370 \uc774 \uc635\uc158\uc774 --report \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4\uba74, \uc774 \uc635\uc158\uc740 report \ud544\ub4dc\ub97c \ub098\ud0c0\ub0b8\ub2e4. \uc124\uc815 \uac00\ub2a5\ud55c \uac12\uc740 total, total-avg, total-min, total-max, self, self-avg, self-min, self-max, call, size \uc774\uace0, \uae30\ubcf8 \uc124\uc815\uac12\uc740 'total,self,call'\uc774\ub2e4. \uc27c\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec \ud544\ub4dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\uace0, \uc8fc\uc5b4\uc9c4 \ud544\ub4dc \uc774\ub984\uc774 \"+\"\ub85c \uc2dc\uc791\ud560 \uacbd\uc6b0, \uae30\ubcf8 \uc124\uc815\uac12\uc5d0 \ucd94\uac00\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \ud544\ub4dc\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub2e4. 'none' \uacfc \uac19\uc740 \ud2b9\uc218 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc228\uae38 \uc218 \uc788\ub2e4. \ud544\ub4dc\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-graph (1) \ub610\ub294 uftrace-report (1)\ub97c \ucc38\uace0\ud55c\ub2e4. -s KEYS [, KEYS ,...], --sort= KEYS [, KEYS ,...] : \uc8fc\uc5b4\uc9c4 \ud0a4\ub97c \uae30\ubc18\uc73c\ub85c \ud568\uc218\ub4e4\uc744 \uc815\ub82c\ud55c\ub2e4. \uc5ec\ub7ec \ud0a4\ub4e4\uc744 \uc801\uc6a9\ud560 \uacbd\uc6b0, \ud0a4\ub4e4\uc744 \uc27c\ud45c(,)\ub85c \ub098\ub204\uc5b4 \ud45c\ud604\ud55c\ub2e4. total (time), total-avg, total-min, total-max, self (time), self-avg, self-min, self-max, call, func, size\ub97c \ud0a4\ub85c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ubc18\ub4dc\uc2dc --report \uc635\uc158\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4.","title":"TUI \uc635\uc158"},{"location":"ko/uftrace-tui/#_3","text":"-F FUNC , --filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4(\uadf8\ub9ac\uace0 \uadf8 \ub0b4\ubd80\uc758 \ud568\uc218\ub4e4)\ub9cc \ucd9c\ub825\ud558\ub3c4\ub85d \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -N FUNC , --notrace= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\ub4e4 (\ub610\ub294 \uadf8 \uc544\ub798 \ud568\uc218\ub4e4)\uc744 \ucd9c\ub825\uc5d0\uc11c \uc81c\uc678\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uc635\uc158\uc774\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -C FUNC , --caller-filter= FUNC : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud544\ud130\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -T TRG , --trigger= TRG : \uc120\ud0dd\ub41c \ud568\uc218\uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. \ud2b8\ub9ac\uac70\uc5d0 \ub300\ud55c \uc124\uba85\uc740 uftrace-replay (1) \ub97c \ucc38\uace0\ud55c\ub2e4. -D DEPTH , --depth DEPTH : \ud568\uc218\uac00 \uc911\ucca9\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uae4a\uc774\ub97c \uc124\uc815\ud55c\ub2e4. (\uc774\ub97c \ub118\uc5b4\uc11c\ub294 \uc0c1\uc138\ud55c \ud568\uc218 \uc2e4\ud589\uacfc\uc815\uc740 \ubb34\uc2dc\ud55c\ub2e4.) -t TIME , --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -Z SIZE , --size-filter= SIZE : SIZE \ubc14\uc774\ud2b8\ubcf4\ub2e4 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. \ub9cc\uc57d \uc5b4\ub5a4 \ud568\uc218\uac00 \uba85\uc2dc\uc801\uc73c\ub85c 'trace' \ud2b8\ub9ac\uac70\uac00 \uc801\uc6a9\ub41c \uacbd\uc6b0, \uadf8 \ud568\uc218\ub294 \ud568\uc218 \ud06c\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ud56d\uc0c1 \ucd9c\ub825\ub41c\ub2e4. -L LOCATION , --loc-filter= LOCATION : \uc0ac\uc6a9\ud560 \ud544\ud130\uc758 \uacbd\ub85c\ub97c \uc9c0\uc815\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 1\ubc88\uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc740 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-event : \uc774\ubca4\ud2b8\ub4e4\uc744 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched \uc635\uc158\uc744 \ub0b4\ud3ec\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --match= TYPE : \ud0c0\uc785(TYPE)\uc73c\ub85c \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uac00\ub2a5\ud55c \ud615\ud0dc\ub294 regex \uc640 glob \uc774\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 regex \uc774\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud1a0\ub9ac\uc758 .sym \ud30c\uc77c\uc5d0\uc11c \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\ub97c \uc77d\ub294\ub2e4. \uc774\ub294 \uc2ec\ubcfc(symbol) \ub370\uc774\ud130\uac00 \uc81c\uac70\ub41c \ubc14\uc774\ub108\ub9ac \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294\ub370 \uc720\uc6a9\ud558\ub2e4. \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc774\ub984\uc740 \uc800\uc7a5\ud560 \ub54c\uc640 \uc0ac\uc6a9\ud560 \ub54c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4.","title":"\uacf5\ud1b5 \uc635\uc158"},{"location":"ko/uftrace-tui/#_4","text":"-H FUNC , --hide= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\ub4e4\uc744 \ucd9c\ub825 \ub300\uc0c1\uc5d0\uc11c \uc81c\uc678\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 \uc120\ud0dd\ub41c \ud568\uc218\uc758 \uc790\uc2dd \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba70 \ub2e8\uc9c0 \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub4e4\ub9cc \uc228\uae30\ub294 \uae30\ub2a5\uc744 \ud558\uac8c \ub41c\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 (\uc0ac\uc6a9\uc790) \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. uftrace report --task \ub610\ub294 uftrace info \ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130 \ud30c\uc77c \ub0b4\uc758 \ud0dc\uc2a4\ud06c \ubaa9\ub85d\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774 \uc635\uc158\uc740 \ud55c\ubc88 \uc774\uc0c1 \uc4f0\uc77c \uc218 \uc788\ub2e4. --demangle= TYPE : \ud544\ud130, \ud2b8\ub9ac\uac70, \ud568\uc218\uc778\uc790\uc640 (\ub610\ub294) \ubc18\ud658 \uac12\uc744 \ub514\ub9f9\uae00(demangle)\ub41c C++ \uc2ec\ubcfc \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4. \"full\", \"simple\", \"no\" \uac12\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uae30\ubcf8 \uc124\uc815\uc740 \"simple\"\uc774\uba70, \ud15c\ud50c\ub9bf \ud30c\ub77c\ubbf8\ud130\uc640 \ud568\uc218 \uc778\uc790\ub97c \ubb34\uc2dc\ud55c\ub2e4. -r RANGE , --time-range= RANGE : \uc2dc\uac04 \ubc94\uc704 RANGE \ub0b4\uc5d0 \uc2e4\ud589\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. RANGE \ub294 \\<\uc2dc\uc791>~\\<\ub05d> (\"~\"\ub85c \uad6c\ubd84) \uc774\uace0 \\<\uc2dc\uc791>\uacfc \\<\ub05d> \uc911 \ud558\ub098\ub294 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4. \\<\uc2dc\uc791>\uacfc \\<\ub05d>\uc740 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 '100us'\uc640 \uac19\uc740 \\<\uc2dc\uac04\ub2e8\uc704>\uac00 \uc788\ub294 \uacbd\uacfc\uc2dc\uac04\uc774\ub2e4. uftrace replay (1) \uc5d0\uc11c -f time \ub610\ub294 -f elapsed \ub97c \uc774\uc6a9\ud574 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ub610\ub294 \uacbd\uacfc\uc2dc\uac04\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.","title":"\uacf5\ud1b5 \ubd84\uc11d \uc635\uc158"},{"location":"ko/uftrace-tui/#outline","text":"\uc77c\ubc18\uc801\uc778 \uacbd\uc6b0 \uc804\uccb4\uc801\uc73c\ub85c \ud558\ub098\uc758 \uc138\uc158\ub9cc \uc788\ub2e4\uba74 \uadf8\ub798\ud504 \ubaa8\ub4dc\ub85c \uc2dc\uc791\ud574\uc11c \uc138\uc158\uc758 \uc804\uccb4 \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc774\ud6c4\uc5d0 \uc0ac\uc6a9\uc790 \ud0a4\ub4e4\uc744 \uc0ac\uc6a9\ud574\uc11c \ub2e4\ub978 \ubaa8\ub4dc\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\uc73c\uba70 'h' \ud0a4\ub97c \uc0ac\uc6a9\ud574 \ub3c4\uc6c0\ub9d0\uc744 \ud655\uc778\ud574 \ubcfc \uc218 \uc788\ub2e4. \ud604\uc7ac \ub77c\uc778\uc740 '>' \uc640 \ud568\uaed8 \ubc18\uc804\ub41c \uc0c9\uc0c1\uc73c\ub85c \ubcf4\uc5ec\uc9c0\uba70 \ud654\uc0b4\ud45c \ud0a4\ub97c \uc0ac\uc6a9\ud574 \ub2e4\ub978 \uc704\uce58\ub85c \uc774\ub3d9\ud560 \uc218 \uc788\ub2e4. TOTAL TIME : FUNCTION > 7.548 us : (1) t-abc 1.811 us : \u251c\u2500(1) __monstartup : \u2502 1.266 us : \u251c\u2500(1) __cxa_atexit : \u2502 4.471 us : \u2514\u2500(1) main 3.743 us : (1) a 3.194 us : (1) b 2.454 us : (1) c 1.000 us : (1) getpid uftrace graph: session 2a22812ebbd06f40 (/tmp/uftrace/tests/t-abc) \uc138\uc158\uc774 \ub450\uac1c \uc774\uc0c1 \uc788\ub2e4\uba74, \ucc98\uc74c\uc5d0 \uc138\uc158 \uc120\ud0dd \ubaa8\ub4dc\ub85c \uc2dc\uc791\ud558\uac8c \ub41c\ub2e4. \uadf8\ub798\ud504 \ubaa8\ub4dc\uc758 \uc815\ubcf4\ub294 \uac01 \uc138\uc158\uc744 \ubd84\ub9ac\ud574\uc11c \ubcf4\uc5ec\uc9c0\uc9c0\ub9cc \ub9ac\ud3ec\ud2b8 \ubaa8\ub4dc\ub294 \uc804\uccb4 \uc138\uc158\uc758 \uacb0\uacfc\ub97c \ud1b5\ud569\ud574\uc11c \ubcf4\uc5ec\uc900\ub2e4. Key uftrace command > G call Graph for session #1: t-forkexec call Graph for session #2: t-abc R Report functions I uftrace Info h Help message q quit session a27acff69aec5c9c: exe image: /tmp/uftrace/tests/t-forkexec","title":"OUTLINE"},{"location":"ko/uftrace-tui/#_5","text":"TUI \ucc3d\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \ud0a4\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c: Up , Down : \ucee4\uc11c\ub97c \uc704/\uc544\ub798\ub85c \uc6c0\uc9c1\uc784 PageUp , PageDown : \ud398\uc774\uc9c0\ub97c \uc704/\uc544\ub798\ub85c \uc6c0\uc9c1\uc784 Home , End : \uccab\ubc88\uc9f8/\ub9c8\uc9c0\ub9c9 \ud56d\ubaa9\uc73c\ub85c \uc774\ub3d9 Enter : \uadf8\ub798\ud504 \uc811\uae30/\ud3b4\uae30 \ub610\ub294 \uc138\uc158 \uc120\ud0dd G : \ud604\uc7ac \uc138\uc158\uc758 \uc804\uccb4 \uadf8\ub798\ud504 \ucc3d\uc73c\ub85c \uc804\ud658 g : \ud604\uc7ac \ud568\uc218\uc758 \ubc31\ud2b8\ub808\uc774\uc2a4\uc640 \ubd80\ubd84 \ud638\ucd9c \uadf8\ub798\ud504 \ucc3d\uc73c\ub85c \uc804\ud658 R : uftrace report \ucc3d\uc73c\ub85c \uc804\ud658 r : \ud604\uc7ac \ud568\uc218\ub97c \uae30\uc900\uc73c\ub85c uftrace report \ucc3d\uc73c\ub85c \uc804\ud658 s : \ub2e4\uc74c \uc5f4\uc758 \ud56d\ubaa9\uc73c\ub85c \uc815\ub82c (report \ubaa8\ub4dc\uc5d0\uc11c) I : uftrace info \ucc3d\uc73c\ub85c \uc804\ud658 S : \uc138\uc158 \ubaa9\ub85d \ucc3d\uc73c\ub85c \uc804\ud658 O : \ud604\uc7ac \ud568\uc218\uc5d0 \ub300\ud55c \ud3b8\uc9d1\uae30 \uc5f4\uae30 c / e : \uc9c1\uc811 \uc790\uc2dd \uadf8\ub798\ud504 \ub178\ub4dc \ucd95\uc18c/\ud655\uc7a5 C / E : \ubaa8\ub4e0 \uc790\uc2dd\ub4e4\uc758 \uadf8\ub798\ud504 \ub178\ub4dc \ucd95\uc18c/\ud655\uc7a5 n / p : \uac19\uc740 \ub192\uc774\uc758 \ub2e4\uc74c/\uc774\uc804 \ud56d\ubaa9\uc73c\ub85c \uc774\ub3d9 (\uadf8\ub798\ud504 \ubaa8\ub4dc\uc5d0\uc11c) u : \ubd80\ubaa8 \ub178\ub4dc\ub85c \uc774\ub3d9 (\uadf8\ub798\ud504 \ubaa8\ub4dc\uc5d0\uc11c) l : \uac00\uc7a5 \uae34 \uc2e4\ud589 \uc2dc\uac04\uc744 \uac16\ub294 \uc790\uc2dd \ub178\ub4dc\ub85c \uc774\ub3d9 (\uadf8\ub798\ud504 \ubaa8\ub4dc\uc5d0\uc11c) j / k : \ucee4\uc11c\ub97c \uc704/\uc544\ub798\ub85c \uc6c0\uc9c1\uc784 (vi \uae30\ub2a5\uacfc \uac19\uc774) z : \ud604\uc7ac \uc704\uce58\ub97c \ud654\uba74 \uc911\uc559\uc5d0 \uc815\ub82c / : \ud0d0\uc0c9 \uc2dc\uc791 < / P : \uc774\uc804 \uc77c\uce58 \uac80\uc0c9 > / N : \ub2e4\uc74c \uc77c\uce58 \uac80\uc0c9 v : \ub514\ubc84\uadf8 \uc815\ubcf4 \ud45c\uc2dc f : graph \ud639\uc740 report \ubaa8\ub4dc\uc5d0\uc11c \ud544\ub4dc \ub9de\ucda4 \uc124\uc815 h / ? : \ub3c4\uc6c0\ub9d0 \ucc3d \ud45c\uc2dc q : \uc885\ub8cc","title":"\uc0ac\uc6a9\uc790 \ud0a4"},{"location":"ko/uftrace-tui/#_6","text":"uftrace (1), uftrace-graph (1), uftrace-report (1), uftrace-info (1), uftrace-replay (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace-tui/#_7","text":"\uc804\ud558\uc740 myjhe0608@gmail.com , \ubbfc\uc9c0\uc218 kuongee@gmail.com","title":"\ubc88\uc5ed\uc790"},{"location":"ko/uftrace/","text":"% UFTRACE(1) Uftrace User Manuals % Namhyung Kim namhyung@gmail.com % Sep, 2018 \uc774\ub984 uftrace - \ud504\ub85c\uadf8\ub7a8 \ud568\uc218 \ud638\ucd9c \ubd84\uc11d \ub3c4\uad6c \uc0ac\uc6a9\ubc95 uftrace [ record | replay | live | report | info | dump | recv | graph | script | tui ] [ options ] COMMAND [ command-options ] \uc124\uba85 uftrace \ub294 COMMAND \uc5d0 \uc8fc\uc5b4\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8\uc758 \uc2e4\ud589\uc744 \ud568\uc218 \ub2e8\uc704\ub85c \ucd94\uc801(trace)\ud558\ub294 \ubd84\uc11d \ub3c4\uad6c\uc774\ub2e4. COMMAND \uc5d0 \uc8fc\uc5b4\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8\uc740 -pg \ub610\ub294 -finstrument-function \ub85c \ucef4\ud30c\uc77c\ub41c C \ub610\ub294 C++ \ud504\ub85c\uadf8\ub7a8\uc774\uc5b4\uc57c \ud55c\ub2e4. COMMAND \uc758 \ub300\uc0c1\uc774 \ub418\ub294 \uc2e4\ud589 \uc774\ubbf8\uc9c0\ub294 \uc774\ub984\uc744 \uc77d\uc744 \uc218 \uc788\ub3c4\ub85d (i.e strip (1) \ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740) ELF \uc2ec\ubcfc \ud14c\uc774\ube14\uc744 \ud544\uc694\ub85c \ud55c\ub2e4. uftrace \ub294 git (1) \ub610\ub294 perf (1) \uc640 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ub2e4\uc218\uc758 \ubcf4\uc870 \uba85\ub839\uc5b4\ub4e4\uc744 \uac16\ub294\ub2e4. \uc544\ub798\uc5d0 \ubcf4\uc870 \uba85\ub839\uc5b4\uacfc \ud568\uaed8 \uac04\ub7b5\ud55c \uc124\uba85\uc774 \uc788\ub2e4. \ub354 \uc790\uc138\ud55c \uc815\ubcf4\ub97c \uc704\ud574\uc11c\ub294 \uac01 \ubcf4\uc870` \uba85\ub839\uc5b4\ub4e4\uc758 \uba54\ub274\uc5bc \ud398\uc774\uc9c0\ub97c \ucc38\uc870\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c, \uc774 \ud398\uc774\uc9c0\uc5d0 \uc788\ub294 \uc635\uc158\ub4e4\uc740 \ub2e4\ub978 \ubcf4\uc870 \uba85\ub839\uc5b4\ub4e4\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \ub9cc\uc57d \ubcf4\uc870 \uba85\ub839\uc5b4\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc785\ub825\ud558\uc9c0 \uc54a\uc73c\uba74, uftrace \ub294 record \uc640 replay \ub97c \ud55c\ubc88\uc5d0 \uc218\ud589\ud558\ub294 live \ubcf4\uc870 \uba85\ub839\uc5b4\ub85c \ub3d9\uc791\ud55c\ub2e4. live \uba85\ub839\uc5b4\uc758 \uc635\uc158\ub4e4\uc740 uftrace-live (1) \uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\ub2e4. \ub354 \uc790\uc138\ud55c \ubd84\uc11d\uc744 \uc704\ud574, uftrace-record (1) \ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uace0, uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-script (1), uftrace-tui (1) \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd84\uc11d\ud560 \uc218 \uc788\ub2e4. \ubcf4\uc870 \uba85\ub839\uc5b4 record : \uc8fc\uc5b4\uc9c4 \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uace0 \ub370\uc774\ud130\ub97c \ud30c\uc77c\uc774\ub098 \ub514\ub809\ud130\ub9ac\uc5d0 \uc800\uc7a5\ud55c\ub2e4. replay : \uc800\uc7a5\ub41c \ud568\uc218\ub97c \uc2dc\uac04 \uc815\ubcf4\uc640 \ud568\uaed8 \ucd9c\ub825\ud55c\ub2e4. live : \uc2e4\uc2dc\uac04 \ucd94\uc801\uc744 \uc9c4\ud589\ud558\uace0, \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. report : \ub2e4\uc591\ud55c \ud1b5\uacc4\uc640 \uc800\uc7a5\ub41c \ub370\uc774\ud130\ub97c \uc694\uc57d\ud558\uc5ec \ucd9c\ub825\ud55c\ub2e4. info : OS \ubc84\uc804, CPU \uc815\ubcf4, \ub77c\uc778 \uc218 \ub4f1\uc758 \ucd94\uac00\uc801\uc778 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. dump : \ub370\uc774\ud130 \ud30c\uc77c\uc5d0 \uc788\ub294 \uc800\uc218\uc900 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud55c\ub2e4. recv : \ub124\ud2b8\uc6cc\ud06c\ub85c\ubd80\ud130 \uc804\ub2ec\ubc1b\uc740 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. graph : \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. script : \uc800\uc7a5\ub41c \ud568\uc218 \ucd94\uc801 \ub370\uc774\ud130\uc640 \uad00\ub828\ub41c \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud55c\ub2e4. tui : graph \uc640 report \ub97c \ubcfc \uc218 \uc788\ub294 \ud14d\uc2a4\ud2b8 \ud615\uc2dd\uc758 \uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubcf4\uc5ec\uc900\ub2e4. \uc635\uc158 -h, --help : \uc0ac\uc6a9\ubc95\uc744 \uc635\uc158 \ub9ac\uc2a4\ud2b8\ub85c \uc124\uba85\uacfc \ud568\uaed8 \ucd9c\ub825\ud55c\ub2e4. --usage : \uc0ac\uc6a9\ubc95\uc744 \ubb38\uc790\uc5f4\ub85c \ucd9c\ub825\ud55c\ub2e4. -V, --version : \ud504\ub85c\uadf8\ub7a8\uc758 \ubc84\uc804\uc744 \ucd9c\ub825\ud55c\ub2e4. -v, --verbose : \uc138\ubd80\uc801\uc778 \uba54\uc2dc\uc9c0\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ub514\ubc84\uadf8 \ub808\ubca8\uc744 3 \uae4c\uc9c0 \uc62c\ub9b4 \uc218 \uc788\ub2e4. --debug : \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 -v / --verbose \uc640 \uac19\uc73c\uba70 \ud558\uc704 \ud638\ud658\uc131\uc744 \uc704\ud574\uc11c\ub9cc \uc874\uc7ac\ud55c\ub2e4. --debug-domain= DOMAIN [, DOMAIN , ...] : \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0 \ucd9c\ub825\uc744 \ub3c4\uba54\uc778\uc73c\ub85c \ud55c\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \ub3c4\uba54\uc778\ub4e4\uc740 uftrace, symbol, demangle, filter, fstack, session, kernel, mcount, dynamic, event, script \uadf8\ub9ac\uace0 dwarf \uac00 \uc788\ub2e4. \uc704\uc758 \ub3c4\uba54\uc778\ub4e4\uc740 \ucf5c\ub860\uc744 \uc774\uc6a9\ud574 \uc120\ud0dd\uc801\uc73c\ub85c \uac01\uac01\uc758 \ub3c4\uba54\uc778 \ub808\ubca8\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4, -v --debug-domain=filter:2 \ub294 filter \uc635\uc158\uc5d0 \ub514\ubc84\uae45 \ub808\ubca8\uc744 \uc9c0\uc815\ud558\uace0, \ub2e4\ub978 \ub3c4\uba54\uc778\uc740 \ub514\ubc84\uadf8 \ub808\ubca8\uc744 1\ub85c \uc9c0\uc815\ud55c\ub2e4. -d DATA , --data= DATA : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \ub514\ub809\ud130\ub9ac\uc758 \uc774\ub984\uc744 \uc815\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 uftrace.data \uc774\ub2e4. --logfile= FILE : \uacbd\uace0\uc640 \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0\ub97c stderr \uc744 \ub300\uc2e0\ud574 FILE \uc548\uc5d0 \uc800\uc7a5\ud55c\ub2e4. --color= VAL : \uacb0\uacfc\uc5d0 \uc0c9\uc744 \uc9c0\uc815\ud558\uac70\ub098 \uc9c0\uc815\ud558\uc9c0 \uc54a\ub294\ub2e4. \uac00\ub2a5\ud55c \uac12\uc740 \"yes\"(= \"true\" | \"1\" | \"on\" ), \"no\"(= \"false\" | \"0\" | \"off\" ) \uc640 \"auto\" \uc774\ub2e4. \"auto\" \ub294 \ucd9c\ub825\uc774 \ud130\ubbf8\ub110\uc778 \uacbd\uc6b0 \uae30\ubcf8\uc801\uc73c\ub85c \uc0c9\uc744 \uc9c0\uc815\ud55c\ub2e4. --no-pager : pager \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. --opt-file= FILE : uftrace \uc2e4\ud589\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uc635\uc158\uc744 \ud30c\uc77c\uc5d0\uc11c \uc77d\uc5b4\uc11c \uc801\uc6a9\ud55c\ub2e4. \ubcf4\uc870 \uba85\ub839\ubcc4 \uc635\uc158 \uc774 \uc635\uc158\ub4e4\uc740 \uc644\uc804\uc131\uc744 \uc704\ud574 \uc5ec\uae30\uc5d0 \uc874\uc7ac\ud558\uc9c0\ub9cc, \ud2b9\uc815 \ubcf4\uc870 \uba85\ub839\uc5b4\uc5d0\uc11c\ub9cc \uc720\ud6a8\ud558\ub2e4. uftrace-< subcommand > \uba54\ub274\uc5bc \ud398\uc774\uc9c0\uc5d0\uc11c \ucd94\uac00\uc801\uc778 \uc815\ubcf4\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4. uftrace-live (1) \uba54\ub274\uc5bc \ud398\uc774\uc9c0\ub294 \ud2b9\uc774\ud55c \ud398\uc774\uc9c0\uc774\ub2e4: \ubcf4\uc870 \uba4d\ub839\uc5b4 live \ub294 record \uc640 replay \uc758 \uae30\ub2a5\uc744 \ub0b4\ubd80\uc801\uc73c\ub85c \uc9c4\ud589\ud55c\ub2e4. \uadf8\ub7ec\ubbc0\ub85c, --avg-self : \uac01 \ud568\uc218\uc758 \uc790\uccb4 \uc2dc\uac04(self time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. --avg-total : \uac01 \ud568\uc218\uc758 \ucd1d \uc2dc\uac04(total time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. -a, --auto-args : \uc54c\ub824\uc9c4 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\ub4e4\uc744 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ud55c\ub2e4. -A, --argument= FUNC @arg[,arg,...] : \ud568\uc218 \uc778\uc790\ub97c \ud45c\uc2dc\ud55c\ub2e4. -b, --buffer= SIZE : \uc800\uc7a5\ud560 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: 128k) --chrome : \uad6c\uae00 \ud06c\ub86c \ucd94\uc801 \uae30\ub2a5\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 JSON \ud615\uc2dd\uc758 \uacb0\uacfc\ubb3c\uc744 \ud45c\uc2dc\ud55c\ub2e4. --clock : \ud0c0\uc784\uc2a4\ud0ec\ud504\ub97c \uc77d\ub294 \ud074\ub7ed \uc18c\uc2a4\ub97c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: mono) --column-offset= DEPTH : \uac01 \uc5f4\uc758 \uac04\uaca9(offset) \ud06c\uae30\ub97c \uba85\uc2dc\ud55c\ub2e4. (\uae30\ubcf8\uac12: 8) --column-view : \uc5f4(column) \ubcc4\ub85c \ubd84\ub9ac\ud558\uc5ec \uac01\uac01\uc758 \ud0dc\uc2a4\ud06c\ub97c \ucd9c\ub825\ud55c\ub2e4. -C, --caller-filter= FUNC : FUNC\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. --demangle= TYPE : C++ \uc2ec\ubcfc \ub514\ub9f9\uae00\ub9c1: full, simple, no : (\uae30\ubcf8\uac12: simple) --diff= DATA : \ucc28\uc774\uc810\uc744 \ubcf4\uace0\ud55c\ub2e4. --diff-policy= POLICY : diff \ubcf4\uace0 \uc815\ucc45\uc744 \uc124\uc815\ud55c\ub2e4. : (\uae30\ubcf8\uac12: 'abs,compact,no-percent') --disable : \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\uace0 \uc2dc\uc791\ud55c\ub2e4. -D, --depth= DEPTH : DEPTH \uae4a\uc774\ub9cc\ud07c \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. -e, --estimate-return : \uc548\uc815\uc131\uc744 \uc704\ud574 \uac01 \ud568\uc218\uc758 \uc9c4\uc785 \ub370\uc774\ud130\ub9cc\uc744 \uae30\ub85d\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. -E, --Event= EVENT : \ub354 \ub9ce\uc740 \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 EVENT \ub97c \ud65c\uc131\ud654\ud55c\ub2e4. --flame-graph : \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c FlameGraph \ud615\uc2dd\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. --flat : \ud3c9\ud3c9\ud55c(flat) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. --force : \uacc4\uce21 \uc815\ubcf4\uac00 \uc5c6\ub294 \uc2e4\ud589 \ud30c\uc77c\uc774\uc5ec\ub3c4 \ucd94\uc801\ud55c\ub2e4. --format= FORMAT : FORMAT \uc73c\ub85c \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4: normal, html (\uae30\ubcf8\uac12: normal) -f, --output-fields= FIELD : replay \ud639\uc740 graph \ucd9c\ub825\uc5d0\uc11c FIELD\ub97c \ubcf4\uc5ec\uc900\ub2e4. -F, --filter= FUNC : FUNC \ub9cc \ucd94\uc801\ud55c\ub2e4. -g, --agent : \uba85\ub839\uc5b4\ub97c \ubc1b\uae30 \uc704\ud574 mcount\uc5d0\uc11c \uc5d0\uc774\uc804\ud2b8\ub97c \uc2dc\uc791\ud55c\ub2e4. --graphviz : \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c DOT \ud615\uc2dd\uc73c\ub85c \ub364\ud504\ud55c\ub2e4. -H, --hide= FUNC : \ucd94\uc801\uc5d0\uc11c FUNC \ub97c \uc228\uae34\ub2e4. --host= HOST : \ucd94\uc801 \ub370\uc774\ud130\ub97c \ud30c\uc77c\uc5d0 \uc4f0\ub294 \ub300\uc2e0 HOST \uc5d0 \uc804\ub2ec\ud55c\ub2e4. -k, --kernel : \uc9c0\uc6d0\ud558\ub294 \uacbd\uc6b0, \ucee4\ub110 \ud568\uc218 \ub610\ud55c \ucd94\uc801\ud55c\ub2e4. --keep-pid : \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \ub54c \ub3d9\uc77c\ud55c pid \uac12\uc744 \uc720\uc9c0\ud558\uac8c \ud574\uc900\ub2e4. --kernel-buffer= SIZE : \uc800\uc7a5\ud560 \ucee4\ub110 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: 1408K) --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --kernel-skip-out : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ucee4\ub110 \ud568\uc218\ub97c \uc0dd\ub7b5\ud55c\ub2e4. (\uc9c0\uc6d0 \uc885\ub8cc) -K, --kernel-depth= DEPTH : \ucee4\ub110 \ucd5c\ub300 \ud568\uc218 \uae4a\uc774\ub97c DEPTH \ub85c \uc9c0\uc815\ud55c\ub2e4. --libmcount-single : libmcount \uc758 \ub2e8\uc77c \uc4f0\ub808\ub4dc \ubc84\uc804\uc744 \uc0ac\uc6a9\ud55c\ub2e4. --list-event : \uc2e4\ud589\uc911\uc5d0 \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. --logfile= FILE : \uacbd\uace0\uc640 \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0\ub97c stderr \uc744 \ub300\uc2e0\ud574 FILE \uc548\uc5d0 \uc800\uc7a5\ud55c\ub2e4. -l, --nest-libcall : \uc911\ucca9\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \ubcf4\uc5ec\uc900\ub2e4. --libname : \ud568\uc218 \uc774\ub984\uacfc \ud568\uaed8 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4 --libmcount-path= PATH : libmcount \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c PATH \uc5d0\uc11c \uba3c\uc800 \ucc3e\ub294\ub2e4. : Load libmcount libraries from this PATH --match= TYPE : \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4: regex, glob (\uae30\ubcf8\uac12: : regex) --max-stack= DEPTH : \uc2a4\ud0dd\uc758 \ucd5c\ub300 \uae4a\uc774\ub97c DEPTH \ub85c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: 65535) --no-args : \ud568\uc218 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \ubcf4\uc5ec\uc8fc\uc9c0 \uc54a\ub294\ub2e4. --no-comment : \ud568\uc218\uac00 \ubc18\ud658\ub418\ub294 \uacf3\uc5d0 \uc8fc\uc11d\uc744 \ucd9c\ub825\ud558\uc9c0 \uc54a\ub294\ub2e4. --no-event : \uae30\ubcf8 \uc774\ubca4\ud2b8\ub4e4\uc744 \ube44\ud65c\uc131\ud654\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ube44\ud65c\uc131\ud654\ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 : \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. --no-merge : \uc78e(leaf) \ud568\uc218\ub97c \ubcd1\ud569\ud558\uc9c0 \uc54a\ub294\ub2e4. --no-pltbind : \ub3d9\uc801 \uc2ec\ubcfc \uc8fc\uc18c\ub97c \ubc14\uc778\ub529\ud558\uc9c0 \uc54a\ub294\ub2e4. ( LD_BIND_NOT ) --no-randomize-addr : ASLR(Address Space Layout Randomization)\uc744 \ube44\ud65c\uc131\ud654 \ud55c\ub2e4. --nop : \uc544\ubb34 \uc791\uc5c5\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub2e4. (\uc131\ub2a5 \ud14c\uc2a4\ud2b8 \uc6a9) --num-thread= NUM : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 NUM \uac1c\uc758 \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. -N, --notrace= FUNC : FUNC\ub4e4\uc744 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. -p, --pid= PID : \ub300\ud654\ud615 mcount \uc778\uc2a4\ud134\uc2a4\uc758 PID \uc5d0 \uc5f0\uacb0\ud55c\ub2e4. --port= PORT : \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc744 \uc704\ud574 PORT \ub97c \uc0ac\uc6a9\ud55c\ub2e4. (\uae30\ubcf8\uac12: 8090) -P, --patch= FUNC : FUNC\uc5d0 \ub3d9\uc801 \ud328\uce6d\uc744 \uc801\uc6a9\ud55c\ub2e4. --record : \uc8fc\uc5b4\uc9c4 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 \uc0c8\ub86d\uac8c \ucd94\uc801\uc744 \uae30\ub85d\ud55c\ub2e4. --report : replay \uc804 \uc2e4\uc2dc\uac04 \ubcf4\uace0\uc11c\ub97c \ubcf4\uc5ec\uc900\ub2e4. --rt-prio= PRIO : \uc2e4\uc2dc\uac04 ( FIFO ) \uc6b0\uc120\uc21c\uc704\ub85c \uae30\ub85d\ud55c\ub2e4. -r, --time-range= TIME ~ TIME : TIME \uc2dc\uac04 \uc548\uc5d0\uc11c\ub9cc \uae30\ub85d\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc900\ub2e4. : (\ud0c0\uc784\uc2a4\ud0ec\ud504 \ud639\uc740 \uacbd\uacfc\uc2dc\uac04) --run-cmd= CMDLINE : \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud55c \ub2e4\uc74c\uc5d0 \uc8fc\uc5b4\uc9c4 (\uc258)\uba85\ub839\uc5b4\ub97c \ubc14\ub85c : \uc2e4\ud589\ud55c\ub2e4. -R, --retval= FUNC [@retspec] : \ud568\uc218 FUNC \uc5d0 \ub300\ud55c \ubc18\ud658\uac12\uc744 \uc8fc\uc5b4\uc9c4 : uftrace retspec \uc5d0 \ub9de\uac8c \ubcf4\uc5ec\uc900\ub2e4. --sample-time= TIME : \uc124\uc815\ud55c \uc0d8\ud50c\ub9c1 \ud0c0\uc784\uc5d0 \ud574\ub2f9\ud558\ub294 Flame graph \ub97c \ubcf4\uc5ec\uc900\ub2e4. --signal= SIGNAL @act[,act,...] : \uc8fc\uc5b4\uc9c4 SIGNAL \uc744 \ubc1b\uc558\uc744 \ub54c \uc8fc\uc5b4\uc9c4 \uc561\uc158\uc744 \uc2e4\ud589\ud55c\ub2e4. --sort-column= INDEX : INDEX \uc5f4\uc744 \uae30\uc900\uc73c\ub85c diff \ubcf4\uace0\uc11c\ub97c \uc815\ub82c\ud55c\ub2e4. (\uae30\ubcf8\uac12: 2) --srcline : \uac00\ub2a5\ud55c \uac01 \ud568\uc218\ub4e4\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4. --symbols : \uae30\ub85d\ub41c \uc815\ubcf4 \ub300\uc2e0\uc5d0 \uc2ec\ubcfc(symbol) \ud14c\uc774\ube14\uc744 \ucd9c\ub825\ud55c\ub2e4. -s, --sort= KEY [, KEY ,...] : \uc8fc\uc5b4\uc9c4 \ud0a4\ub97c \uae30\ubc18\uc73c\ub85c \ud568\uc218\ub4e4\uc744 \uc815\ub82c\ud55c\ub2e4. (\uae30\ubcf8\uac12: 2) -S, --script= SCRIPT : \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc5d0 \uc8fc\uc5b4\uc9c4 SCRIPT \ub97c \uc218\ud589\ud55c\ub2e4. -t, --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --task : \uc77c\ubc18\uc801\uc778 \ud568\uc218 \uadf8\ub798\ud504 \ub300\uc2e0 \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. --task-newline : \ud0dc\uc2a4\ud06c\uac00 \ubcc0\uacbd\ub418\uba74 \ube48 \uacf5\ubc31 \ud55c\uc904\uc744 \ucd94\uac00\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. --time : \uc2dc\uac04 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. -T, --trigger= FUNC @act[,act,...] : FUNC \uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. -U, --unpatch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\uc5d0 \ub300\ud574 \ub3d9\uc801 \ud328\uce58\ub97c \uc801\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud130\ub9ac \uc548\uc5d0 \uc788\ub294 \uc2ec\ubcfc \ud30c\uc77c\ub4e4\uc744 \uc0ac\uc6a9\ud55c\ub2e4. -W, --watch= POINT : POINT \uac00 \ubcc0\uacbd\ub418\ub294 \uacbd\uc6b0\ub97c \uac10\uc2dc\ud558\uace0 \uae30\ub85d\ud55c\ub2e4. -Z, --size-filter= SIZE : SIZE \ubcf4\ub2e4 \ud070 \ud568\uc218\ub4e4\uc5d0 \ub3d9\uc801 \ud328\uce6d\uc744 \uc801\uc6a9\ud55c\ub2e4. \ub354 \uad6c\uccb4\uc801\uc778 \ubcf4\uc870 \uba85\ub839\ubcc4 \uc635\uc158\uc744 \ud655\uc778\ud558\uae30 \uc704\ud574\uc120, \uc544\ub798\uc5d0 \ub098\uc5f4\ub41c \uba54\ub274\uc5bc \ud398\uc774\uc9c0\ub97c \ucc38\uc870\ud558\ub77c. \ud568\uaed8 \ubcf4\uae30 uftrace-live (1), uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1) \ubc88\uc5ed\uc790 \ub958\uc900\ud638 ruujoon93@gmail.com , \uae40\uc131\uc9c4 mirusu400@naver.com","title":"ko"},{"location":"ko/uftrace/#_1","text":"uftrace - \ud504\ub85c\uadf8\ub7a8 \ud568\uc218 \ud638\ucd9c \ubd84\uc11d \ub3c4\uad6c","title":"\uc774\ub984"},{"location":"ko/uftrace/#_2","text":"uftrace [ record | replay | live | report | info | dump | recv | graph | script | tui ] [ options ] COMMAND [ command-options ]","title":"\uc0ac\uc6a9\ubc95"},{"location":"ko/uftrace/#_3","text":"uftrace \ub294 COMMAND \uc5d0 \uc8fc\uc5b4\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8\uc758 \uc2e4\ud589\uc744 \ud568\uc218 \ub2e8\uc704\ub85c \ucd94\uc801(trace)\ud558\ub294 \ubd84\uc11d \ub3c4\uad6c\uc774\ub2e4. COMMAND \uc5d0 \uc8fc\uc5b4\uc9c0\ub294 \ud504\ub85c\uadf8\ub7a8\uc740 -pg \ub610\ub294 -finstrument-function \ub85c \ucef4\ud30c\uc77c\ub41c C \ub610\ub294 C++ \ud504\ub85c\uadf8\ub7a8\uc774\uc5b4\uc57c \ud55c\ub2e4. COMMAND \uc758 \ub300\uc0c1\uc774 \ub418\ub294 \uc2e4\ud589 \uc774\ubbf8\uc9c0\ub294 \uc774\ub984\uc744 \uc77d\uc744 \uc218 \uc788\ub3c4\ub85d (i.e strip (1) \ub418\uc5b4 \uc788\uc9c0 \uc54a\uc740) ELF \uc2ec\ubcfc \ud14c\uc774\ube14\uc744 \ud544\uc694\ub85c \ud55c\ub2e4. uftrace \ub294 git (1) \ub610\ub294 perf (1) \uc640 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ub2e4\uc218\uc758 \ubcf4\uc870 \uba85\ub839\uc5b4\ub4e4\uc744 \uac16\ub294\ub2e4. \uc544\ub798\uc5d0 \ubcf4\uc870 \uba85\ub839\uc5b4\uacfc \ud568\uaed8 \uac04\ub7b5\ud55c \uc124\uba85\uc774 \uc788\ub2e4. \ub354 \uc790\uc138\ud55c \uc815\ubcf4\ub97c \uc704\ud574\uc11c\ub294 \uac01 \ubcf4\uc870` \uba85\ub839\uc5b4\ub4e4\uc758 \uba54\ub274\uc5bc \ud398\uc774\uc9c0\ub97c \ucc38\uc870\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c, \uc774 \ud398\uc774\uc9c0\uc5d0 \uc788\ub294 \uc635\uc158\ub4e4\uc740 \ub2e4\ub978 \ubcf4\uc870 \uba85\ub839\uc5b4\ub4e4\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4. \ub9cc\uc57d \ubcf4\uc870 \uba85\ub839\uc5b4\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc785\ub825\ud558\uc9c0 \uc54a\uc73c\uba74, uftrace \ub294 record \uc640 replay \ub97c \ud55c\ubc88\uc5d0 \uc218\ud589\ud558\ub294 live \ubcf4\uc870 \uba85\ub839\uc5b4\ub85c \ub3d9\uc791\ud55c\ub2e4. live \uba85\ub839\uc5b4\uc758 \uc635\uc158\ub4e4\uc740 uftrace-live (1) \uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\ub2e4. \ub354 \uc790\uc138\ud55c \ubd84\uc11d\uc744 \uc704\ud574, uftrace-record (1) \ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uace0, uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-script (1), uftrace-tui (1) \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd84\uc11d\ud560 \uc218 \uc788\ub2e4.","title":"\uc124\uba85"},{"location":"ko/uftrace/#_4","text":"record : \uc8fc\uc5b4\uc9c4 \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uace0 \ub370\uc774\ud130\ub97c \ud30c\uc77c\uc774\ub098 \ub514\ub809\ud130\ub9ac\uc5d0 \uc800\uc7a5\ud55c\ub2e4. replay : \uc800\uc7a5\ub41c \ud568\uc218\ub97c \uc2dc\uac04 \uc815\ubcf4\uc640 \ud568\uaed8 \ucd9c\ub825\ud55c\ub2e4. live : \uc2e4\uc2dc\uac04 \ucd94\uc801\uc744 \uc9c4\ud589\ud558\uace0, \uc2e4\ud589\ub418\ub294 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. report : \ub2e4\uc591\ud55c \ud1b5\uacc4\uc640 \uc800\uc7a5\ub41c \ub370\uc774\ud130\ub97c \uc694\uc57d\ud558\uc5ec \ucd9c\ub825\ud55c\ub2e4. info : OS \ubc84\uc804, CPU \uc815\ubcf4, \ub77c\uc778 \uc218 \ub4f1\uc758 \ucd94\uac00\uc801\uc778 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. dump : \ub370\uc774\ud130 \ud30c\uc77c\uc5d0 \uc788\ub294 \uc800\uc218\uc900 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud55c\ub2e4. recv : \ub124\ud2b8\uc6cc\ud06c\ub85c\ubd80\ud130 \uc804\ub2ec\ubc1b\uc740 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud55c\ub2e4. graph : \ud568\uc218 \ud638\ucd9c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. script : \uc800\uc7a5\ub41c \ud568\uc218 \ucd94\uc801 \ub370\uc774\ud130\uc640 \uad00\ub828\ub41c \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud55c\ub2e4. tui : graph \uc640 report \ub97c \ubcfc \uc218 \uc788\ub294 \ud14d\uc2a4\ud2b8 \ud615\uc2dd\uc758 \uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubcf4\uc5ec\uc900\ub2e4.","title":"\ubcf4\uc870 \uba85\ub839\uc5b4"},{"location":"ko/uftrace/#_5","text":"-h, --help : \uc0ac\uc6a9\ubc95\uc744 \uc635\uc158 \ub9ac\uc2a4\ud2b8\ub85c \uc124\uba85\uacfc \ud568\uaed8 \ucd9c\ub825\ud55c\ub2e4. --usage : \uc0ac\uc6a9\ubc95\uc744 \ubb38\uc790\uc5f4\ub85c \ucd9c\ub825\ud55c\ub2e4. -V, --version : \ud504\ub85c\uadf8\ub7a8\uc758 \ubc84\uc804\uc744 \ucd9c\ub825\ud55c\ub2e4. -v, --verbose : \uc138\ubd80\uc801\uc778 \uba54\uc2dc\uc9c0\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 \ub514\ubc84\uadf8 \ub808\ubca8\uc744 3 \uae4c\uc9c0 \uc62c\ub9b4 \uc218 \uc788\ub2e4. --debug : \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0\ub97c \ucd9c\ub825\ud55c\ub2e4. \uc774 \uc635\uc158\uc740 -v / --verbose \uc640 \uac19\uc73c\uba70 \ud558\uc704 \ud638\ud658\uc131\uc744 \uc704\ud574\uc11c\ub9cc \uc874\uc7ac\ud55c\ub2e4. --debug-domain= DOMAIN [, DOMAIN , ...] : \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0 \ucd9c\ub825\uc744 \ub3c4\uba54\uc778\uc73c\ub85c \ud55c\uc815\ud55c\ub2e4. \uac00\ub2a5\ud55c \ub3c4\uba54\uc778\ub4e4\uc740 uftrace, symbol, demangle, filter, fstack, session, kernel, mcount, dynamic, event, script \uadf8\ub9ac\uace0 dwarf \uac00 \uc788\ub2e4. \uc704\uc758 \ub3c4\uba54\uc778\ub4e4\uc740 \ucf5c\ub860\uc744 \uc774\uc6a9\ud574 \uc120\ud0dd\uc801\uc73c\ub85c \uac01\uac01\uc758 \ub3c4\uba54\uc778 \ub808\ubca8\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4, -v --debug-domain=filter:2 \ub294 filter \uc635\uc158\uc5d0 \ub514\ubc84\uae45 \ub808\ubca8\uc744 \uc9c0\uc815\ud558\uace0, \ub2e4\ub978 \ub3c4\uba54\uc778\uc740 \ub514\ubc84\uadf8 \ub808\ubca8\uc744 1\ub85c \uc9c0\uc815\ud55c\ub2e4. -d DATA , --data= DATA : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560 \ub514\ub809\ud130\ub9ac\uc758 \uc774\ub984\uc744 \uc815\ud55c\ub2e4. \uae30\ubcf8\uac12\uc740 uftrace.data \uc774\ub2e4. --logfile= FILE : \uacbd\uace0\uc640 \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0\ub97c stderr \uc744 \ub300\uc2e0\ud574 FILE \uc548\uc5d0 \uc800\uc7a5\ud55c\ub2e4. --color= VAL : \uacb0\uacfc\uc5d0 \uc0c9\uc744 \uc9c0\uc815\ud558\uac70\ub098 \uc9c0\uc815\ud558\uc9c0 \uc54a\ub294\ub2e4. \uac00\ub2a5\ud55c \uac12\uc740 \"yes\"(= \"true\" | \"1\" | \"on\" ), \"no\"(= \"false\" | \"0\" | \"off\" ) \uc640 \"auto\" \uc774\ub2e4. \"auto\" \ub294 \ucd9c\ub825\uc774 \ud130\ubbf8\ub110\uc778 \uacbd\uc6b0 \uae30\ubcf8\uc801\uc73c\ub85c \uc0c9\uc744 \uc9c0\uc815\ud55c\ub2e4. --no-pager : pager \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. --opt-file= FILE : uftrace \uc2e4\ud589\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uc635\uc158\uc744 \ud30c\uc77c\uc5d0\uc11c \uc77d\uc5b4\uc11c \uc801\uc6a9\ud55c\ub2e4.","title":"\uc635\uc158"},{"location":"ko/uftrace/#_6","text":"\uc774 \uc635\uc158\ub4e4\uc740 \uc644\uc804\uc131\uc744 \uc704\ud574 \uc5ec\uae30\uc5d0 \uc874\uc7ac\ud558\uc9c0\ub9cc, \ud2b9\uc815 \ubcf4\uc870 \uba85\ub839\uc5b4\uc5d0\uc11c\ub9cc \uc720\ud6a8\ud558\ub2e4. uftrace-< subcommand > \uba54\ub274\uc5bc \ud398\uc774\uc9c0\uc5d0\uc11c \ucd94\uac00\uc801\uc778 \uc815\ubcf4\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4. uftrace-live (1) \uba54\ub274\uc5bc \ud398\uc774\uc9c0\ub294 \ud2b9\uc774\ud55c \ud398\uc774\uc9c0\uc774\ub2e4: \ubcf4\uc870 \uba4d\ub839\uc5b4 live \ub294 record \uc640 replay \uc758 \uae30\ub2a5\uc744 \ub0b4\ubd80\uc801\uc73c\ub85c \uc9c4\ud589\ud55c\ub2e4. \uadf8\ub7ec\ubbc0\ub85c, --avg-self : \uac01 \ud568\uc218\uc758 \uc790\uccb4 \uc2dc\uac04(self time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. --avg-total : \uac01 \ud568\uc218\uc758 \ucd1d \uc2dc\uac04(total time)\uc758 \ud3c9\uade0, \ucd5c\uc18c, \ucd5c\ub300 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc900\ub2e4. -a, --auto-args : \uc54c\ub824\uc9c4 \ud568\uc218\uc758 \uc778\uc790\uc640 \ubc18\ud658\uac12\ub4e4\uc744 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ud55c\ub2e4. -A, --argument= FUNC @arg[,arg,...] : \ud568\uc218 \uc778\uc790\ub97c \ud45c\uc2dc\ud55c\ub2e4. -b, --buffer= SIZE : \uc800\uc7a5\ud560 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: 128k) --chrome : \uad6c\uae00 \ud06c\ub86c \ucd94\uc801 \uae30\ub2a5\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 JSON \ud615\uc2dd\uc758 \uacb0\uacfc\ubb3c\uc744 \ud45c\uc2dc\ud55c\ub2e4. --clock : \ud0c0\uc784\uc2a4\ud0ec\ud504\ub97c \uc77d\ub294 \ud074\ub7ed \uc18c\uc2a4\ub97c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: mono) --column-offset= DEPTH : \uac01 \uc5f4\uc758 \uac04\uaca9(offset) \ud06c\uae30\ub97c \uba85\uc2dc\ud55c\ub2e4. (\uae30\ubcf8\uac12: 8) --column-view : \uc5f4(column) \ubcc4\ub85c \ubd84\ub9ac\ud558\uc5ec \uac01\uac01\uc758 \ud0dc\uc2a4\ud06c\ub97c \ucd9c\ub825\ud55c\ub2e4. -C, --caller-filter= FUNC : FUNC\uc758 \ud638\ucd9c\uc790\ub97c \ucd9c\ub825\ud558\ub294 \ud544\ud130\ub97c \uc124\uc815\ud55c\ub2e4. --demangle= TYPE : C++ \uc2ec\ubcfc \ub514\ub9f9\uae00\ub9c1: full, simple, no : (\uae30\ubcf8\uac12: simple) --diff= DATA : \ucc28\uc774\uc810\uc744 \ubcf4\uace0\ud55c\ub2e4. --diff-policy= POLICY : diff \ubcf4\uace0 \uc815\ucc45\uc744 \uc124\uc815\ud55c\ub2e4. : (\uae30\ubcf8\uac12: 'abs,compact,no-percent') --disable : \ub370\uc774\ud130\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\uace0 \uc2dc\uc791\ud55c\ub2e4. -D, --depth= DEPTH : DEPTH \uae4a\uc774\ub9cc\ud07c \ud568\uc218\ub97c \ucd94\uc801\ud55c\ub2e4. -e, --estimate-return : \uc548\uc815\uc131\uc744 \uc704\ud574 \uac01 \ud568\uc218\uc758 \uc9c4\uc785 \ub370\uc774\ud130\ub9cc\uc744 \uae30\ub85d\ud55c\ub2e4. --event-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ubaa8\ub4e0 \uc774\ubca4\ud2b8\ub97c \ucd9c\ub825\ud55c\ub2e4. -E, --Event= EVENT : \ub354 \ub9ce\uc740 \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 EVENT \ub97c \ud65c\uc131\ud654\ud55c\ub2e4. --flame-graph : \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c FlameGraph \ud615\uc2dd\uc73c\ub85c \ud45c\uc2dc\ud55c\ub2e4. --flat : \ud3c9\ud3c9\ud55c(flat) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\ud55c\ub2e4. --force : \uacc4\uce21 \uc815\ubcf4\uac00 \uc5c6\ub294 \uc2e4\ud589 \ud30c\uc77c\uc774\uc5ec\ub3c4 \ucd94\uc801\ud55c\ub2e4. --format= FORMAT : FORMAT \uc73c\ub85c \ud615\uc2dd\ud654\ub41c \ucd9c\ub825\uc744 \ubcf4\uc5ec\uc900\ub2e4: normal, html (\uae30\ubcf8\uac12: normal) -f, --output-fields= FIELD : replay \ud639\uc740 graph \ucd9c\ub825\uc5d0\uc11c FIELD\ub97c \ubcf4\uc5ec\uc900\ub2e4. -F, --filter= FUNC : FUNC \ub9cc \ucd94\uc801\ud55c\ub2e4. -g, --agent : \uba85\ub839\uc5b4\ub97c \ubc1b\uae30 \uc704\ud574 mcount\uc5d0\uc11c \uc5d0\uc774\uc804\ud2b8\ub97c \uc2dc\uc791\ud55c\ub2e4. --graphviz : \uae30\ub85d\ub41c \ub370\uc774\ud130\ub97c DOT \ud615\uc2dd\uc73c\ub85c \ub364\ud504\ud55c\ub2e4. -H, --hide= FUNC : \ucd94\uc801\uc5d0\uc11c FUNC \ub97c \uc228\uae34\ub2e4. --host= HOST : \ucd94\uc801 \ub370\uc774\ud130\ub97c \ud30c\uc77c\uc5d0 \uc4f0\ub294 \ub300\uc2e0 HOST \uc5d0 \uc804\ub2ec\ud55c\ub2e4. -k, --kernel : \uc9c0\uc6d0\ud558\ub294 \uacbd\uc6b0, \ucee4\ub110 \ud568\uc218 \ub610\ud55c \ucd94\uc801\ud55c\ub2e4. --keep-pid : \ud504\ub85c\uadf8\ub7a8\uc744 \ucd94\uc801\ud560 \ub54c \ub3d9\uc77c\ud55c pid \uac12\uc744 \uc720\uc9c0\ud558\uac8c \ud574\uc900\ub2e4. --kernel-buffer= SIZE : \uc800\uc7a5\ud560 \ucee4\ub110 \ub370\uc774\ud130\uc758 \ub0b4\ubd80 \ubc84\ud37c \ud06c\uae30\ub97c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: 1408K) --kernel-full : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc5d0\uc11c \ud638\ucd9c\ub41c \ubaa8\ub4e0 \ucee4\ub110 \ud568\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4. --kernel-only : \uc0ac\uc6a9\uc790 \ud568\uc218\ub97c \uc81c\uc678\ud55c \ucee4\ub110 \ud568\uc218\ub9cc \ucd9c\ub825\ud55c\ub2e4. --kernel-skip-out : \uc0ac\uc6a9\uc790 \ud568\uc218 \ubc16\uc758 \ucee4\ub110 \ud568\uc218\ub97c \uc0dd\ub7b5\ud55c\ub2e4. (\uc9c0\uc6d0 \uc885\ub8cc) -K, --kernel-depth= DEPTH : \ucee4\ub110 \ucd5c\ub300 \ud568\uc218 \uae4a\uc774\ub97c DEPTH \ub85c \uc9c0\uc815\ud55c\ub2e4. --libmcount-single : libmcount \uc758 \ub2e8\uc77c \uc4f0\ub808\ub4dc \ubc84\uc804\uc744 \uc0ac\uc6a9\ud55c\ub2e4. --list-event : \uc2e4\ud589\uc911\uc5d0 \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc774\ubca4\ud2b8\ub4e4\uc744 \ucd9c\ub825\ud55c\ub2e4. --logfile= FILE : \uacbd\uace0\uc640 \ub514\ubc84\uadf8 \uba54\uc2dc\uc9c0\ub97c stderr \uc744 \ub300\uc2e0\ud574 FILE \uc548\uc5d0 \uc800\uc7a5\ud55c\ub2e4. -l, --nest-libcall : \uc911\ucca9\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \ubcf4\uc5ec\uc900\ub2e4. --libname : \ud568\uc218 \uc774\ub984\uacfc \ud568\uaed8 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\ub984\uc744 \ucd9c\ub825\ud55c\ub2e4 --libmcount-path= PATH : libmcount \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c PATH \uc5d0\uc11c \uba3c\uc800 \ucc3e\ub294\ub2e4. : Load libmcount libraries from this PATH --match= TYPE : \uc77c\uce58\ud558\ub294 \ud328\ud134\uc744 \ubcf4\uc5ec\uc900\ub2e4: regex, glob (\uae30\ubcf8\uac12: : regex) --max-stack= DEPTH : \uc2a4\ud0dd\uc758 \ucd5c\ub300 \uae4a\uc774\ub97c DEPTH \ub85c \uc124\uc815\ud55c\ub2e4. (\uae30\ubcf8\uac12: 65535) --no-args : \ud568\uc218 \uc778\uc790\uc640 \ubc18\ud658 \uac12\uc744 \ubcf4\uc5ec\uc8fc\uc9c0 \uc54a\ub294\ub2e4. --no-comment : \ud568\uc218\uac00 \ubc18\ud658\ub418\ub294 \uacf3\uc5d0 \uc8fc\uc11d\uc744 \ucd9c\ub825\ud558\uc9c0 \uc54a\ub294\ub2e4. --no-event : \uae30\ubcf8 \uc774\ubca4\ud2b8\ub4e4\uc744 \ube44\ud65c\uc131\ud654\ud55c\ub2e4. --no-sched : \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub97c \ube44\ud65c\uc131\ud654\ud55c\ub2e4. --no-sched-preempt : \uc120\uc810 \uc2a4\ucf00\uc904 \uc774\ubca4\ud2b8\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud558\ub098 : \uc77c\ubc18(\ub300\uae30) \uc2a4\ucf00\uc974 \uc774\ubca4\ud2b8\ub294 \uadf8\ub300\ub85c \ud45c\uc2dc\ud55c\ub2e4. --no-libcall : \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c\uc744 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. --no-merge : \uc78e(leaf) \ud568\uc218\ub97c \ubcd1\ud569\ud558\uc9c0 \uc54a\ub294\ub2e4. --no-pltbind : \ub3d9\uc801 \uc2ec\ubcfc \uc8fc\uc18c\ub97c \ubc14\uc778\ub529\ud558\uc9c0 \uc54a\ub294\ub2e4. ( LD_BIND_NOT ) --no-randomize-addr : ASLR(Address Space Layout Randomization)\uc744 \ube44\ud65c\uc131\ud654 \ud55c\ub2e4. --nop : \uc544\ubb34 \uc791\uc5c5\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub2e4. (\uc131\ub2a5 \ud14c\uc2a4\ud2b8 \uc6a9) --num-thread= NUM : \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 NUM \uac1c\uc758 \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. -N, --notrace= FUNC : FUNC\ub4e4\uc744 \ucd94\uc801\ud558\uc9c0 \uc54a\ub294\ub2e4. -p, --pid= PID : \ub300\ud654\ud615 mcount \uc778\uc2a4\ud134\uc2a4\uc758 PID \uc5d0 \uc5f0\uacb0\ud55c\ub2e4. --port= PORT : \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc744 \uc704\ud574 PORT \ub97c \uc0ac\uc6a9\ud55c\ub2e4. (\uae30\ubcf8\uac12: 8090) -P, --patch= FUNC : FUNC\uc5d0 \ub3d9\uc801 \ud328\uce6d\uc744 \uc801\uc6a9\ud55c\ub2e4. --record : \uc8fc\uc5b4\uc9c4 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 \uc0c8\ub86d\uac8c \ucd94\uc801\uc744 \uae30\ub85d\ud55c\ub2e4. --report : replay \uc804 \uc2e4\uc2dc\uac04 \ubcf4\uace0\uc11c\ub97c \ubcf4\uc5ec\uc900\ub2e4. --rt-prio= PRIO : \uc2e4\uc2dc\uac04 ( FIFO ) \uc6b0\uc120\uc21c\uc704\ub85c \uae30\ub85d\ud55c\ub2e4. -r, --time-range= TIME ~ TIME : TIME \uc2dc\uac04 \uc548\uc5d0\uc11c\ub9cc \uae30\ub85d\ub41c \ucd94\uc801 \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc900\ub2e4. : (\ud0c0\uc784\uc2a4\ud0ec\ud504 \ud639\uc740 \uacbd\uacfc\uc2dc\uac04) --run-cmd= CMDLINE : \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud55c \ub2e4\uc74c\uc5d0 \uc8fc\uc5b4\uc9c4 (\uc258)\uba85\ub839\uc5b4\ub97c \ubc14\ub85c : \uc2e4\ud589\ud55c\ub2e4. -R, --retval= FUNC [@retspec] : \ud568\uc218 FUNC \uc5d0 \ub300\ud55c \ubc18\ud658\uac12\uc744 \uc8fc\uc5b4\uc9c4 : uftrace retspec \uc5d0 \ub9de\uac8c \ubcf4\uc5ec\uc900\ub2e4. --sample-time= TIME : \uc124\uc815\ud55c \uc0d8\ud50c\ub9c1 \ud0c0\uc784\uc5d0 \ud574\ub2f9\ud558\ub294 Flame graph \ub97c \ubcf4\uc5ec\uc900\ub2e4. --signal= SIGNAL @act[,act,...] : \uc8fc\uc5b4\uc9c4 SIGNAL \uc744 \ubc1b\uc558\uc744 \ub54c \uc8fc\uc5b4\uc9c4 \uc561\uc158\uc744 \uc2e4\ud589\ud55c\ub2e4. --sort-column= INDEX : INDEX \uc5f4\uc744 \uae30\uc900\uc73c\ub85c diff \ubcf4\uace0\uc11c\ub97c \uc815\ub82c\ud55c\ub2e4. (\uae30\ubcf8\uac12: 2) --srcline : \uac00\ub2a5\ud55c \uac01 \ud568\uc218\ub4e4\uc758 \uc18c\uc2a4 \uc904\ubc88\ud638\ub97c \ud45c\uc2dc\ud55c\ub2e4. --symbols : \uae30\ub85d\ub41c \uc815\ubcf4 \ub300\uc2e0\uc5d0 \uc2ec\ubcfc(symbol) \ud14c\uc774\ube14\uc744 \ucd9c\ub825\ud55c\ub2e4. -s, --sort= KEY [, KEY ,...] : \uc8fc\uc5b4\uc9c4 \ud0a4\ub97c \uae30\ubc18\uc73c\ub85c \ud568\uc218\ub4e4\uc744 \uc815\ub82c\ud55c\ub2e4. (\uae30\ubcf8\uac12: 2) -S, --script= SCRIPT : \ud568\uc218\uc758 \uc2dc\uc791\uacfc \ub05d\uc5d0 \uc8fc\uc5b4\uc9c4 SCRIPT \ub97c \uc218\ud589\ud55c\ub2e4. -t, --time-filter= TIME : \uc124\uc815\ud55c \uc2dc\uac04 \uc774\ud558\ub85c \uc218\ud589\ub41c \ud568\uc218\ub294 \ud45c\uc2dc\ud558\uc9c0 \uc54a\uac8c \ud55c\ub2e4. --task : \uc77c\ubc18\uc801\uc778 \ud568\uc218 \uadf8\ub798\ud504 \ub300\uc2e0 \ud0dc\uc2a4\ud06c \uadf8\ub798\ud504\ub97c \ucd9c\ub825\ud55c\ub2e4. --task-newline : \ud0dc\uc2a4\ud06c\uac00 \ubcc0\uacbd\ub418\uba74 \ube48 \uacf5\ubc31 \ud55c\uc904\uc744 \ucd94\uac00\ud55c\ub2e4. --tid= TID [, TID ,...] : \uc8fc\uc5b4\uc9c4 \ud0dc\uc2a4\ud06c\uc5d0 \uc758\ud574 \ud638\ucd9c\ub41c \ud568\uc218\ub4e4\ub9cc \ucd9c\ub825\ud55c\ub2e4. --time : \uc2dc\uac04 \uc815\ubcf4\ub97c \ucd9c\ub825\ud55c\ub2e4. -T, --trigger= FUNC @act[,act,...] : FUNC \uc758 \ud2b8\ub9ac\uac70\ub97c \uc124\uc815\ud55c\ub2e4. -U, --unpatch= FUNC : \uc8fc\uc5b4\uc9c4 FUNC \ud568\uc218\uc5d0 \ub300\ud574 \ub3d9\uc801 \ud328\uce58\ub97c \uc801\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. --with-syms= DIR : DIR \ub514\ub809\ud130\ub9ac \uc548\uc5d0 \uc788\ub294 \uc2ec\ubcfc \ud30c\uc77c\ub4e4\uc744 \uc0ac\uc6a9\ud55c\ub2e4. -W, --watch= POINT : POINT \uac00 \ubcc0\uacbd\ub418\ub294 \uacbd\uc6b0\ub97c \uac10\uc2dc\ud558\uace0 \uae30\ub85d\ud55c\ub2e4. -Z, --size-filter= SIZE : SIZE \ubcf4\ub2e4 \ud070 \ud568\uc218\ub4e4\uc5d0 \ub3d9\uc801 \ud328\uce6d\uc744 \uc801\uc6a9\ud55c\ub2e4. \ub354 \uad6c\uccb4\uc801\uc778 \ubcf4\uc870 \uba85\ub839\ubcc4 \uc635\uc158\uc744 \ud655\uc778\ud558\uae30 \uc704\ud574\uc120, \uc544\ub798\uc5d0 \ub098\uc5f4\ub41c \uba54\ub274\uc5bc \ud398\uc774\uc9c0\ub97c \ucc38\uc870\ud558\ub77c.","title":"\ubcf4\uc870 \uba85\ub839\ubcc4 \uc635\uc158"},{"location":"ko/uftrace/#_7","text":"uftrace-live (1), uftrace-record (1), uftrace-replay (1), uftrace-report (1), uftrace-info (1), uftrace-dump (1), uftrace-recv (1), uftrace-graph (1), uftrace-script (1), uftrace-tui (1)","title":"\ud568\uaed8 \ubcf4\uae30"},{"location":"ko/uftrace/#_8","text":"\ub958\uc900\ud638 ruujoon93@gmail.com , \uae40\uc131\uc9c4 mirusu400@naver.com","title":"\ubc88\uc5ed\uc790"}]}